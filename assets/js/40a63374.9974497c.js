"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[692],{3905:function(t,e,n){n.d(e,{Zo:function(){return d},kt:function(){return s}});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function p(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var o=a.createContext({}),m=function(t){var e=a.useContext(o),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},d=function(t){var e=m(t.components);return a.createElement(o.Provider,{value:e},t.children)},k={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,o=t.parentName,d=p(t,["components","mdxType","originalType","parentName"]),u=m(n),s=r,N=u["".concat(o,".").concat(s)]||u[s]||k[s]||l;return n?a.createElement(N,i(i({ref:e},d),{},{components:n})):a.createElement(N,i({ref:e},d))}));function s(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,i=new Array(l);i[0]=u;var p={};for(var o in e)hasOwnProperty.call(e,o)&&(p[o]=e[o]);p.originalType=t,p.mdxType="string"==typeof t?t:r,i[1]=p;for(var m=2;m<l;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},166:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return p},contentTitle:function(){return o},metadata:function(){return m},toc:function(){return d},default:function(){return u}});var a=n(3117),r=n(102),l=(n(7294),n(3905)),i=["components"],p={},o="InputChannel",m={unversionedId:"classes/InputChannel",id:"classes/InputChannel",isDocsHomePage:!1,title:"InputChannel",description:"The InputChannel class represents a MIDI input channel (1-16) from a single input device. This",source:"@site/api/classes/InputChannel.md",sourceDirName:"classes",slug:"/classes/InputChannel",permalink:"/webmidi/api/classes/InputChannel",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Input",permalink:"/webmidi/api/classes/Input"},next:{title:"Listener",permalink:"/webmidi/api/classes/Listener"}},d=[{value:"<code>Constructor</code>",id:"constructor",children:[],level:3},{value:"Properties",id:"properties",children:[{value:"<code>.EVENTS</code>",id:"EVENTS",children:[],level:3},{value:"<code>.eventCount</code>",id:"eventCount",children:[],level:3},{value:"<code>.eventMap</code>",id:"eventMap",children:[],level:3},{value:"<code>.eventNames</code>",id:"eventNames",children:[],level:3},{value:"<code>.eventsSuspended</code>",id:"eventsSuspended",children:[],level:3},{value:"<code>.input</code>",id:"input",children:[],level:3},{value:"<code>.notesState</code>",id:"notesState",children:[],level:3},{value:"<code>.number</code>",id:"number",children:[],level:3},{value:"<code>.octaveOffset</code>",id:"octaveOffset",children:[],level:3},{value:"<code>.parameterNumberEventsEnabled</code>",id:"parameterNumberEventsEnabled",children:[],level:3}],level:2},{value:"Methods",id:"methods",children:[{value:"<code>.addListener(...)</code>",id:"addListener",children:[],level:3},{value:"<code>.addOneTimeListener(...)</code>",id:"addOneTimeListener",children:[],level:3},{value:"<code>.destroy()</code>",id:"destroy",children:[],level:3},{value:"<code>.emit(...)</code>",id:"emit",children:[],level:3},{value:"<code>.getCcNameByNumber(...)</code>",id:"getCcNameByNumber",children:[],level:3},{value:"<code>.getChannelModeByNumber(...)</code>",id:"getChannelModeByNumber",children:[],level:3},{value:"<code>.getListenerCount(...)</code>",id:"getListenerCount",children:[],level:3},{value:"<code>.getListeners(...)</code>",id:"getListeners",children:[],level:3},{value:"<code>.getNoteState(...)</code>",id:"getNoteState",children:[],level:3},{value:"<code>.hasListener(...)</code>",id:"hasListener",children:[],level:3},{value:"<code>.removeListener(...)</code>",id:"removeListener",children:[],level:3},{value:"<code>.suspendEvent(...)</code>",id:"suspendEvent",children:[],level:3},{value:"<code>.unsuspendEvent(...)</code>",id:"unsuspendEvent",children:[],level:3},{value:"<code>.waitFor(...)</code>",id:"waitFor",children:[],level:3}],level:2},{value:"Events",id:"events",children:[{value:"<code>&quot;allnotesoff&quot;</code>",id:"event-allnotesoff",children:[],level:3},{value:"<code>&quot;allsoundoff&quot;</code>",id:"event-allsoundoff",children:[],level:3},{value:"<code>&quot;channelaftertouch&quot;</code>",id:"event-channelaftertouch",children:[],level:3},{value:"<code>&quot;controlchange&quot;</code>",id:"event-controlchange",children:[],level:3},{value:"<code>&quot;keyaftertouch&quot;</code>",id:"event-keyaftertouch",children:[],level:3},{value:"<code>&quot;localcontrol&quot;</code>",id:"event-localcontrol",children:[],level:3},{value:"<code>&quot;midimessage&quot;</code>",id:"event-midimessage",children:[],level:3},{value:"<code>&quot;monomode&quot;</code>",id:"event-monomode",children:[],level:3},{value:"<code>&quot;noteoff&quot;</code>",id:"event-noteoff",children:[],level:3},{value:"<code>&quot;noteon&quot;</code>",id:"event-noteon",children:[],level:3},{value:"<code>&quot;omnimode&quot;</code>",id:"event-omnimode",children:[],level:3},{value:"<code>&quot;pitchbend&quot;</code>",id:"event-pitchbend",children:[],level:3},{value:"<code>&quot;programchange&quot;</code>",id:"event-programchange",children:[],level:3},{value:"<code>&quot;resetallcontrollers&quot;</code>",id:"event-resetallcontrollers",children:[],level:3},{value:"<code>&quot;nrpn:databuttondecrement&quot;</code> {#event-nrpn:databuttondecrement}",id:"nrpndatabuttondecrement-event-nrpndatabuttondecrement",children:[],level:3},{value:"<code>&quot;nrpn:databuttonincrement&quot;</code> {#event-nrpn:databuttonincrement}",id:"nrpndatabuttonincrement-event-nrpndatabuttonincrement",children:[],level:3},{value:"<code>&quot;nrpn:dataentrycoarse&quot;</code> {#event-nrpn:dataentrycoarse}",id:"nrpndataentrycoarse-event-nrpndataentrycoarse",children:[],level:3},{value:"<code>&quot;nrpn:dataentryfine&quot;</code> {#event-nrpn:dataentryfine}",id:"nrpndataentryfine-event-nrpndataentryfine",children:[],level:3},{value:"<code>&quot;rpn:databuttondecrement&quot;</code> {#event-rpn:databuttondecrement}",id:"rpndatabuttondecrement-event-rpndatabuttondecrement",children:[],level:3},{value:"<code>&quot;rpn:databuttonincrement&quot;</code> {#event-rpn:databuttonincrement}",id:"rpndatabuttonincrement-event-rpndatabuttonincrement",children:[],level:3},{value:"<code>&quot;rpn:dataentrycoarse&quot;</code> {#event-rpn:dataentrycoarse}",id:"rpndataentrycoarse-event-rpndataentrycoarse",children:[],level:3},{value:"<code>&quot;rpn:dataentryfine&quot;</code> {#event-rpn:dataentryfine}",id:"rpndataentryfine-event-rpndataentryfine",children:[],level:3}],level:2}],k={toc:d};function u(t){var e=t.components,n=(0,r.Z)(t,i);return(0,l.kt)("wrapper",(0,a.Z)({},k,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"inputchannel"},"InputChannel"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"InputChannel")," class represents a MIDI input channel (1-16) from a single input device. This\nobject is derived from the host's MIDI subsystem and cannot be instantiated directly."),(0,l.kt)("p",null,"All 16 ",(0,l.kt)("inlineCode",{parentName:"p"},"InputChannel")," objects can be found inside the input's ",(0,l.kt)("a",{parentName:"p",href:"Input#channels"},"channels"),"\nproperty."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Since"),": 3.0.0"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Extends"),": EventEmitter"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Fires"),": ",(0,l.kt)("a",{parentName:"p",href:"InputChannel#event:midimessage"},(0,l.kt)("inlineCode",{parentName:"a"},"midimessage")),", ",(0,l.kt)("a",{parentName:"p",href:"InputChannel#event:noteoff"},(0,l.kt)("inlineCode",{parentName:"a"},"noteoff")),", ",(0,l.kt)("a",{parentName:"p",href:"InputChannel#event:noteon"},(0,l.kt)("inlineCode",{parentName:"a"},"noteon")),", ",(0,l.kt)("a",{parentName:"p",href:"InputChannel#event:keyaftertouch"},(0,l.kt)("inlineCode",{parentName:"a"},"keyaftertouch")),", ",(0,l.kt)("a",{parentName:"p",href:"InputChannel#event:controlchange"},(0,l.kt)("inlineCode",{parentName:"a"},"controlchange")),", ",(0,l.kt)("a",{parentName:"p",href:"InputChannel#event:programchange"},(0,l.kt)("inlineCode",{parentName:"a"},"programchange")),", ",(0,l.kt)("a",{parentName:"p",href:"InputChannel#event:channelaftertouch"},(0,l.kt)("inlineCode",{parentName:"a"},"channelaftertouch")),", ",(0,l.kt)("a",{parentName:"p",href:"InputChannel#event:pitchbend"},(0,l.kt)("inlineCode",{parentName:"a"},"pitchbend")),", ",(0,l.kt)("a",{parentName:"p",href:"InputChannel#event:allnotesoff"},(0,l.kt)("inlineCode",{parentName:"a"},"allnotesoff")),", ",(0,l.kt)("a",{parentName:"p",href:"InputChannel#event:allsoundoff"},(0,l.kt)("inlineCode",{parentName:"a"},"allsoundoff")),", ",(0,l.kt)("a",{parentName:"p",href:"InputChannel#event:localcontrol"},(0,l.kt)("inlineCode",{parentName:"a"},"localcontrol")),", ",(0,l.kt)("a",{parentName:"p",href:"InputChannel#event:monomode"},(0,l.kt)("inlineCode",{parentName:"a"},"monomode")),", ",(0,l.kt)("a",{parentName:"p",href:"InputChannel#event:omnimode"},(0,l.kt)("inlineCode",{parentName:"a"},"omnimode")),", ",(0,l.kt)("a",{parentName:"p",href:"InputChannel#event:resetallcontrollers"},(0,l.kt)("inlineCode",{parentName:"a"},"resetallcontrollers")),", ",(0,l.kt)("a",{parentName:"p",href:"InputChannel#event:nrpndataentrycoarse"},(0,l.kt)("inlineCode",{parentName:"a"},"nrpndataentrycoarse")),", ",(0,l.kt)("a",{parentName:"p",href:"InputChannel#event:nrpndataentryfine"},(0,l.kt)("inlineCode",{parentName:"a"},"nrpndataentryfine")),", ",(0,l.kt)("a",{parentName:"p",href:"InputChannel#event:nrpndatabuttonincrement"},(0,l.kt)("inlineCode",{parentName:"a"},"nrpndatabuttonincrement")),", ",(0,l.kt)("a",{parentName:"p",href:"InputChannel#event:nrpndatabuttondecrement"},(0,l.kt)("inlineCode",{parentName:"a"},"nrpndatabuttondecrement")),", ",(0,l.kt)("a",{parentName:"p",href:"InputChannel#event:rpndataentrycoarse"},(0,l.kt)("inlineCode",{parentName:"a"},"rpndataentrycoarse")),", ",(0,l.kt)("a",{parentName:"p",href:"InputChannel#event:rpndataentryfine"},(0,l.kt)("inlineCode",{parentName:"a"},"rpndataentryfine")),", ",(0,l.kt)("a",{parentName:"p",href:"InputChannel#event:rpndatabuttonincrement"},(0,l.kt)("inlineCode",{parentName:"a"},"rpndatabuttonincrement")),", ",(0,l.kt)("a",{parentName:"p",href:"InputChannel#event:rpndatabuttondecrement"},(0,l.kt)("inlineCode",{parentName:"a"},"rpndatabuttondecrement"))),(0,l.kt)("h3",{id:"constructor"},(0,l.kt)("inlineCode",{parentName:"h3"},"Constructor")),(0,l.kt)("p",null,"  ",(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("inlineCode",{parentName:"p"},"new InputChannel(input, number)"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"input"))),(0,l.kt)("td",{parentName:"tr",align:null},"Input"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"The ",(0,l.kt)("inlineCode",{parentName:"td"},"Input")," object this channel belongs to")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"number"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"The MIDI channel's number (1-16)")))),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("h3",{id:"EVENTS"},(0,l.kt)("inlineCode",{parentName:"h3"},".EVENTS")),(0,l.kt)("p",null,"Array of channel-specific event names that can be listened to."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Type"),": Array.","<","string",">",(0,l.kt)("br",null),"\n",(0,l.kt)("strong",{parentName:"p"},"Attributes"),": read-only",(0,l.kt)("br",null),"\n",(0,l.kt)("strong",{parentName:"p"},"Attributes"),": static"),(0,l.kt)("h3",{id:"eventCount"},(0,l.kt)("inlineCode",{parentName:"h3"},".eventCount")),(0,l.kt)("p",null,"The number of unique events that have registered listeners"),(0,l.kt)("p",null,"Note: this excludes global events registered with ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT")," because they are not\ntied to a specific event."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Type"),": number",(0,l.kt)("br",null),"\n",(0,l.kt)("strong",{parentName:"p"},"Attributes"),": read-only",(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"eventMap"},(0,l.kt)("inlineCode",{parentName:"h3"},".eventMap")),(0,l.kt)("p",null,"An object containing a property for each event with at least one registered listener. Each\nevent property contains an array of all the ",(0,l.kt)("inlineCode",{parentName:"p"},"Listener")," objects registered for the event."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Type"),": Object",(0,l.kt)("br",null),"\n",(0,l.kt)("strong",{parentName:"p"},"Attributes"),": read-only",(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"eventNames"},(0,l.kt)("inlineCode",{parentName:"h3"},".eventNames")),(0,l.kt)("p",null,"An array of all the unique event names for which the emitter has at least one registered\nlistener."),(0,l.kt)("p",null,"Note: this excludes global events registered with ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT")," because they are not\ntied to a specific event."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Type"),": Array.","<","string",">",(0,l.kt)("br",null),"\n",(0,l.kt)("strong",{parentName:"p"},"Attributes"),": read-only",(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"eventsSuspended"},(0,l.kt)("inlineCode",{parentName:"h3"},".eventsSuspended")),(0,l.kt)("p",null,"Whether or not the execution of function callbacks is currently suspended for this whole\nemitter"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Type"),": boolean",(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"input"},(0,l.kt)("inlineCode",{parentName:"h3"},".input")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Since"),": 3.0",(0,l.kt)("br",null)),(0,l.kt)("p",null,"The ",(0,l.kt)("a",{parentName:"p",href:"Input"},(0,l.kt)("inlineCode",{parentName:"a"},"Input"))," this channel belongs to"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Type"),": Input",(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"notesState"},(0,l.kt)("inlineCode",{parentName:"h3"},".notesState")),(0,l.kt)("p",null,"Contains the current playing state of all MIDI notes of this channel (0-127). The state is\n",(0,l.kt)("inlineCode",{parentName:"p"},"true")," for a currently playing note and ",(0,l.kt)("inlineCode",{parentName:"p"},"false")," otherwise."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Type"),": Array.","<","boolean",">",(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"number"},(0,l.kt)("inlineCode",{parentName:"h3"},".number")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Since"),": 3.0",(0,l.kt)("br",null)),(0,l.kt)("p",null,"This channel's MIDI number (1-16)"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Type"),": number",(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"octaveOffset"},(0,l.kt)("inlineCode",{parentName:"h3"},".octaveOffset")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Since"),": 3.0",(0,l.kt)("br",null)),(0,l.kt)("p",null,"An integer to offset the reported octave of incoming note-specific messages (",(0,l.kt)("inlineCode",{parentName:"p"},"noteon"),",\n",(0,l.kt)("inlineCode",{parentName:"p"},"noteoff")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"keyaftertouch"),"). By default, middle C (MIDI note number 60) is placed on the 4th\noctave (C4)."),(0,l.kt)("p",null,"If, for example, ",(0,l.kt)("inlineCode",{parentName:"p"},"octaveOffset")," is set to 2, MIDI note number 60 will be reported as C6. If\n",(0,l.kt)("inlineCode",{parentName:"p"},"octaveOffset")," is set to -1, MIDI note number 60 will be reported as C3."),(0,l.kt)("p",null,"Note that this value is combined with the global offset value defined on the ",(0,l.kt)("inlineCode",{parentName:"p"},"WebMidi")," object\nand with the value defined on the parent ",(0,l.kt)("inlineCode",{parentName:"p"},"Input")," object."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Type"),": number",(0,l.kt)("br",null)),(0,l.kt)("h3",{id:"parameterNumberEventsEnabled"},(0,l.kt)("inlineCode",{parentName:"h3"},".parameterNumberEventsEnabled")),(0,l.kt)("p",null,"Indicates whether events for ",(0,l.kt)("strong",{parentName:"p"},"Non-Registered Parameter Number")," should be dispatched. NRPNs\nare composed of a sequence of specific ",(0,l.kt)("strong",{parentName:"p"},"control change")," messages. When a valid sequence of\nsuch control change messages is received, an ",(0,l.kt)("inlineCode",{parentName:"p"},"nrpn")," event will fire."),(0,l.kt)("p",null,"If an invalid or\nout-of-order control change message is received, it will fall through the collector logic and\nall buffered control change messages will be discarded as incomplete."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Type"),": boolean",(0,l.kt)("br",null)),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("h3",{id:"addListener"},(0,l.kt)("inlineCode",{parentName:"h3"},".addListener(...)")),(0,l.kt)("p",null,"Adds a listener for the specified event. It returns the ",(0,l.kt)("a",{parentName:"p",href:"Listener"},(0,l.kt)("strong",{parentName:"a"},"Listener"))," object\nthat was created and attached to the event."),(0,l.kt)("p",null,"To attach a global listener that will be triggered for any events, use ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT"),"\nas the first parameter. Note that a global listener will also be triggered by non-registered\nevents. For example, this will trigger global listeners: ",(0,l.kt)("inlineCode",{parentName:"p"},"myEmitter.emit('bogus')"),"."),(0,l.kt)("p",null,"  ",(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Signature: ",(0,l.kt)("inlineCode",{parentName:"p"},"addListener(event, callback, [options])"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"event"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"The event to listen to")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"callback"))),(0,l.kt)("td",{parentName:"tr",align:null},"EventEmitter~callback"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"The callback function to execute when the event occurs.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"options")),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"Object"),(0,l.kt)("td",{parentName:"tr",align:null},"{}"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"options.context")),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"Object"),(0,l.kt)("td",{parentName:"tr",align:null},"this"),(0,l.kt)("td",{parentName:"tr",align:null},"The value of ",(0,l.kt)("inlineCode",{parentName:"td"},"this")," in the callback function.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"options.prepend")),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether the listener should be added at the beginning of the listeners array")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"options.duration")),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"Infinity"),(0,l.kt)("td",{parentName:"tr",align:null},"The number of milliseconds before the listener automatically expires.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"options.remaining")),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"Infinity"),(0,l.kt)("td",{parentName:"tr",align:null},"The number of times after which the callback should automatically be removed.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"options.arguments")),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"array"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"An array of arguments which will be passed separately to the callback function. This array is stored in the ",(0,l.kt)("a",{parentName:"td",href:"Listener#arguments"},(0,l.kt)("strong",{parentName:"a"},"arguments"))," property of the ",(0,l.kt)("a",{parentName:"td",href:"Listener"},(0,l.kt)("strong",{parentName:"a"},"Listener"))," object and can be retrieved or modified as desired.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"Listener")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The newly created ",(0,l.kt)("a",{parentName:"p",href:"Listener"},(0,l.kt)("strong",{parentName:"a"},"Listener"))," object.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Throws"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"TypeError")," : The ",(0,l.kt)("inlineCode",{parentName:"li"},"event")," parameter must be a string or ",(0,l.kt)("inlineCode",{parentName:"li"},"EventEmitter.ANY_EVENT"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"TypeError")," : The ",(0,l.kt)("inlineCode",{parentName:"li"},"callback")," parameter must be a function.")),(0,l.kt)("h3",{id:"addOneTimeListener"},(0,l.kt)("inlineCode",{parentName:"h3"},".addOneTimeListener(...)")),(0,l.kt)("p",null,"Adds a one-time listener for the specified event. The listener will be executed once and then\ndestroyed. It returns the ",(0,l.kt)("a",{parentName:"p",href:"Listener"},(0,l.kt)("strong",{parentName:"a"},"Listener"))," object that was created and attached\nto the event."),(0,l.kt)("p",null,"To attach a global listener that will be triggered for any events, use ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT"),"\nas the first parameter. Note that a global listener will also be triggered by non-registered\nevents. For example, this will trigger global listeners: ",(0,l.kt)("inlineCode",{parentName:"p"},"myEmitter.emit('bogus')"),"."),(0,l.kt)("p",null,"  ",(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Signature: ",(0,l.kt)("inlineCode",{parentName:"p"},"addOneTimeListener(event, callback, [options])"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"event"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"The event to listen to")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"callback"))),(0,l.kt)("td",{parentName:"tr",align:null},"EventEmitter~callback"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"The callback function to execute when the event occurs")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"options")),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"Object"),(0,l.kt)("td",{parentName:"tr",align:null},"{}"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"options.context")),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"Object"),(0,l.kt)("td",{parentName:"tr",align:null},"this"),(0,l.kt)("td",{parentName:"tr",align:null},"The context to invoke the callback function in.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"options.prepend")),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether the listener should be added at the beginning of the listeners array")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"options.duration")),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"Infinity"),(0,l.kt)("td",{parentName:"tr",align:null},"The number of milliseconds before the listener automatically expires.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"options.arguments")),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"array"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"An array of arguments which will be passed separately to the callback function. This array is stored in the ",(0,l.kt)("a",{parentName:"td",href:"Listener#arguments"},(0,l.kt)("strong",{parentName:"a"},"arguments"))," property of the ",(0,l.kt)("a",{parentName:"td",href:"Listener"},(0,l.kt)("strong",{parentName:"a"},"Listener"))," object and can be retrieved or modified as desired.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"Listener")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The newly created ",(0,l.kt)("a",{parentName:"p",href:"Listener"},(0,l.kt)("strong",{parentName:"a"},"Listener"))," object.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Throws"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"TypeError")," : The ",(0,l.kt)("inlineCode",{parentName:"li"},"event")," parameter must be a string or ",(0,l.kt)("inlineCode",{parentName:"li"},"EventEmitter.ANY_EVENT"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"TypeError")," : The ",(0,l.kt)("inlineCode",{parentName:"li"},"callback")," parameter must be a function.")),(0,l.kt)("h3",{id:"destroy"},(0,l.kt)("inlineCode",{parentName:"h3"},".destroy()")),(0,l.kt)("p",null,"Destroys the ",(0,l.kt)("inlineCode",{parentName:"p"},"Input")," by removing all listeners and severing the link with the MIDI subsystem's\ninput."),(0,l.kt)("h3",{id:"emit"},(0,l.kt)("inlineCode",{parentName:"h3"},".emit(...)")),(0,l.kt)("p",null,"Executes the callback functions of all the ",(0,l.kt)("inlineCode",{parentName:"p"},"Listener")," objects registered for a given event. The\ncallback functions are passed the additional arguments specifed for ",(0,l.kt)("inlineCode",{parentName:"p"},"emit()")," (if any) followed\nby the arguments present in the ",(0,l.kt)("inlineCode",{parentName:"p"},"arguments")," property of the ",(0,l.kt)("inlineCode",{parentName:"p"},"Listener")," object (if any). For\nexample:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'let myEmitter = new EventEmitter();\nmyEmitter.addListener("test", fn, {arguments: ["a", "b", "c"]});\nmyEmitter.emit("test", "y", "z");\n')),(0,l.kt)("p",null,"In this example, the function will be called as such: ",(0,l.kt)("inlineCode",{parentName:"p"},'fn("y", "z", "a", "b", "c");')),(0,l.kt)("p",null,"If the ",(0,l.kt)("inlineCode",{parentName:"p"},"eventsSuspended")," property of the ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter")," or the ",(0,l.kt)("inlineCode",{parentName:"p"},"suspended")," property of the\n",(0,l.kt)("inlineCode",{parentName:"p"},"Listener")," is ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),", the callback functions will not be executed."),(0,l.kt)("p",null,"This function returns an array containing the return values of each of the callbacks."),(0,l.kt)("p",null,"It should be noted that the regular listeners are triggered first followed by the global\nlisteners (added with ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT"),")."),(0,l.kt)("p",null,"  ",(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Signature: ",(0,l.kt)("inlineCode",{parentName:"p"},"emit(event, ...args)"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"event"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"The event")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"args"))),(0,l.kt)("td",{parentName:"tr",align:null},"*"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Arbitrary number of arguments to pass along to the callback functions")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"Array")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"An array containing the return value of each of the executed listener\nfunctions")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Throws"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"TypeError")," : The ",(0,l.kt)("inlineCode",{parentName:"li"},"event")," parameter must be a string.")),(0,l.kt)("h3",{id:"getCcNameByNumber"},(0,l.kt)("inlineCode",{parentName:"h3"},".getCcNameByNumber(...)")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Since"),": 2.0.0",(0,l.kt)("br",null)),(0,l.kt)("p",null,"Returns the name of a control change message matching the specified number. Some valid control\nchange numbers do not have a specific name or purpose assigned in the MIDI\n",(0,l.kt)("a",{parentName:"p",href:"https://midi.org/specifications-old/item/table-3-control-change-messages-data-bytes-2"},"spec"),".\nIn this case, the method returns ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,l.kt)("p",null,"  ",(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Signature: ",(0,l.kt)("inlineCode",{parentName:"p"},"getCcNameByNumber(number)"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"number"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"An integer representing the control change message")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The matching control change name or ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," if not match was\nfound.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Throws"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"RangeError")," : Invalid control change number.")),(0,l.kt)("h3",{id:"getChannelModeByNumber"},(0,l.kt)("inlineCode",{parentName:"h3"},".getChannelModeByNumber(...)")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Since"),": 2.0.0",(0,l.kt)("br",null)),(0,l.kt)("p",null,"Returns the channel mode name matching the specified number. If no match is found, the function\nreturns ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,l.kt)("p",null,"  ",(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Signature: ",(0,l.kt)("inlineCode",{parentName:"p"},"getChannelModeByNumber(number)"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"number"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"An integer representing the channel mode message.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"false")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The name of the matching channel mode or ",(0,l.kt)("inlineCode",{parentName:"p"},"false")," if not match could be\nfound.")),(0,l.kt)("h3",{id:"getListenerCount"},(0,l.kt)("inlineCode",{parentName:"h3"},".getListenerCount(...)")),(0,l.kt)("p",null,"Returns the number of listeners registered for a specific event."),(0,l.kt)("p",null,"Please note that global events (those added with ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT"),') do not count\ntowards the remaining number for a "regular" event. To get the number of global listeners,\nspecifically use ',(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT")," as the parameter."),(0,l.kt)("p",null,"  ",(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Signature: ",(0,l.kt)("inlineCode",{parentName:"p"},"getListenerCount(event)"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"event"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"The event")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The number of listeners registered for the specified event.")),(0,l.kt)("h3",{id:"getListeners"},(0,l.kt)("inlineCode",{parentName:"h3"},".getListeners(...)")),(0,l.kt)("p",null,"Returns an array of all the ",(0,l.kt)("inlineCode",{parentName:"p"},"Listener")," objects that will be triggered for a specific event."),(0,l.kt)("p",null,"Please note that global events (those added with ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT"),') are not returned for\n"regular" events. To get the list of global listeners, specifically use\n',(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT")," as the parameter."),(0,l.kt)("p",null,"  ",(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Signature: ",(0,l.kt)("inlineCode",{parentName:"p"},"getListeners(event)"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"event"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"The event to get listeners for")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"Array.<Listener>")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"An array of ",(0,l.kt)("inlineCode",{parentName:"p"},"Listener")," objects")),(0,l.kt)("h3",{id:"getNoteState"},(0,l.kt)("inlineCode",{parentName:"h3"},".getNoteState(...)")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Since"),": version 3.0.0",(0,l.kt)("br",null)),(0,l.kt)("p",null,"Return the playing status of the specified note. The ",(0,l.kt)("inlineCode",{parentName:"p"},"note")," parameter can be an unsigned\ninteger (0-127), a note identifier (",(0,l.kt)("inlineCode",{parentName:"p"},'"C4"'),", ",(0,l.kt)("inlineCode",{parentName:"p"},'"G#5"'),", etc.) or a ",(0,l.kt)("a",{parentName:"p",href:"Note"},"Note")," object."),(0,l.kt)("p",null,"If a note identifier or Note object is passed in, the method will take into account any\n",(0,l.kt)("inlineCode",{parentName:"p"},"octaveOffset")," defined."),(0,l.kt)("p",null,"  ",(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Signature: ",(0,l.kt)("inlineCode",{parentName:"p"},"getNoteState([input])"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"input")),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("h3",{id:"hasListener"},(0,l.kt)("inlineCode",{parentName:"h3"},".hasListener(...)")),(0,l.kt)("p",null,"Returns ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," if the specified event has at least one registered listener. If no event is\nspecified, the method returns ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," if any event has at least one listener registered (this\nincludes global listeners registered to ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT"),")."),(0,l.kt)("p",null,"Note: to specifically check for global listeners added with ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT"),", use\n",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT")," as the parameter."),(0,l.kt)("p",null,"  ",(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Signature: ",(0,l.kt)("inlineCode",{parentName:"p"},"hasListener([event], [callback])"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"event")),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"The event to check")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"callback")),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"function"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"The actual function that was added to the event or the ",(0,l.kt)("a",{parentName:"td",href:"Listener"},"Listener")," object returned by ",(0,l.kt)("inlineCode",{parentName:"td"},"addListener()"),".")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("h3",{id:"removeListener"},(0,l.kt)("inlineCode",{parentName:"h3"},".removeListener(...)")),(0,l.kt)("p",null,"Removes all the listeners that match the specified criterias. If no parameters are passed, all\nlisteners will be removed. If only the ",(0,l.kt)("inlineCode",{parentName:"p"},"event")," parameter is passed, all listeners for that\nevent will be removed. You can remove global listeners by using ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT")," as the\nfirst parameter."),(0,l.kt)("p",null,"To use more granular options, you must at least define the ",(0,l.kt)("inlineCode",{parentName:"p"},"event"),". Then, you can specify the\ncallback to match or one or more of the additional options."),(0,l.kt)("p",null,"  ",(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Signature: ",(0,l.kt)("inlineCode",{parentName:"p"},"removeListener([event], [callback], [options])"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"event")),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"The event name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"callback")),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"EventEmitter~callback"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Only remove the listeners that match this exact callback function.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"options")),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"Object"),(0,l.kt)("td",{parentName:"tr",align:null},"{}"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"options.context")),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"*"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Only remove the listeners that have this exact context.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"options.remaining")),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Only remove the listener if it has exactly that many remaining times to be executed.")))),(0,l.kt)("h3",{id:"suspendEvent"},(0,l.kt)("inlineCode",{parentName:"h3"},".suspendEvent(...)")),(0,l.kt)("p",null,"Suspends execution of all callbacks functions registered for the specified event type."),(0,l.kt)("p",null,"You can suspend execution of callbacks registered with ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT")," by passing\n",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"suspendEvent()"),". Beware that this will not suspend all callbacks\nbut only those registered with ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT"),". While this may seem counter-intuitive\nat first glance, it allows the selective suspension of global listeners while leaving other\nliseners alone. If you truly want to suspends all callbacks for a specific ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter"),",\nsimply set its ",(0,l.kt)("inlineCode",{parentName:"p"},"eventsSuspended")," property to ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,l.kt)("p",null,"  ",(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Signature: ",(0,l.kt)("inlineCode",{parentName:"p"},"suspendEvent(event)"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"event"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"The event for which to suspend execution of all callback functions.")))),(0,l.kt)("h3",{id:"unsuspendEvent"},(0,l.kt)("inlineCode",{parentName:"h3"},".unsuspendEvent(...)")),(0,l.kt)("p",null,"Resumes execution of all suspended callback functions registered for the specified event type."),(0,l.kt)("p",null,"You can resume execution of callbacks registered with ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT")," by passing\n",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"unsuspendEvent()"),". Beware that this will not resume all callbacks\nbut only those registered with ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT"),". While this may seem counter-intuitive,\nit allows the selective unsuspension of global listeners while leaving other callbacks alone."),(0,l.kt)("p",null,"  ",(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Signature: ",(0,l.kt)("inlineCode",{parentName:"p"},"unsuspendEvent(event)"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"event"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"The event for which to resume execution of all callback functions.")))),(0,l.kt)("h3",{id:"waitFor"},(0,l.kt)("inlineCode",{parentName:"h3"},".waitFor(...)")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Attributes"),": async"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"waitFor()")," method is an async function which returns a promise. The promise is fulfilled\nwhen the specified event occurs. The event can be a regular event or ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT"),"\n(if you want to resolve as soon as any event is emitted)."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'// then/catch syntax\nconst ee = new EventEmitter();\nee.waitFor("ready").then(() => console.log("Ready!"));\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'// async/await syntax\nconst ee = new EventEmitter();\nawait ee.waitFor("ready");\nconsole.log("Ready!");\n')),(0,l.kt)("p",null,"If the ",(0,l.kt)("inlineCode",{parentName:"p"},"duration")," option is set, the promise will only be fulfilled if the event is emitted\nwithin the specified duration. If the event has not been fulfilled after the specified\nduration, the promise is rejected. This makes it super easy to wait for an event and timeout\nafter a certain time if the event is not triggered."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'// then/catch syntax\nconst ee = new EventEmitter();\nee.waitFor("ready", {duration: 100})\n.then(() => console.log("Ready!"))\n.catch(err => console.log(err);\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'// async/await syntax\nconst ee = new EventEmitter();\ntry {\n await ee.waitFor("ready", {duration: 100});\n console.log("Ready!");\n} catch(err) {\n  console.log(err);\n}\n')),(0,l.kt)("p",null,"  ",(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Signature: ",(0,l.kt)("inlineCode",{parentName:"p"},"waitFor(event, [options])"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"event"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"The event to wait for")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"options")),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"Object"),(0,l.kt)("td",{parentName:"tr",align:null},"{}"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"options.duration")),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"Infinity"),(0,l.kt)("td",{parentName:"tr",align:null},"The number of milliseconds to wait before the promise is automatically rejected.")))),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"events"},"Events"),(0,l.kt)("h3",{id:"event-allnotesoff"},(0,l.kt)("inlineCode",{parentName:"h3"},'"allnotesoff"')),(0,l.kt)("a",{id:"event:allnotesoff"}),(0,l.kt)("p",null,'Event emitted when an "all notes off" channel-mode MIDI message has been received.'),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event Properties")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"type"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"allnotesoff"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target"))),(0,l.kt)("td",{parentName:"tr",align:null},"InputChannel"),(0,l.kt)("td",{parentName:"tr",align:null},"The object that triggered the event (the ",(0,l.kt)("inlineCode",{parentName:"td"},"InputChannel")," object).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"message"))),(0,l.kt)("td",{parentName:"tr",align:null},"Message"),(0,l.kt)("td",{parentName:"tr",align:null},"A ",(0,l.kt)("inlineCode",{parentName:"td"},"Message")," object containing information about the incoming MIDI message.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"timestamp"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")))),(0,l.kt)("h3",{id:"event-allsoundoff"},(0,l.kt)("inlineCode",{parentName:"h3"},'"allsoundoff"')),(0,l.kt)("a",{id:"event:allsoundoff"}),(0,l.kt)("p",null,'Event emitted when an "all sound off" channel-mode MIDI message has been received.'),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event Properties")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"type"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"allsoundoff"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target"))),(0,l.kt)("td",{parentName:"tr",align:null},"InputChannel"),(0,l.kt)("td",{parentName:"tr",align:null},"The object that triggered the event (the ",(0,l.kt)("inlineCode",{parentName:"td"},"InputChannel")," object).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"message"))),(0,l.kt)("td",{parentName:"tr",align:null},"Message"),(0,l.kt)("td",{parentName:"tr",align:null},"A ",(0,l.kt)("inlineCode",{parentName:"td"},"Message")," object containing information about the incoming MIDI message.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"timestamp"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")))),(0,l.kt)("h3",{id:"event-channelaftertouch"},(0,l.kt)("inlineCode",{parentName:"h3"},'"channelaftertouch"')),(0,l.kt)("a",{id:"event:channelaftertouch"}),(0,l.kt)("p",null,"Event emitted when a control change MIDI message has been received."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event Properties")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"type"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"channelaftertouch"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target"))),(0,l.kt)("td",{parentName:"tr",align:null},"InputChannel"),(0,l.kt)("td",{parentName:"tr",align:null},"The object that triggered the event (the ",(0,l.kt)("inlineCode",{parentName:"td"},"InputChannel")," object).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"message"))),(0,l.kt)("td",{parentName:"tr",align:null},"Message"),(0,l.kt)("td",{parentName:"tr",align:null},"A ",(0,l.kt)("inlineCode",{parentName:"td"},"Message")," object containing information about the incoming MIDI message.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"timestamp"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"value"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The value expressed as a float between 0 and 1.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"rawValue"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The value expressed as an integer (between 0 and 127).")))),(0,l.kt)("h3",{id:"event-controlchange"},(0,l.kt)("inlineCode",{parentName:"h3"},'"controlchange"')),(0,l.kt)("a",{id:"event:controlchange"}),(0,l.kt)("p",null,"Event emitted when a ",(0,l.kt)("strong",{parentName:"p"},"control change")," MIDI message has been received."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event Properties")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"type"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"controlchange"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target"))),(0,l.kt)("td",{parentName:"tr",align:null},"InputChannel"),(0,l.kt)("td",{parentName:"tr",align:null},"The object that triggered the event (the ",(0,l.kt)("inlineCode",{parentName:"td"},"InputChannel")," object).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"message"))),(0,l.kt)("td",{parentName:"tr",align:null},"Message"),(0,l.kt)("td",{parentName:"tr",align:null},"A ",(0,l.kt)("inlineCode",{parentName:"td"},"Message")," object containing information about the incoming MIDI message.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"timestamp"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"controller"))),(0,l.kt)("td",{parentName:"tr",align:null},"object"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"controller.number"))),(0,l.kt)("td",{parentName:"tr",align:null},"object"),(0,l.kt)("td",{parentName:"tr",align:null},"The number of the controller.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"controller.name"))),(0,l.kt)("td",{parentName:"tr",align:null},"object"),(0,l.kt)("td",{parentName:"tr",align:null},"The usual name or function of the controller.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"value"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The value expressed as a float between 0 and 1.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"rawValue"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The value expressed as an integer (between 0 and 127).")))),(0,l.kt)("h3",{id:"event-keyaftertouch"},(0,l.kt)("inlineCode",{parentName:"h3"},'"keyaftertouch"')),(0,l.kt)("a",{id:"event:keyaftertouch"}),(0,l.kt)("p",null,"Event emitted when a ",(0,l.kt)("strong",{parentName:"p"},"key-specific aftertouch")," MIDI message has been received."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event Properties")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"type"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"keyaftertouch"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target"))),(0,l.kt)("td",{parentName:"tr",align:null},"InputChannel"),(0,l.kt)("td",{parentName:"tr",align:null},"The object that triggered the event (the ",(0,l.kt)("inlineCode",{parentName:"td"},"InputChannel")," object).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"message"))),(0,l.kt)("td",{parentName:"tr",align:null},"Message"),(0,l.kt)("td",{parentName:"tr",align:null},"A ",(0,l.kt)("inlineCode",{parentName:"td"},"Message")," object containing information about the incoming MIDI message.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"timestamp"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"identifier"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"The note identifier of the key to apply the aftertouch to. This includes any octave offset applied at the channel, input or global level.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"key"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The MIDI note number of the key to apply the aftertouch to. This includes any octave offset applied at the channel, input or global level.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"rawKey"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The MIDI note number of the key to apply the aftertouch to. This excludes any octave offset defined at the channel, input or global level.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"value"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The aftertouch amount expressed as a float between 0 and 1.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"rawValue"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The aftertouch amount expressed as an integer (between 0 and 127).")))),(0,l.kt)("h3",{id:"event-localcontrol"},(0,l.kt)("inlineCode",{parentName:"h3"},'"localcontrol"')),(0,l.kt)("a",{id:"event:localcontrol"}),(0,l.kt)("p",null,'Event emitted when a "local control" channel-mode MIDI message has been received. The value\nproperty of the event is set to either ',(0,l.kt)("inlineCode",{parentName:"p"},"true")," (local control on) of ",(0,l.kt)("inlineCode",{parentName:"p"},"false")," (local control\noff)."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event Properties")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"type"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"localcontrol"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target"))),(0,l.kt)("td",{parentName:"tr",align:null},"InputChannel"),(0,l.kt)("td",{parentName:"tr",align:null},"The object that triggered the event (the ",(0,l.kt)("inlineCode",{parentName:"td"},"InputChannel")," object).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"message"))),(0,l.kt)("td",{parentName:"tr",align:null},"Message"),(0,l.kt)("td",{parentName:"tr",align:null},"A ",(0,l.kt)("inlineCode",{parentName:"td"},"Message")," object containing information about the incoming MIDI message.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"timestamp"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"value"))),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"For local control on, the value is ",(0,l.kt)("inlineCode",{parentName:"td"},"true"),". For local control off, the value is ",(0,l.kt)("inlineCode",{parentName:"td"},"false"),".")))),(0,l.kt)("h3",{id:"event-midimessage"},(0,l.kt)("inlineCode",{parentName:"h3"},'"midimessage"')),(0,l.kt)("a",{id:"event:midimessage"}),(0,l.kt)("p",null,"Event emitted when a MIDI message of any kind is received by an ",(0,l.kt)("inlineCode",{parentName:"p"},"InputChannel")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event Properties")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target"))),(0,l.kt)("td",{parentName:"tr",align:null},"Input"),(0,l.kt)("td",{parentName:"tr",align:null},"The ",(0,l.kt)("inlineCode",{parentName:"td"},"InputChannel")," that triggered the event.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"message"))),(0,l.kt)("td",{parentName:"tr",align:null},"Message"),(0,l.kt)("td",{parentName:"tr",align:null},"A ",(0,l.kt)("inlineCode",{parentName:"td"},"Message")," object containing information about the incoming MIDI message.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"timestamp"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"type"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"midimessage"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"event.data"))),(0,l.kt)("td",{parentName:"tr",align:null},"Array"),(0,l.kt)("td",{parentName:"tr",align:null},"The MIDI message as an array of 8 bit values (deprecated, use the ",(0,l.kt)("inlineCode",{parentName:"td"},"message")," object instead).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"event.rawData"))),(0,l.kt)("td",{parentName:"tr",align:null},"Uint8Array"),(0,l.kt)("td",{parentName:"tr",align:null},"The raw MIDI message as a Uint8Array  (deprecated, use the ",(0,l.kt)("inlineCode",{parentName:"td"},"message")," object instead).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"event.statusByte"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The message's status byte  (deprecated, use the ",(0,l.kt)("inlineCode",{parentName:"td"},"message")," object instead).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"event.dataBytes"))),(0,l.kt)("td",{parentName:"tr",align:null},"Array.","<","number",">"),(0,l.kt)("td",{parentName:"tr",align:null},"The message's data bytes as an array of 0, 1 or 2 integers. This will be null for ",(0,l.kt)("inlineCode",{parentName:"td"},"sysex")," messages (deprecated, use the ",(0,l.kt)("inlineCode",{parentName:"td"},"message")," object instead).")))),(0,l.kt)("h3",{id:"event-monomode"},(0,l.kt)("inlineCode",{parentName:"h3"},'"monomode"')),(0,l.kt)("a",{id:"event:monomode"}),(0,l.kt)("p",null,'Event emitted when a "mono/poly mode" MIDI message has been received. The value property of\nthe event is set to either ',(0,l.kt)("inlineCode",{parentName:"p"},"true")," (mono mode on / poly mode off) or ",(0,l.kt)("inlineCode",{parentName:"p"},"false")," (mono mode off /\npoly mode on)."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event Properties")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"type"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"monomode"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target"))),(0,l.kt)("td",{parentName:"tr",align:null},"InputChannel"),(0,l.kt)("td",{parentName:"tr",align:null},"The object that triggered the event (the ",(0,l.kt)("inlineCode",{parentName:"td"},"InputChannel")," object).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"message"))),(0,l.kt)("td",{parentName:"tr",align:null},"Message"),(0,l.kt)("td",{parentName:"tr",align:null},"A ",(0,l.kt)("inlineCode",{parentName:"td"},"Message")," object containing information about the incoming MIDI message.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"timestamp"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"value"))),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"The value is ",(0,l.kt)("inlineCode",{parentName:"td"},"true")," for omni mode on and false for omni mode off.")))),(0,l.kt)("h3",{id:"event-noteoff"},(0,l.kt)("inlineCode",{parentName:"h3"},'"noteoff"')),(0,l.kt)("a",{id:"event:noteoff"}),(0,l.kt)("p",null,"Event emitted when a ",(0,l.kt)("strong",{parentName:"p"},"note off")," MIDI message has been received on the channel."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event Properties")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"type"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"noteoff"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target"))),(0,l.kt)("td",{parentName:"tr",align:null},"InputChannel"),(0,l.kt)("td",{parentName:"tr",align:null},"The object that triggered the event (the ",(0,l.kt)("inlineCode",{parentName:"td"},"InputChannel")," object).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"message"))),(0,l.kt)("td",{parentName:"tr",align:null},"Message"),(0,l.kt)("td",{parentName:"tr",align:null},"A ",(0,l.kt)("inlineCode",{parentName:"td"},"Message")," object containing information about the incoming MIDI message.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"timestamp"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"note"))),(0,l.kt)("td",{parentName:"tr",align:null},"object"),(0,l.kt)("td",{parentName:"tr",align:null},"A ",(0,l.kt)("a",{parentName:"td",href:"Note"},(0,l.kt)("inlineCode",{parentName:"a"},"Note"))," object containing information such as note name, octave and release velocity.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"value"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The release velocity amount expressed as a float between 0 and 1.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"rawValue"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The release velocity amount expressed as an integer (between 0 and 127).")))),(0,l.kt)("h3",{id:"event-noteon"},(0,l.kt)("inlineCode",{parentName:"h3"},'"noteon"')),(0,l.kt)("a",{id:"event:noteon"}),(0,l.kt)("p",null,"Event emitted when a ",(0,l.kt)("strong",{parentName:"p"},"note on")," MIDI message has been received."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event Properties")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"type"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"noteon"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"channel"))),(0,l.kt)("td",{parentName:"tr",align:null},"InputChannel"),(0,l.kt)("td",{parentName:"tr",align:null},"The ",(0,l.kt)("inlineCode",{parentName:"td"},"InputChannel")," object that triggered the event.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"event.data"))),(0,l.kt)("td",{parentName:"tr",align:null},"Array"),(0,l.kt)("td",{parentName:"tr",align:null},"The MIDI message as an array of 8 bit values.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"input"))),(0,l.kt)("td",{parentName:"tr",align:null},"InputChannel"),(0,l.kt)("td",{parentName:"tr",align:null},"The ",(0,l.kt)("a",{parentName:"td",href:"Input"},(0,l.kt)("inlineCode",{parentName:"a"},"Input"))," object where through which the message was received.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"event.rawData"))),(0,l.kt)("td",{parentName:"tr",align:null},"Uint8Array"),(0,l.kt)("td",{parentName:"tr",align:null},"The raw MIDI message as a ",(0,l.kt)("inlineCode",{parentName:"td"},"Uint8Array"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target"))),(0,l.kt)("td",{parentName:"tr",align:null},"InputChannel"),(0,l.kt)("td",{parentName:"tr",align:null},"The object that triggered the event (the ",(0,l.kt)("inlineCode",{parentName:"td"},"InputChannel")," object).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"timestamp"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"note"))),(0,l.kt)("td",{parentName:"tr",align:null},"Note"),(0,l.kt)("td",{parentName:"tr",align:null},"A ",(0,l.kt)("a",{parentName:"td",href:"Note"},(0,l.kt)("inlineCode",{parentName:"a"},"Note"))," object containing information such as note name, octave and attack velocity.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"value"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The attack velocity amount expressed as a float between 0 and 1.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"rawValue"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The attack velocity amount expressed as an integer (between 0 and 127).")))),(0,l.kt)("h3",{id:"event-omnimode"},(0,l.kt)("inlineCode",{parentName:"h3"},'"omnimode"')),(0,l.kt)("a",{id:"event:omnimode"}),(0,l.kt)("p",null,'Event emitted when an "omni mode" channel-mode MIDI message has been received. The value\nproperty of the event is set to either ',(0,l.kt)("inlineCode",{parentName:"p"},"true")," (omni mode on) of ",(0,l.kt)("inlineCode",{parentName:"p"},"false")," (omni mode off)."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event Properties")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"type"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"omnimode"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target"))),(0,l.kt)("td",{parentName:"tr",align:null},"InputChannel"),(0,l.kt)("td",{parentName:"tr",align:null},"The object that triggered the event (the ",(0,l.kt)("inlineCode",{parentName:"td"},"InputChannel")," object).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"message"))),(0,l.kt)("td",{parentName:"tr",align:null},"Message"),(0,l.kt)("td",{parentName:"tr",align:null},"A ",(0,l.kt)("inlineCode",{parentName:"td"},"Message")," object containing information about the incoming MIDI message.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"timestamp"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"value"))),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"The value is ",(0,l.kt)("inlineCode",{parentName:"td"},"true")," for omni mode on and false for omni mode off.")))),(0,l.kt)("h3",{id:"event-pitchbend"},(0,l.kt)("inlineCode",{parentName:"h3"},'"pitchbend"')),(0,l.kt)("a",{id:"event:pitchbend"}),(0,l.kt)("p",null,"Event emitted when a pitch bend MIDI message has been received."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event Properties")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"type"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"pitchbend"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target"))),(0,l.kt)("td",{parentName:"tr",align:null},"InputChannel"),(0,l.kt)("td",{parentName:"tr",align:null},"The object that triggered the event (the ",(0,l.kt)("inlineCode",{parentName:"td"},"InputChannel")," object).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"message"))),(0,l.kt)("td",{parentName:"tr",align:null},"Message"),(0,l.kt)("td",{parentName:"tr",align:null},"A ",(0,l.kt)("inlineCode",{parentName:"td"},"Message")," object containing information about the incoming MIDI message.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"timestamp"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"value"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The value expressed as a float between 0 and 1.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"rawValue"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The value expressed as an integer (between 0 and 16383).")))),(0,l.kt)("h3",{id:"event-programchange"},(0,l.kt)("inlineCode",{parentName:"h3"},'"programchange"')),(0,l.kt)("a",{id:"event:programchange"}),(0,l.kt)("p",null,"Event emitted when a ",(0,l.kt)("strong",{parentName:"p"},"program change")," MIDI message has been received."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event Properties")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"type"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"programchange"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target"))),(0,l.kt)("td",{parentName:"tr",align:null},"InputChannel"),(0,l.kt)("td",{parentName:"tr",align:null},"The object that triggered the event (the ",(0,l.kt)("inlineCode",{parentName:"td"},"InputChannel")," object).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"message"))),(0,l.kt)("td",{parentName:"tr",align:null},"Message"),(0,l.kt)("td",{parentName:"tr",align:null},"A ",(0,l.kt)("inlineCode",{parentName:"td"},"Message")," object containing information about the incoming MIDI message.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"timestamp"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"value"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The value expressed as an integer between 1 and 128.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"rawValue"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The value expressed as an integer between 0 and 127..")))),(0,l.kt)("h3",{id:"event-resetallcontrollers"},(0,l.kt)("inlineCode",{parentName:"h3"},'"resetallcontrollers"')),(0,l.kt)("a",{id:"event:resetallcontrollers"}),(0,l.kt)("p",null,'Event emitted when a "reset all controllers" channel-mode MIDI message has been received.'),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event Properties")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"type"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"resetallcontrollers"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target"))),(0,l.kt)("td",{parentName:"tr",align:null},"InputChannel"),(0,l.kt)("td",{parentName:"tr",align:null},"The object that triggered the event (the ",(0,l.kt)("inlineCode",{parentName:"td"},"InputChannel")," object).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"message"))),(0,l.kt)("td",{parentName:"tr",align:null},"Message"),(0,l.kt)("td",{parentName:"tr",align:null},"A ",(0,l.kt)("inlineCode",{parentName:"td"},"Message")," object containing information about the incoming MIDI message.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"timestamp"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")))),(0,l.kt)("h3",{id:"nrpndatabuttondecrement-event-nrpndatabuttondecrement"},(0,l.kt)("inlineCode",{parentName:"h3"},'"nrpn:databuttondecrement"')," {#event-nrpn:databuttondecrement}"),(0,l.kt)("a",{id:"event:nrpn:databuttondecrement"}),(0,l.kt)("p",null,"Event emitted when a 'databuttondecrement' NRPN message has been received on the input."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event Properties")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"type"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"nrpn:databuttondecrement"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target"))),(0,l.kt)("td",{parentName:"tr",align:null},"InputChannel"),(0,l.kt)("td",{parentName:"tr",align:null},"The ",(0,l.kt)("inlineCode",{parentName:"td"},"InputChannel")," that triggered the event.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"timestamp"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"parameter"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The non-registered parameter number (0-16383)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"parameterMsb"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The MSB portion of the non-registered parameter number (0-127)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"parameterLsb:"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The LSB portion of the non-registered parameter number (0-127)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"value"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The received value as a normalized number between 0 and 1.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"rawValue"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The value as received (0-127)")))),(0,l.kt)("h3",{id:"nrpndatabuttonincrement-event-nrpndatabuttonincrement"},(0,l.kt)("inlineCode",{parentName:"h3"},'"nrpn:databuttonincrement"')," {#event-nrpn:databuttonincrement}"),(0,l.kt)("a",{id:"event:nrpn:databuttonincrement"}),(0,l.kt)("p",null,"Event emitted when a 'databuttonincrement' NRPN message has been received on the input."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event Properties")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"type"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"nrpn:databuttonincrement"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target"))),(0,l.kt)("td",{parentName:"tr",align:null},"InputChannel"),(0,l.kt)("td",{parentName:"tr",align:null},"The ",(0,l.kt)("inlineCode",{parentName:"td"},"InputChannel")," that triggered the event.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"timestamp"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"parameter"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The non-registered parameter number (0-16383)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"parameterMsb"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The MSB portion of the non-registered parameter number (0-127)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"parameterLsb:"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The LSB portion of the non-registered parameter number (0-127)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"value"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The received value as a normalized number between 0 and 1.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"rawValue"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The value as received (0-127)")))),(0,l.kt)("h3",{id:"nrpndataentrycoarse-event-nrpndataentrycoarse"},(0,l.kt)("inlineCode",{parentName:"h3"},'"nrpn:dataentrycoarse"')," {#event-nrpn:dataentrycoarse}"),(0,l.kt)("a",{id:"event:nrpn:dataentrycoarse"}),(0,l.kt)("p",null,"Event emitted when a 'dataentrycoarse' NRPN message has been received on the input."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event Properties")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"type"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"nrpn:dataentrycoarse"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target"))),(0,l.kt)("td",{parentName:"tr",align:null},"InputChannel"),(0,l.kt)("td",{parentName:"tr",align:null},"The ",(0,l.kt)("inlineCode",{parentName:"td"},"InputChannel")," that triggered the event.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"timestamp"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"parameter"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The non-registered parameter number (0-16383)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"parameterMsb"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The MSB portion of the non-registered parameter number (0-127)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"parameterLsb:"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The LSB portion of the non-registered parameter number (0-127)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"value"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The received value as a normalized number between 0 and 1.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"rawValue"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The value as received (0-127)")))),(0,l.kt)("h3",{id:"nrpndataentryfine-event-nrpndataentryfine"},(0,l.kt)("inlineCode",{parentName:"h3"},'"nrpn:dataentryfine"')," {#event-nrpn:dataentryfine}"),(0,l.kt)("a",{id:"event:nrpn:dataentryfine"}),(0,l.kt)("p",null,"Event emitted when a 'dataentryfine' NRPN message has been received on the input."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event Properties")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"type"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"nrpn:dataentryfine"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target"))),(0,l.kt)("td",{parentName:"tr",align:null},"InputChannel"),(0,l.kt)("td",{parentName:"tr",align:null},"The ",(0,l.kt)("inlineCode",{parentName:"td"},"InputChannel")," that triggered the event.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"timestamp"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"parameter"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The non-registered parameter number (0-16383)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"parameterMsb"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The MSB portion of the non-registered parameter number (0-127)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"parameterLsb:"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The LSB portion of the non-registered parameter number (0-127)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"value"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The received value as a normalized number between 0 and 1.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"rawValue"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The value as received (0-127)")))),(0,l.kt)("h3",{id:"rpndatabuttondecrement-event-rpndatabuttondecrement"},(0,l.kt)("inlineCode",{parentName:"h3"},'"rpn:databuttondecrement"')," {#event-rpn:databuttondecrement}"),(0,l.kt)("a",{id:"event:rpn:databuttondecrement"}),(0,l.kt)("p",null,"Event emitted when a 'databuttondecrement' RPN message has been received on the input."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event Properties")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"type"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"rpn:databuttondecrement"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target"))),(0,l.kt)("td",{parentName:"tr",align:null},"InputChannel"),(0,l.kt)("td",{parentName:"tr",align:null},"The ",(0,l.kt)("inlineCode",{parentName:"td"},"InputChannel")," that triggered the event.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"timestamp"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"parameter"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"The registered parameter's name")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"parameterMsb"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The MSB portion of the registered parameter (0-127)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"parameterLsb:"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The LSB portion of the registered parameter (0-127)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"value"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The received value as a normalized number between 0 and 1.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"rawValue"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The value as received (0-127)")))),(0,l.kt)("h3",{id:"rpndatabuttonincrement-event-rpndatabuttonincrement"},(0,l.kt)("inlineCode",{parentName:"h3"},'"rpn:databuttonincrement"')," {#event-rpn:databuttonincrement}"),(0,l.kt)("a",{id:"event:rpn:databuttonincrement"}),(0,l.kt)("p",null,"Event emitted when a 'databuttonincrement' RPN message has been received on the input."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event Properties")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"type"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"rpn:databuttonincrement"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target"))),(0,l.kt)("td",{parentName:"tr",align:null},"InputChannel"),(0,l.kt)("td",{parentName:"tr",align:null},"The ",(0,l.kt)("inlineCode",{parentName:"td"},"InputChannel")," that triggered the event.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"timestamp"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"parameter"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"The registered parameter's name")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"parameterMsb"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The MSB portion of the registered parameter (0-127)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"parameterLsb:"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The LSB portion of the registered parameter (0-127)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"value"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The received value as a normalized number between 0 and 1.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"rawValue"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The value as received (0-127)")))),(0,l.kt)("h3",{id:"rpndataentrycoarse-event-rpndataentrycoarse"},(0,l.kt)("inlineCode",{parentName:"h3"},'"rpn:dataentrycoarse"')," {#event-rpn:dataentrycoarse}"),(0,l.kt)("a",{id:"event:rpn:dataentrycoarse"}),(0,l.kt)("p",null,"Event emitted when a 'dataentrycoarse' RPN message has been received on the input."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event Properties")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"type"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"rpn:dataentrycoarse"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target"))),(0,l.kt)("td",{parentName:"tr",align:null},"InputChannel"),(0,l.kt)("td",{parentName:"tr",align:null},"The ",(0,l.kt)("inlineCode",{parentName:"td"},"InputChannel")," that triggered the event.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"timestamp"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"parameter"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"The registered parameter's name")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"parameterMsb"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The MSB portion of the registered parameter (0-127)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"parameterLsb:"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The LSB portion of the registered parameter (0-127)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"value"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The received value as a normalized number between 0 and 1.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"rawValue"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The value as received (0-127)")))),(0,l.kt)("h3",{id:"rpndataentryfine-event-rpndataentryfine"},(0,l.kt)("inlineCode",{parentName:"h3"},'"rpn:dataentryfine"')," {#event-rpn:dataentryfine}"),(0,l.kt)("a",{id:"event:rpn:dataentryfine"}),(0,l.kt)("p",null,"Event emitted when a 'dataentryfine' RPN message has been received on the input."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event Properties")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"type"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"rpn:dataentryfine"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target"))),(0,l.kt)("td",{parentName:"tr",align:null},"InputChannel"),(0,l.kt)("td",{parentName:"tr",align:null},"The ",(0,l.kt)("inlineCode",{parentName:"td"},"InputChannel")," that triggered the event.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"timestamp"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"parameter"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"The registered parameter's name")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"parameterMsb"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The MSB portion of the registered parameter (0-127)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"parameterLsb:"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The LSB portion of the registered parameter (0-127)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"value"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The received value as a normalized number between 0 and 1.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"rawValue"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The value as received (0-127)")))))}u.isMDXComponent=!0}}]);