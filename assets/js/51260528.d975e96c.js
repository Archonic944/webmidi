"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[404],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),d=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=d(e.components);return r.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=d(n),f=i,m=p["".concat(c,".").concat(f)]||p[f]||s[f]||o;return n?r.createElement(m,a(a({ref:t},u),{},{components:n})):r.createElement(m,a({ref:t},u))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var d=2;d<o;d++)a[d]=n[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3496:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return d},toc:function(){return u},default:function(){return p}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],l={sidebar_position:1},c="Middle C & Octave Offset",d={unversionedId:"going-further/middle-c",id:"going-further/middle-c",isDocsHomePage:!1,title:"Middle C & Octave Offset",description:"The Default Value for Middle C",source:"@site/docs/going-further/middle-c.md",sourceDirName:"going-further",slug:"/going-further/middle-c",permalink:"/webmidi/docs/going-further/middle-c",editUrl:"https://github.com/djipco/webmidi/edit/develop/website/docs/going-further/middle-c.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/webmidi/docs/getting-started/installation"},next:{title:"Performance",permalink:"/webmidi/docs/going-further/performance"}},u=[{value:"The Default Value for Middle C",id:"the-default-value-for-middle-c",children:[]},{value:"Offsetting Middle C",id:"offsetting-middle-c",children:[]}],s={toc:u};function p(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"middle-c--octave-offset"},"Middle C & Octave Offset"),(0,o.kt)("h2",{id:"the-default-value-for-middle-c"},"The Default Value for Middle C"),(0,o.kt)("p",null,"The general MIDI 1.0 specification does not explicitly define a pitch for middle C but it does\nconsider middle C to be note number 60. The ",(0,o.kt)("strong",{parentName:"p"},"MIDI Tuning Standard")," states that note number 69\nshould be tuned at 440Hz by default, which would also make middle C (60) to be C4. However,\ndifferent manufacturers have assigned middle C to various octaves/pitches (usually C3, C4 or C5)."),(0,o.kt)("p",null,"In accordance with the ",(0,o.kt)("strong",{parentName:"p"},"MIDI Tuning Standard")," and the\n",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Scientific_pitch_notation"},"scientific pitch notation"),", WebMidi.js\nconsiders middle C to be C4. "),(0,o.kt)("h2",{id:"offsetting-middle-c"},"Offsetting Middle C"),(0,o.kt)("p",null,"To make it easier to interface with devices using a different value for middle C, you can offset the\nnote number for middle C by using the ",(0,o.kt)("inlineCode",{parentName:"p"},"octaveOffset")," property. Changing this property on the\n",(0,o.kt)("a",{parentName:"p",href:"http://localhost:3000/webmidi/api/classes/WebMidi"},"WebMidi")," object has a global effect. For more\ngranularity, You can also change it on the ",(0,o.kt)("a",{parentName:"p",href:"http://localhost:3000/webmidi/api/classes/Input"},"Input"),",\n",(0,o.kt)("a",{parentName:"p",href:"http://localhost:3000/webmidi/api/classes/InputChannel"},"InputChannel"),",\n",(0,o.kt)("a",{parentName:"p",href:"http://localhost:3000/webmidi/api/classes/Output"},"Output")," and\n",(0,o.kt)("a",{parentName:"p",href:"http://localhost:3000/webmidi/api/classes/OutputChannel"},"OutputChannel")," objects."),(0,o.kt)("p",null,"When a note-related MIDI message (note on, note off or key aftertouch) is received, the reported\nnote number is always the one hard-coded in the inbound message. However, the reported octave is\noffset by the ",(0,o.kt)("inlineCode",{parentName:"p"},"octaveOffset")," property. So, if you receive note number 60 and ",(0,o.kt)("inlineCode",{parentName:"p"},"octaveOffset")," is et to\n0, the reported octave will be 4 and the note name will be C4. If you receive the same note number\nbut the ",(0,o.kt)("inlineCode",{parentName:"p"},"octaveOffset")," is set to -1, the reported octave will be 3 and the note name will be C3."))}p.isMDXComponent=!0}}]);