"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[961],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return k}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),m=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=m(e.components);return a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=m(n),k=r,c=u["".concat(p,".").concat(k)]||u[k]||s[k]||l;return n?a.createElement(c,i(i({ref:t},d),{},{components:n})):a.createElement(c,i({ref:t},d))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var m=2;m<l;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5021:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return m},toc:function(){return d},default:function(){return u}});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),i=["components"],o={},p=void 0,m={unversionedId:"classes/EventEmitter",id:"classes/EventEmitter",isDocsHomePage:!1,title:"EventEmitter",description:"The EventEmitter class provides methods to implement the observable design pattern. This",source:"@site/api/classes/EventEmitter.md",sourceDirName:"classes",slug:"/classes/EventEmitter",permalink:"/webmidi/api/classes/EventEmitter",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Enumerations",permalink:"/webmidi/api/classes/Enumerations"},next:{title:"Input",permalink:"/webmidi/api/classes/Input"}},d=[{value:"<code>new EventEmitter([eventsSuspended])</code>",id:"new-eventemittereventssuspended",children:[]},{value:"<code>eventEmitter.eventMap</code> : <code>Object</code>",id:"eventemittereventmap--object",children:[]},{value:"<code>eventEmitter.eventsSuspended</code> : <code>boolean</code>",id:"eventemittereventssuspended--boolean",children:[]},{value:"<code>eventEmitter.eventNames</code> : <code>Array.&lt;string&gt;</code>",id:"eventemittereventnames--arraystring",children:[]},{value:"<code>eventEmitter.eventCount</code> : <code>number</code>",id:"eventemittereventcount--number",children:[]},{value:"<code>eventEmitter.addListener(event, callback, [options])</code> \u21d2 <code>Listener</code>",id:"eventemitteraddlistenerevent-callback-options--listener",children:[]},{value:"<code>eventEmitter.addOneTimeListener(event, callback, [options])</code> \u21d2 <code>Listener</code>",id:"eventemitteraddonetimelistenerevent-callback-options--listener",children:[]},{value:"<code>eventEmitter.hasListener([event], [callback])</code> \u21d2 <code>boolean</code>",id:"eventemitterhaslistenerevent-callback--boolean",children:[]},{value:"<code>eventEmitter.getListeners(event)</code> \u21d2 <code>Array.&lt;Listener&gt;</code>",id:"eventemittergetlistenersevent--arraylistener",children:[]},{value:"<code>eventEmitter.suspendEvent(event)</code>",id:"eventemittersuspendeventevent",children:[]},{value:"<code>eventEmitter.unsuspendEvent(event)</code>",id:"eventemitterunsuspendeventevent",children:[]},{value:"<code>eventEmitter.getListenerCount(event)</code> \u21d2 <code>number</code>",id:"eventemittergetlistenercountevent--number",children:[]},{value:"<code>eventEmitter.emit(event, ...args)</code> \u21d2 <code>Array</code>",id:"eventemitteremitevent-args--array",children:[]},{value:"<code>eventEmitter.removeListener([event], [callback], [options])</code>",id:"eventemitterremovelistenerevent-callback-options",children:[]},{value:"<code>eventEmitter.waitFor(event, [options])</code>",id:"eventemitterwaitforevent-options",children:[]},{value:"<code>EventEmitter.ANY_EVENT</code> : <code>Symbol</code>",id:"eventemitterany_event--symbol",children:[]},{value:"<code>EventEmitter~callback</code> : <code>function</code>",id:"eventemittercallback--function",children:[]}],s={toc:d};function u(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("a",{name:"EventEmitter"}),(0,l.kt)("h1",{id:"eventemitter"},"EventEmitter"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter")," class provides methods to implement the ",(0,l.kt)("em",{parentName:"p"},"observable")," design pattern. This\npattern allows one to ",(0,l.kt)("em",{parentName:"p"},"register")," a function to execute when a specific event is ",(0,l.kt)("em",{parentName:"p"},"emitted")," by the\nemitter."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"#EventEmitter"},"EventEmitter")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"#new_EventEmitter_new"},(0,l.kt)("inlineCode",{parentName:"a"},"new EventEmitter([eventsSuspended])")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("em",{parentName:"p"},"instance")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"#EventEmitter+eventMap"},(0,l.kt)("inlineCode",{parentName:"a"},".eventMap"))," : ",(0,l.kt)("code",null,"Object"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"#EventEmitter+eventsSuspended"},(0,l.kt)("inlineCode",{parentName:"a"},".eventsSuspended"))," : ",(0,l.kt)("code",null,"boolean"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"#EventEmitter+eventNames"},(0,l.kt)("inlineCode",{parentName:"a"},".eventNames"))," : ",(0,l.kt)("code",null,"Array.","<","string",">"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"#EventEmitter+eventCount"},(0,l.kt)("inlineCode",{parentName:"a"},".eventCount"))," : ",(0,l.kt)("code",null,"number"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"#EventEmitter+addListener"},(0,l.kt)("inlineCode",{parentName:"a"},".addListener(event, callback, [options])"))," \u21d2 ",(0,l.kt)("code",null,"Listener"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"#EventEmitter+addOneTimeListener"},(0,l.kt)("inlineCode",{parentName:"a"},".addOneTimeListener(event, callback, [options])"))," \u21d2 ",(0,l.kt)("code",null,"Listener"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"#EventEmitter+hasListener"},(0,l.kt)("inlineCode",{parentName:"a"},".hasListener([event], [callback])"))," \u21d2 ",(0,l.kt)("code",null,"boolean"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"#EventEmitter+getListeners"},(0,l.kt)("inlineCode",{parentName:"a"},".getListeners(event)"))," \u21d2 ",(0,l.kt)("code",null,"Array.","<","Listener",">"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"#EventEmitter+suspendEvent"},(0,l.kt)("inlineCode",{parentName:"a"},".suspendEvent(event)")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"#EventEmitter+unsuspendEvent"},(0,l.kt)("inlineCode",{parentName:"a"},".unsuspendEvent(event)")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"#EventEmitter+getListenerCount"},(0,l.kt)("inlineCode",{parentName:"a"},".getListenerCount(event)"))," \u21d2 ",(0,l.kt)("code",null,"number"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"#EventEmitter+emit"},(0,l.kt)("inlineCode",{parentName:"a"},".emit(event, ...args)"))," \u21d2 ",(0,l.kt)("code",null,"Array"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"#EventEmitter+removeListener"},(0,l.kt)("inlineCode",{parentName:"a"},".removeListener([event], [callback], [options])")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"#EventEmitter+waitFor"},(0,l.kt)("inlineCode",{parentName:"a"},".waitFor(event, [options])")))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("em",{parentName:"p"},"static")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#EventEmitter.ANY_EVENT"},(0,l.kt)("inlineCode",{parentName:"a"},".ANY_EVENT"))," : ",(0,l.kt)("code",null,"Symbol")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("em",{parentName:"p"},"inner")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#EventEmitter..callback"},(0,l.kt)("inlineCode",{parentName:"a"},"~callback"))," : ",(0,l.kt)("code",null,"function"))))))),(0,l.kt)("hr",null),(0,l.kt)("a",{name:"new_EventEmitter_new"}),(0,l.kt)("h2",{id:"new-eventemittereventssuspended"},(0,l.kt)("inlineCode",{parentName:"h2"},"new EventEmitter([eventsSuspended])")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[eventsSuspended]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"boolean")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"false")),(0,l.kt)("td",{parentName:"tr",align:null},"Whether the ",(0,l.kt)("inlineCode",{parentName:"td"},"EventEmitter")," is initially in a suspended state (i.e. not executing callbacks). It is a mostly abstract class meant to be extended by (or mixed into) other objects.")))),(0,l.kt)("hr",null),(0,l.kt)("a",{name:"EventEmitter+eventMap"}),(0,l.kt)("h2",{id:"eventemittereventmap--object"},(0,l.kt)("inlineCode",{parentName:"h2"},"eventEmitter.eventMap")," : ",(0,l.kt)("code",null,"Object")),(0,l.kt)("p",null,"An object containing a property for each event with at least one registered listener. Each\nevent property contains an array of all the ",(0,l.kt)("inlineCode",{parentName:"p"},"Listener")," objects registered for the event."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Read only"),": true  "),(0,l.kt)("hr",null),(0,l.kt)("a",{name:"EventEmitter+eventsSuspended"}),(0,l.kt)("h2",{id:"eventemittereventssuspended--boolean"},(0,l.kt)("inlineCode",{parentName:"h2"},"eventEmitter.eventsSuspended")," : ",(0,l.kt)("code",null,"boolean")),(0,l.kt)("p",null,"Whether or not the execution of function callbacks is currently suspended for this whole\nemitter"),(0,l.kt)("hr",null),(0,l.kt)("a",{name:"EventEmitter+eventNames"}),(0,l.kt)("h2",{id:"eventemittereventnames--arraystring"},(0,l.kt)("inlineCode",{parentName:"h2"},"eventEmitter.eventNames")," : ",(0,l.kt)("code",null,"Array.","<","string",">")),(0,l.kt)("p",null,"An array of all the unique event names for which the emitter has at least one registered\nlistener."),(0,l.kt)("p",null,"Note: this excludes global events registered with ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT")," because they are not\ntied to a specific event."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Read only"),": true  "),(0,l.kt)("hr",null),(0,l.kt)("a",{name:"EventEmitter+eventCount"}),(0,l.kt)("h2",{id:"eventemittereventcount--number"},(0,l.kt)("inlineCode",{parentName:"h2"},"eventEmitter.eventCount")," : ",(0,l.kt)("code",null,"number")),(0,l.kt)("p",null,"The number of unique events that have registered listeners"),(0,l.kt)("p",null,"Note: this excludes global events registered with ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT")," because they are not\ntied to a specific event."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Read only"),": true  "),(0,l.kt)("hr",null),(0,l.kt)("a",{name:"EventEmitter+addListener"}),(0,l.kt)("h2",{id:"eventemitteraddlistenerevent-callback-options--listener"},(0,l.kt)("inlineCode",{parentName:"h2"},"eventEmitter.addListener(event, callback, [options])")," \u21d2 ",(0,l.kt)("code",null,"Listener")),(0,l.kt)("p",null,"Adds a listener for the specified event. It returns the ",(0,l.kt)("a",{parentName:"p",href:"Listener"},(0,l.kt)("strong",{parentName:"a"},"Listener"))," object\nthat was created and attached to the event."),(0,l.kt)("p",null,"To attach a global listener that will be triggered for any events, use ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT"),"\nas the first parameter. Note that a global listener will also be triggered by non-registered\nevents. For example, this will trigger global listeners: ",(0,l.kt)("inlineCode",{parentName:"p"},"myEmitter.emit('bogus')"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),": ",(0,l.kt)("code",null,"Listener")," - The newly created ",(0,l.kt)("a",{parentName:"p",href:"Listener"},(0,l.kt)("strong",{parentName:"a"},"Listener"))," object.",(0,l.kt)("br",{parentName:"p"}),"\n",(0,l.kt)("strong",{parentName:"p"},"Throws"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"TypeError")," The `event` parameter must be a string or `EventEmitter.ANY_EVENT`."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"TypeError")," The `callback` parameter must be a function.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"event"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"string")," ","|"," ",(0,l.kt)("a",{parentName:"td",href:"#EventEmitter.ANY_EVENT"},(0,l.kt)("code",null,"ANY","_","EVENT"))),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"The event to listen to")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"callback"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#EventEmitter..callback"},(0,l.kt)("code",null,"callback"))),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"The callback function to execute when the event occurs.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[options]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"Object")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"{}")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[options.context]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"Object")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"this")),(0,l.kt)("td",{parentName:"tr",align:null},"The value of ",(0,l.kt)("inlineCode",{parentName:"td"},"this")," in the callback function.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[options.prepend]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"boolean")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"false")),(0,l.kt)("td",{parentName:"tr",align:null},"Whether the listener should be added at the beginning of the listeners array")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[options.duration]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"number")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"Infinity")),(0,l.kt)("td",{parentName:"tr",align:null},"The number of milliseconds before the listener automatically expires.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[options.remaining]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"boolean")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"Infinity")),(0,l.kt)("td",{parentName:"tr",align:null},"The number of times after which the callback should automatically be removed.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[options.arguments]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"array")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"An array of arguments which will be passed separately to the callback function. This array is stored in the ",(0,l.kt)("a",{parentName:"td",href:"Listener#arguments"},(0,l.kt)("strong",{parentName:"a"},"arguments"))," property of the ",(0,l.kt)("a",{parentName:"td",href:"Listener"},(0,l.kt)("strong",{parentName:"a"},"Listener"))," object and can be retrieved or modified as desired.")))),(0,l.kt)("hr",null),(0,l.kt)("a",{name:"EventEmitter+addOneTimeListener"}),(0,l.kt)("h2",{id:"eventemitteraddonetimelistenerevent-callback-options--listener"},(0,l.kt)("inlineCode",{parentName:"h2"},"eventEmitter.addOneTimeListener(event, callback, [options])")," \u21d2 ",(0,l.kt)("code",null,"Listener")),(0,l.kt)("p",null,"Adds a one-time listener for the specified event. The listener will be executed once and then\ndestroyed. It returns the ",(0,l.kt)("a",{parentName:"p",href:"Listener"},(0,l.kt)("strong",{parentName:"a"},"Listener"))," object that was created and attached\nto the event."),(0,l.kt)("p",null,"To attach a global listener that will be triggered for any events, use ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT"),"\nas the first parameter. Note that a global listener will also be triggered by non-registered\nevents. For example, this will trigger global listeners: ",(0,l.kt)("inlineCode",{parentName:"p"},"myEmitter.emit('bogus')"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),": ",(0,l.kt)("code",null,"Listener")," - The newly created ",(0,l.kt)("a",{parentName:"p",href:"Listener"},(0,l.kt)("strong",{parentName:"a"},"Listener"))," object.",(0,l.kt)("br",{parentName:"p"}),"\n",(0,l.kt)("strong",{parentName:"p"},"Throws"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"TypeError")," The `event` parameter must be a string or `EventEmitter.ANY_EVENT`."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"TypeError")," The `callback` parameter must be a function.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"event"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"string")," ","|"," ",(0,l.kt)("a",{parentName:"td",href:"#EventEmitter.ANY_EVENT"},(0,l.kt)("code",null,"ANY","_","EVENT"))),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"The event to listen to")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"callback"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#EventEmitter..callback"},(0,l.kt)("code",null,"callback"))),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"The callback function to execute when the event occurs")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[options]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"Object")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"{}")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[options.context]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"Object")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"this")),(0,l.kt)("td",{parentName:"tr",align:null},"The context to invoke the callback function in.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[options.prepend]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"boolean")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"false")),(0,l.kt)("td",{parentName:"tr",align:null},"Whether the listener should be added at the beginning of the listeners array")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[options.duration]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"number")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"Infinity")),(0,l.kt)("td",{parentName:"tr",align:null},"The number of milliseconds before the listener automatically expires.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[options.arguments]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"array")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"An array of arguments which will be passed separately to the callback function. This array is stored in the ",(0,l.kt)("a",{parentName:"td",href:"Listener#arguments"},(0,l.kt)("strong",{parentName:"a"},"arguments"))," property of the ",(0,l.kt)("a",{parentName:"td",href:"Listener"},(0,l.kt)("strong",{parentName:"a"},"Listener"))," object and can be retrieved or modified as desired.")))),(0,l.kt)("hr",null),(0,l.kt)("a",{name:"EventEmitter+hasListener"}),(0,l.kt)("h2",{id:"eventemitterhaslistenerevent-callback--boolean"},(0,l.kt)("inlineCode",{parentName:"h2"},"eventEmitter.hasListener([event], [callback])")," \u21d2 ",(0,l.kt)("code",null,"boolean")),(0,l.kt)("p",null,"Returns ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," if the specified event has at least one registered listener. If no event is\nspecified, the method returns ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," if any event has at least one listener registered (this\nincludes global listeners registered to ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT"),")."),(0,l.kt)("p",null,"Note: to specifically check for global listeners added with ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT"),", use\n",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT")," as the parameter."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[event]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"string")," ","|"," ",(0,l.kt)("a",{parentName:"td",href:"#EventEmitter.ANY_EVENT"},(0,l.kt)("code",null,"ANY","_","EVENT"))),(0,l.kt)("td",{parentName:"tr",align:null},"The event to check")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[callback]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"function")," ","|"," ",(0,l.kt)("code",null,"Listener")),(0,l.kt)("td",{parentName:"tr",align:null},"The actual function that was added to the event or the ",(0,l.kt)("a",{parentName:"td",href:"Listener"},"Listener")," object returned by ",(0,l.kt)("inlineCode",{parentName:"td"},"addListener()"),".")))),(0,l.kt)("hr",null),(0,l.kt)("a",{name:"EventEmitter+getListeners"}),(0,l.kt)("h2",{id:"eventemittergetlistenersevent--arraylistener"},(0,l.kt)("inlineCode",{parentName:"h2"},"eventEmitter.getListeners(event)")," \u21d2 ",(0,l.kt)("code",null,"Array.","<","Listener",">")),(0,l.kt)("p",null,"Returns an array of all the ",(0,l.kt)("inlineCode",{parentName:"p"},"Listener")," objects that will be triggered for a specific event."),(0,l.kt)("p",null,"Please note that global events (those added with ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT"),') are not returned for\n"regular" events. To get the list of global listeners, specifically use\n',(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT")," as the parameter."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),": ",(0,l.kt)("code",null,"Array.","<","Listener",">")," - An array of ",(0,l.kt)("inlineCode",{parentName:"p"},"Listener")," objects  "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"event"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"string")," ","|"," ",(0,l.kt)("a",{parentName:"td",href:"#EventEmitter.ANY_EVENT"},(0,l.kt)("code",null,"ANY","_","EVENT"))),(0,l.kt)("td",{parentName:"tr",align:null},"The event to get listeners for")))),(0,l.kt)("hr",null),(0,l.kt)("a",{name:"EventEmitter+suspendEvent"}),(0,l.kt)("h2",{id:"eventemittersuspendeventevent"},(0,l.kt)("inlineCode",{parentName:"h2"},"eventEmitter.suspendEvent(event)")),(0,l.kt)("p",null,"Suspends execution of all callbacks functions registered for the specified event type."),(0,l.kt)("p",null,"You can suspend execution of callbacks registered with ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT")," by passing\n",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"suspendEvent()"),". Beware that this will not suspend all callbacks\nbut only those registered with ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT"),". While this may seem counter-intuitive\nat first glance, it allows the selective suspension of global listeners while leaving other\nliseners alone. If you truly want to suspends all callbacks for a specific ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter"),",\nsimply set its ",(0,l.kt)("inlineCode",{parentName:"p"},"eventsSuspended")," property to ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"event"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"string")," ","|"," ",(0,l.kt)("a",{parentName:"td",href:"#EventEmitter.ANY_EVENT"},(0,l.kt)("code",null,"ANY","_","EVENT"))),(0,l.kt)("td",{parentName:"tr",align:null},"The event for which to suspend execution of all callback functions.")))),(0,l.kt)("hr",null),(0,l.kt)("a",{name:"EventEmitter+unsuspendEvent"}),(0,l.kt)("h2",{id:"eventemitterunsuspendeventevent"},(0,l.kt)("inlineCode",{parentName:"h2"},"eventEmitter.unsuspendEvent(event)")),(0,l.kt)("p",null,"Resumes execution of all suspended callback functions registered for the specified event type."),(0,l.kt)("p",null,"You can resume execution of callbacks registered with ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT")," by passing\n",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"unsuspendEvent()"),". Beware that this will not resume all callbacks\nbut only those registered with ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT"),". While this may seem counter-intuitive,\nit allows the selective unsuspension of global listeners while leaving other callbacks alone."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"event"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"string")," ","|"," ",(0,l.kt)("a",{parentName:"td",href:"#EventEmitter.ANY_EVENT"},(0,l.kt)("code",null,"ANY","_","EVENT"))),(0,l.kt)("td",{parentName:"tr",align:null},"The event for which to resume execution of all callback functions.")))),(0,l.kt)("hr",null),(0,l.kt)("a",{name:"EventEmitter+getListenerCount"}),(0,l.kt)("h2",{id:"eventemittergetlistenercountevent--number"},(0,l.kt)("inlineCode",{parentName:"h2"},"eventEmitter.getListenerCount(event)")," \u21d2 ",(0,l.kt)("code",null,"number")),(0,l.kt)("p",null,"Returns the number of listeners registered for a specific event."),(0,l.kt)("p",null,"Please note that global events (those added with ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT"),') do not count\ntowards the remaining number for a "regular" event. To get the number of global listeners,\nspecifically use ',(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT")," as the parameter."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),": ",(0,l.kt)("code",null,"number")," - The number of listeners registered for the specified event.  "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"event"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"string")," ","|"," ",(0,l.kt)("a",{parentName:"td",href:"#EventEmitter.ANY_EVENT"},(0,l.kt)("code",null,"ANY","_","EVENT"))),(0,l.kt)("td",{parentName:"tr",align:null},"The event")))),(0,l.kt)("hr",null),(0,l.kt)("a",{name:"EventEmitter+emit"}),(0,l.kt)("h2",{id:"eventemitteremitevent-args--array"},(0,l.kt)("inlineCode",{parentName:"h2"},"eventEmitter.emit(event, ...args)")," \u21d2 ",(0,l.kt)("code",null,"Array")),(0,l.kt)("p",null,"Executes the callback functions of all the ",(0,l.kt)("inlineCode",{parentName:"p"},"Listener")," objects registered for a given event. The\ncallback functions are passed the additional arguments specifed for ",(0,l.kt)("inlineCode",{parentName:"p"},"emit()")," (if any) followed\nby the arguments present in the ",(0,l.kt)("inlineCode",{parentName:"p"},"arguments")," property of the ",(0,l.kt)("inlineCode",{parentName:"p"},"Listener")," object (if any). For\nexample:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'let myEmitter = new EventEmitter();\nmyEmitter.addListener("test", fn, {arguments: ["a", "b", "c"]});\nmyEmitter.emit("test", "y", "z");\n')),(0,l.kt)("p",null,"In this example, the function will be called as such: ",(0,l.kt)("inlineCode",{parentName:"p"},'fn("y", "z", "a", "b", "c");')),(0,l.kt)("p",null,"If the ",(0,l.kt)("inlineCode",{parentName:"p"},"eventsSuspended")," property of the ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter")," or the ",(0,l.kt)("inlineCode",{parentName:"p"},"suspended")," property of the\n",(0,l.kt)("inlineCode",{parentName:"p"},"Listener")," is ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),", the callback functions will not be executed."),(0,l.kt)("p",null,"This function returns an array containing the return values of each of the callbacks."),(0,l.kt)("p",null,"It should be noted that the regular listeners are triggered first followed by the global\nlisteners (added with ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT"),")."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),": ",(0,l.kt)("code",null,"Array")," - An array containing the return value of each of the executed listener\nfunctions",(0,l.kt)("br",{parentName:"p"}),"\n",(0,l.kt)("strong",{parentName:"p"},"Throws"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("code",null,"TypeError")," The `event` parameter must be a string.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"event"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The event")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"...args"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"*")),(0,l.kt)("td",{parentName:"tr",align:null},"Arbitrary number of arguments to pass along to the callback functions")))),(0,l.kt)("hr",null),(0,l.kt)("a",{name:"EventEmitter+removeListener"}),(0,l.kt)("h2",{id:"eventemitterremovelistenerevent-callback-options"},(0,l.kt)("inlineCode",{parentName:"h2"},"eventEmitter.removeListener([event], [callback], [options])")),(0,l.kt)("p",null,"Removes all the listeners that match the specified criterias. If no parameters are passed, all\nlisteners will be removed. If only the ",(0,l.kt)("inlineCode",{parentName:"p"},"event")," parameter is passed, all listeners for that\nevent will be removed. You can remove global listeners by using ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT")," as the\nfirst parameter."),(0,l.kt)("p",null,"To use more granular options, you must at least define the ",(0,l.kt)("inlineCode",{parentName:"p"},"event"),". Then, you can specify the\ncallback to match or one or more of the additional options."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[event]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"string")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"The event name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[callback]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#EventEmitter..callback"},(0,l.kt)("code",null,"callback"))),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Only remove the listeners that match this exact callback function.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[options]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"Object")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"{}")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[options.context]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"*")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Only remove the listeners that have this exact context.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[options.remaining]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"number")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Only remove the listener if it has exactly that many remaining times to be executed.")))),(0,l.kt)("hr",null),(0,l.kt)("a",{name:"EventEmitter+waitFor"}),(0,l.kt)("h2",{id:"eventemitterwaitforevent-options"},(0,l.kt)("inlineCode",{parentName:"h2"},"eventEmitter.waitFor(event, [options])")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"waitFor()")," method is an async function which returns a promise. The promise is fulfilled\nwhen the specified event occurs. The event can be a regular event or ",(0,l.kt)("inlineCode",{parentName:"p"},"EventEmitter.ANY_EVENT"),"\n(if you want to resolve as soon as any event is emitted)."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'// then/catch syntax\nconst ee = new EventEmitter();\nee.waitFor("ready").then(() => console.log("Ready!"));\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'// async/await syntax\nconst ee = new EventEmitter();\nawait ee.waitFor("ready");\nconsole.log("Ready!");\n')),(0,l.kt)("p",null,"If the ",(0,l.kt)("inlineCode",{parentName:"p"},"duration")," option is set, the promise will only be fulfilled if the event is emitted\nwithin the specified duration. If the event has not been fulfilled after the specified\nduration, the promise is rejected. This makes it super easy to wait for an event and timeout\nafter a certain time if the event is not triggered."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'// then/catch syntax\nconst ee = new EventEmitter();\nee.waitFor("ready", {duration: 100})\n.then(() => console.log("Ready!"))\n.catch(err => console.log(err);\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'// async/await syntax\nconst ee = new EventEmitter();\ntry {\n await ee.waitFor("ready", {duration: 100});\n console.log("Ready!");\n} catch(err) {\n  console.log(err);\n}\n')),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"event"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"string")," ","|"," ",(0,l.kt)("a",{parentName:"td",href:"#EventEmitter.ANY_EVENT"},(0,l.kt)("code",null,"ANY","_","EVENT"))),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"The event to wait for")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[options]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"Object")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"{}")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[options.duration]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"number")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"Infinity")),(0,l.kt)("td",{parentName:"tr",align:null},"The number of milliseconds to wait before the promise is automatically rejected.")))),(0,l.kt)("hr",null),(0,l.kt)("a",{name:"EventEmitter.ANY_EVENT"}),(0,l.kt)("h2",{id:"eventemitterany_event--symbol"},(0,l.kt)("inlineCode",{parentName:"h2"},"EventEmitter.ANY\\_EVENT")," : ",(0,l.kt)("code",null,"Symbol")),(0,l.kt)("p",null,"Identifier to use when trying to add or remove a listener that should be triggered when any\nevents occur."),(0,l.kt)("hr",null),(0,l.kt)("a",{name:"EventEmitter..callback"}),(0,l.kt)("h2",{id:"eventemittercallback--function"},(0,l.kt)("inlineCode",{parentName:"h2"},"EventEmitter~callback")," : ",(0,l.kt)("code",null,"function")),(0,l.kt)("p",null,"The callback function is executed when the associated event is triggered via ",(0,l.kt)("inlineCode",{parentName:"p"},"emit()"),". The\n",(0,l.kt)("inlineCode",{parentName:"p"},"emit()")," method relays all additional arguments it received to the callback functions. Since\n",(0,l.kt)("inlineCode",{parentName:"p"},"emit()")," can be passed a variable number of arguments, it is up to the developer to make sure\nthe arguments match those of the associated callback. In addition, the callback also separately\nreceives all the arguments present in the listener's ",(0,l.kt)("inlineCode",{parentName:"p"},"arguments")," property. This makes it\neasy to pass data from where the listener is added to where the listener is executed."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[...args]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"*")),(0,l.kt)("td",{parentName:"tr",align:null},"A variable number of arguments matching the ones (if any) that were passed to the ",(0,l.kt)("inlineCode",{parentName:"td"},"emit()")," method (except, the first one) followed by the arguments found in the listener's ",(0,l.kt)("inlineCode",{parentName:"td"},"arguments")," array.")))),(0,l.kt)("hr",null))}u.isMDXComponent=!0}}]);