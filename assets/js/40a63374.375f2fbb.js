"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[8692],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return h}});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=a.createContext({}),m=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=m(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),k=m(n),h=l,N=k["".concat(p,".").concat(h)]||k[h]||u[h]||r;return n?a.createElement(N,i(i({ref:t},d),{},{components:n})):a.createElement(N,i({ref:t},d))}));function h(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=k;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var m=2;m<r;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},657:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return m},toc:function(){return d},default:function(){return k}});var a=n(7462),l=n(3366),r=(n(7294),n(3905)),i=["components"],o={},p=void 0,m={unversionedId:"classes/InputChannel",id:"classes/InputChannel",isDocsHomePage:!1,title:"InputChannel",description:"The InputChannel class represents a MIDI input channel (1-16) from a single input device. This",source:"@site/api/classes/InputChannel.md",sourceDirName:"classes",slug:"/classes/InputChannel",permalink:"/webmidi/api/classes/InputChannel",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Input",permalink:"/webmidi/api/classes/Input"},next:{title:"Message",permalink:"/webmidi/api/classes/Message"}},d=[{value:"<code>new InputChannel(input, number)</code>",id:"new-inputchannelinput-number",children:[]},{value:"<code>inputChannel.octaveOffset</code> : <code>number</code>",id:"inputchanneloctaveoffset--number",children:[]},{value:"<code>inputChannel.input</code> : <code>Input</code>",id:"inputchannelinput--input",children:[]},{value:"<code>inputChannel.number</code> : <code>number</code>",id:"inputchannelnumber--number",children:[]},{value:"<code>inputChannel.destroy()</code>",id:"inputchanneldestroy",children:[]},{value:"<code>inputChannel.getChannelModeByNumber(number)</code> \u21d2 <code>string</code> | <code>false</code>",id:"inputchannelgetchannelmodebynumbernumber--string--false",children:[]},{value:"<code>inputChannel.getCcNameByNumber(number)</code> \u21d2 <code>string</code> | <code>undefined</code>",id:"inputchannelgetccnamebynumbernumber--string--undefined",children:[]},{value:"<code>&quot;midimessage&quot;</code>",id:"midimessage",children:[]},{value:"<code>&quot;noteoff&quot;</code>",id:"noteoff",children:[]},{value:"<code>&quot;noteon&quot;</code>",id:"noteon",children:[]},{value:"<code>&quot;keyaftertouch&quot;</code>",id:"keyaftertouch",children:[]},{value:"<code>&quot;controlchange&quot;</code>",id:"controlchange",children:[]},{value:"<code>&quot;programchange&quot;</code>",id:"programchange",children:[]},{value:"<code>&quot;channelaftertouch&quot;</code>",id:"channelaftertouch",children:[]},{value:"<code>&quot;pitchbend&quot;</code>",id:"pitchbend",children:[]},{value:"<code>&quot;allsoundoff&quot;</code>",id:"allsoundoff",children:[]},{value:"<code>&quot;resetallcontrollers&quot;</code>",id:"resetallcontrollers",children:[]},{value:"<code>&quot;localcontrol&quot;</code>",id:"localcontrol",children:[]},{value:"<code>&quot;allnotesoff&quot;</code>",id:"allnotesoff",children:[]},{value:"<code>&quot;omnimode&quot;</code>",id:"omnimode",children:[]},{value:"<code>&quot;monomode&quot;</code>",id:"monomode",children:[]}],u={toc:d};function k(e){var t=e.components,n=(0,l.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("a",{name:"InputChannel"}),(0,r.kt)("h1",{id:"inputchannel"},"InputChannel"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"InputChannel")," class represents a MIDI input channel (1-16) from a single input device. This\nobject is derived from the host's MIDI subsystem and cannot be instantiated directly."),(0,r.kt)("p",null,"All 16 ",(0,r.kt)("inlineCode",{parentName:"p"},"InputChannel")," objects can be found inside the input's ",(0,r.kt)("a",{parentName:"p",href:"Input#channels"},"channels"),"\nproperty."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"InputChannel")," class extends the\n",(0,r.kt)("a",{parentName:"p",href:"https://djipco.github.io/djipevents/EventEmitter.html"},"EventEmitter")," class from the\n",(0,r.kt)("a",{parentName:"p",href:"https://djipco.github.io/djipevents/index.html"},"djipevents")," module. This means\nit also includes methods such as\n",(0,r.kt)("a",{parentName:"p",href:"https://djipco.github.io/djipevents/EventEmitter.html#addListener"},"addListener()"),",\n",(0,r.kt)("a",{parentName:"p",href:"https://djipco.github.io/djipevents/EventEmitter.html#removeListener"},"removeListener()"),",\n",(0,r.kt)("a",{parentName:"p",href:"https://djipco.github.io/djipevents/EventEmitter.html#hasListener"},"hasListener()")," and several\nothers. Check out the\n",(0,r.kt)("a",{parentName:"p",href:"https://djipco.github.io/djipevents/EventEmitter.html"},"documentation for EventEmitter")," for more\ndetails."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Emits"),": ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_midimessage"},(0,r.kt)("code",null,"midimessage")),", ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_noteoff"},(0,r.kt)("code",null,"noteoff")),", ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_noteon"},(0,r.kt)("code",null,"noteon")),", ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_keyaftertouch"},(0,r.kt)("code",null,"keyaftertouch")),", ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_controlchange"},(0,r.kt)("code",null,"controlchange")),", ",(0,r.kt)("code",null,"InputChannel#event:channelmode"),", ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_programchange"},(0,r.kt)("code",null,"programchange")),", ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_channelaftertouch"},(0,r.kt)("code",null,"channelaftertouch")),", ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_pitchbend"},(0,r.kt)("code",null,"pitchbend")),", ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_allnotesoff"},(0,r.kt)("code",null,"allnotesoff")),", ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_allsoundoff"},(0,r.kt)("code",null,"allsoundoff")),", ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_localcontrol"},(0,r.kt)("code",null,"localcontrol")),", ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_monomode"},(0,r.kt)("code",null,"monomode")),", ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_omnimode"},(0,r.kt)("code",null,"omnimode")),", ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_resetallcontrollers"},(0,r.kt)("code",null,"resetallcontrollers")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Since"),": 3.0.0  "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#InputChannel"},"InputChannel")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#new_InputChannel_new"},(0,r.kt)("inlineCode",{parentName:"a"},"new InputChannel(input, number)")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#InputChannel+octaveOffset"},(0,r.kt)("inlineCode",{parentName:"a"},".octaveOffset"))," : ",(0,r.kt)("code",null,"number"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#InputChannel+input"},(0,r.kt)("inlineCode",{parentName:"a"},".input"))," : ",(0,r.kt)("code",null,"Input"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#InputChannel+number"},(0,r.kt)("inlineCode",{parentName:"a"},".number"))," : ",(0,r.kt)("code",null,"number"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#InputChannel+destroy"},(0,r.kt)("inlineCode",{parentName:"a"},".destroy()")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#InputChannel+getChannelModeByNumber"},(0,r.kt)("inlineCode",{parentName:"a"},".getChannelModeByNumber(number)"))," \u21d2 ",(0,r.kt)("code",null,"string")," ","|"," ",(0,r.kt)("code",null,"false"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#InputChannel+getCcNameByNumber"},(0,r.kt)("inlineCode",{parentName:"a"},".getCcNameByNumber(number)"))," \u21d2 ",(0,r.kt)("code",null,"string")," ","|"," ",(0,r.kt)("code",null,"undefined"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_midimessage"},(0,r.kt)("inlineCode",{parentName:"a"},'"midimessage"')))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_noteoff"},(0,r.kt)("inlineCode",{parentName:"a"},'"noteoff"')))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_noteon"},(0,r.kt)("inlineCode",{parentName:"a"},'"noteon"')))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_keyaftertouch"},(0,r.kt)("inlineCode",{parentName:"a"},'"keyaftertouch"')))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_controlchange"},(0,r.kt)("inlineCode",{parentName:"a"},'"controlchange"')))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_programchange"},(0,r.kt)("inlineCode",{parentName:"a"},'"programchange"')))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_channelaftertouch"},(0,r.kt)("inlineCode",{parentName:"a"},'"channelaftertouch"')))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_pitchbend"},(0,r.kt)("inlineCode",{parentName:"a"},'"pitchbend"')))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_allsoundoff"},(0,r.kt)("inlineCode",{parentName:"a"},'"allsoundoff"')))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_resetallcontrollers"},(0,r.kt)("inlineCode",{parentName:"a"},'"resetallcontrollers"')))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_localcontrol"},(0,r.kt)("inlineCode",{parentName:"a"},'"localcontrol"')))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_allnotesoff"},(0,r.kt)("inlineCode",{parentName:"a"},'"allnotesoff"')))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_omnimode"},(0,r.kt)("inlineCode",{parentName:"a"},'"omnimode"')))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_monomode"},(0,r.kt)("inlineCode",{parentName:"a"},'"monomode"'))))))),(0,r.kt)("hr",null),(0,r.kt)("a",{name:"new_InputChannel_new"}),(0,r.kt)("h2",{id:"new-inputchannelinput-number"},(0,r.kt)("inlineCode",{parentName:"h2"},"new InputChannel(input, number)")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"input"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Input")),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("inlineCode",{parentName:"td"},"Input")," object this channel belongs to")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The MIDI channel's number (1-16)")))),(0,r.kt)("hr",null),(0,r.kt)("a",{name:"InputChannel+octaveOffset"}),(0,r.kt)("h2",{id:"inputchanneloctaveoffset--number"},(0,r.kt)("inlineCode",{parentName:"h2"},"inputChannel.octaveOffset")," : ",(0,r.kt)("code",null,"number")),(0,r.kt)("p",null,"An integer to offset the reported octave of incoming note-specific messages (",(0,r.kt)("inlineCode",{parentName:"p"},"noteon"),",\n",(0,r.kt)("inlineCode",{parentName:"p"},"noteoff")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"keyaftertouch"),"). By default, middle C (MIDI note number 60) is placed on the 4th\noctave (C4)."),(0,r.kt)("p",null,"If, for example, ",(0,r.kt)("inlineCode",{parentName:"p"},"octaveOffset")," is set to 2, MIDI note number 60 will be reported as C6. If\n",(0,r.kt)("inlineCode",{parentName:"p"},"octaveOffset")," is set to -1, MIDI note number 60 will be reported as C3."),(0,r.kt)("p",null,"Note that this value is combined with the global offset value defined on the ",(0,r.kt)("inlineCode",{parentName:"p"},"WebMidi")," object\nand with the value defined on the parent ",(0,r.kt)("inlineCode",{parentName:"p"},"Input")," object."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Since"),": 3.0  "),(0,r.kt)("hr",null),(0,r.kt)("a",{name:"InputChannel+input"}),(0,r.kt)("h2",{id:"inputchannelinput--input"},(0,r.kt)("inlineCode",{parentName:"h2"},"inputChannel.input")," : ",(0,r.kt)("code",null,"Input")),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"Input"},"Input")," this channel belongs to"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Since"),": 3.0  "),(0,r.kt)("hr",null),(0,r.kt)("a",{name:"InputChannel+number"}),(0,r.kt)("h2",{id:"inputchannelnumber--number"},(0,r.kt)("inlineCode",{parentName:"h2"},"inputChannel.number")," : ",(0,r.kt)("code",null,"number")),(0,r.kt)("p",null,"This channel's MIDI number (1-16)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Since"),": 3.0  "),(0,r.kt)("hr",null),(0,r.kt)("a",{name:"InputChannel+destroy"}),(0,r.kt)("h2",{id:"inputchanneldestroy"},(0,r.kt)("inlineCode",{parentName:"h2"},"inputChannel.destroy()")),(0,r.kt)("p",null,"Destroys the ",(0,r.kt)("inlineCode",{parentName:"p"},"Input")," by removing all listeners and severing the link with the MIDI subsystem's\ninput."),(0,r.kt)("hr",null),(0,r.kt)("a",{name:"InputChannel+getChannelModeByNumber"}),(0,r.kt)("h2",{id:"inputchannelgetchannelmodebynumbernumber--string--false"},(0,r.kt)("inlineCode",{parentName:"h2"},"inputChannel.getChannelModeByNumber(number)")," \u21d2 ",(0,r.kt)("code",null,"string")," ","|"," ",(0,r.kt)("code",null,"false")),(0,r.kt)("p",null,"Returns the channel mode name matching the specified number. If no match is found, the function\nreturns ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"string")," ","|"," ",(0,r.kt)("code",null,"false")," - The name of the matching channel mode or ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," if not match could be\nfound.",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Since"),": 2.0.0  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"An integer representing the channel mode message.")))),(0,r.kt)("hr",null),(0,r.kt)("a",{name:"InputChannel+getCcNameByNumber"}),(0,r.kt)("h2",{id:"inputchannelgetccnamebynumbernumber--string--undefined"},(0,r.kt)("inlineCode",{parentName:"h2"},"inputChannel.getCcNameByNumber(number)")," \u21d2 ",(0,r.kt)("code",null,"string")," ","|"," ",(0,r.kt)("code",null,"undefined")),(0,r.kt)("p",null,"Returns the name of a control change message matching the specified number. Some valid control\nchange numbers do not have a specific name or purpose assigned in the MIDI\n",(0,r.kt)("a",{parentName:"p",href:"https://midi.org/specifications-old/item/table-3-control-change-messages-data-bytes-2"},"spec"),".\nIn this case, the method returns ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"string")," ","|"," ",(0,r.kt)("code",null,"undefined")," - The matching control change name or ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," if not match was\nfound.",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Throws"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"RangeError")," Invalid control change number.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Since"),": 2.0.0  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"An integer representing the control change message")))),(0,r.kt)("hr",null),(0,r.kt)("a",{name:"InputChannel+event_midimessage"}),(0,r.kt)("h2",{id:"midimessage"},(0,r.kt)("inlineCode",{parentName:"h2"},'"midimessage"')),(0,r.kt)("p",null,"Event emitted when a MIDI message of any kind is received by an ",(0,r.kt)("inlineCode",{parentName:"p"},"InputChannel")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"target"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Input")),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("inlineCode",{parentName:"td"},"InputChannel")," that triggered the event.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"message"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Message")),(0,r.kt)("td",{parentName:"tr",align:null},"A ",(0,r.kt)("inlineCode",{parentName:"td"},"Message")," object containing information about the incoming MIDI message.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"midimessage"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.data"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The MIDI message as an array of 8 bit values (deprecated, use the ",(0,r.kt)("inlineCode",{parentName:"td"},"message")," object instead).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.rawData"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Uint8Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The raw MIDI message as a Uint8Array  (deprecated, use the ",(0,r.kt)("inlineCode",{parentName:"td"},"message")," object instead).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.statusByte"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The message's status byte  (deprecated, use the ",(0,r.kt)("inlineCode",{parentName:"td"},"message")," object instead).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.dataBytes"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Array.","<","number",">")),(0,r.kt)("td",{parentName:"tr",align:null},"The message's data bytes as an array of 0, 1 or 2 integers. This will be null for ",(0,r.kt)("inlineCode",{parentName:"td"},"sysex")," messages (deprecated, use the ",(0,r.kt)("inlineCode",{parentName:"td"},"message")," object instead).")))),(0,r.kt)("hr",null),(0,r.kt)("a",{name:"InputChannel+event_noteoff"}),(0,r.kt)("h2",{id:"noteoff"},(0,r.kt)("inlineCode",{parentName:"h2"},'"noteoff"')),(0,r.kt)("p",null,"Event emitted when a ",(0,r.kt)("strong",{parentName:"p"},"note off")," MIDI message has been received on the channel."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"noteoff"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"target"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel"))),(0,r.kt)("td",{parentName:"tr",align:null},"The object that triggered the event (the ",(0,r.kt)("inlineCode",{parentName:"td"},"InputChannel")," object).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"message"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Message")),(0,r.kt)("td",{parentName:"tr",align:null},"A ",(0,r.kt)("inlineCode",{parentName:"td"},"Message")," object containing information about the incoming MIDI message.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"note"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"A ",(0,r.kt)("a",{parentName:"td",href:"Note"},"Note")," object containing information such as note name, octave and release velocity.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"value"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The release velocity amount expressed as a float between 0 and 1.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rawValue"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The release velocity amount expressed as an integer (between 0 and 127).")))),(0,r.kt)("hr",null),(0,r.kt)("a",{name:"InputChannel+event_noteon"}),(0,r.kt)("h2",{id:"noteon"},(0,r.kt)("inlineCode",{parentName:"h2"},'"noteon"')),(0,r.kt)("p",null,"Event emitted when a ",(0,r.kt)("strong",{parentName:"p"},"note on")," MIDI message has been received."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"noteon"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"channel"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel"))),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("inlineCode",{parentName:"td"},"InputChannel")," object that triggered the event.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.data"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The MIDI message as an array of 8 bit values.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"input"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel"))),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("inlineCode",{parentName:"td"},"Input")," object where through which the message was received.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.rawData"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Uint8Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The raw MIDI message as a ",(0,r.kt)("inlineCode",{parentName:"td"},"Uint8Array"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"target"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel"))),(0,r.kt)("td",{parentName:"tr",align:null},"The object that triggered the event (the ",(0,r.kt)("inlineCode",{parentName:"td"},"InputChannel")," object).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"note"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"A ",(0,r.kt)("a",{parentName:"td",href:"Note"},"Note")," object containing information such as note name, octave and attack velocity.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"value"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The attack velocity amount expressed as a float between 0 and 1.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rawValue"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The attack velocity amount expressed as an integer (between 0 and 127).")))),(0,r.kt)("hr",null),(0,r.kt)("a",{name:"InputChannel+event_keyaftertouch"}),(0,r.kt)("h2",{id:"keyaftertouch"},(0,r.kt)("inlineCode",{parentName:"h2"},'"keyaftertouch"')),(0,r.kt)("p",null,"Event emitted when a ",(0,r.kt)("strong",{parentName:"p"},"key-specific aftertouch")," MIDI message has been received."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"keyaftertouch"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"target"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel"))),(0,r.kt)("td",{parentName:"tr",align:null},"The object that triggered the event (the ",(0,r.kt)("inlineCode",{parentName:"td"},"InputChannel")," object).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"message"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Message")),(0,r.kt)("td",{parentName:"tr",align:null},"A ",(0,r.kt)("inlineCode",{parentName:"td"},"Message")," object containing information about the incoming MIDI message.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"identifier"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The note identifier of the key to apply the aftertouch to. This includes any octave offset applied at the channel, input or global level.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"key"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The MIDI note number of the key to apply the aftertouch to. This includes any octave offset applied at the channel, input or global level.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rawKey"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The MIDI note number of the key to apply the aftertouch to. This excludes any octave offset defined at the channel, input or global level.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"value"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The aftertouch amount expressed as a float between 0 and 1.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rawValue"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The aftertouch amount expressed as an integer (between 0 and 127).")))),(0,r.kt)("hr",null),(0,r.kt)("a",{name:"InputChannel+event_controlchange"}),(0,r.kt)("h2",{id:"controlchange"},(0,r.kt)("inlineCode",{parentName:"h2"},'"controlchange"')),(0,r.kt)("p",null,"Event emitted when a ",(0,r.kt)("strong",{parentName:"p"},"control change")," MIDI message has been received."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"controlchange"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"target"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel"))),(0,r.kt)("td",{parentName:"tr",align:null},"The object that triggered the event (the ",(0,r.kt)("inlineCode",{parentName:"td"},"InputChannel")," object).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"message"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Message")),(0,r.kt)("td",{parentName:"tr",align:null},"A ",(0,r.kt)("inlineCode",{parentName:"td"},"Message")," object containing information about the incoming MIDI message.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"controller"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Object")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"controller.number"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"The number of the controller.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"controller.name"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"The usual name or function of the controller.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"value"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The value expressed as a float between 0 and 1.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rawValue"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The value expressed as an integer (between 0 and 127).")))),(0,r.kt)("hr",null),(0,r.kt)("a",{name:"InputChannel+event_programchange"}),(0,r.kt)("h2",{id:"programchange"},(0,r.kt)("inlineCode",{parentName:"h2"},'"programchange"')),(0,r.kt)("p",null,"Event emitted when a ",(0,r.kt)("strong",{parentName:"p"},"program change")," MIDI message has been received."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"programchange"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"target"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel"))),(0,r.kt)("td",{parentName:"tr",align:null},"The object that triggered the event (the ",(0,r.kt)("inlineCode",{parentName:"td"},"InputChannel")," object).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"message"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Message")),(0,r.kt)("td",{parentName:"tr",align:null},"A ",(0,r.kt)("inlineCode",{parentName:"td"},"Message")," object containing information about the incoming MIDI message.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"value"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The value expressed as an integer between 1 and 128.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rawValue"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The value expressed as an integer between 0 and 127..")))),(0,r.kt)("hr",null),(0,r.kt)("a",{name:"InputChannel+event_channelaftertouch"}),(0,r.kt)("h2",{id:"channelaftertouch"},(0,r.kt)("inlineCode",{parentName:"h2"},'"channelaftertouch"')),(0,r.kt)("p",null,"Event emitted when a control change MIDI message has been received."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"channelaftertouch"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"target"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel"))),(0,r.kt)("td",{parentName:"tr",align:null},"The object that triggered the event (the ",(0,r.kt)("inlineCode",{parentName:"td"},"InputChannel")," object).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"message"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Message")),(0,r.kt)("td",{parentName:"tr",align:null},"A ",(0,r.kt)("inlineCode",{parentName:"td"},"Message")," object containing information about the incoming MIDI message.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"value"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The value expressed as a float between 0 and 1.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rawValue"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The value expressed as an integer (between 0 and 127).")))),(0,r.kt)("hr",null),(0,r.kt)("a",{name:"InputChannel+event_pitchbend"}),(0,r.kt)("h2",{id:"pitchbend"},(0,r.kt)("inlineCode",{parentName:"h2"},'"pitchbend"')),(0,r.kt)("p",null,"Event emitted when a pitch bend MIDI message has been received."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"pitchbend"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"target"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel"))),(0,r.kt)("td",{parentName:"tr",align:null},"The object that triggered the event (the ",(0,r.kt)("inlineCode",{parentName:"td"},"InputChannel")," object).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"message"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Message")),(0,r.kt)("td",{parentName:"tr",align:null},"A ",(0,r.kt)("inlineCode",{parentName:"td"},"Message")," object containing information about the incoming MIDI message.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"value"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The value expressed as a float between 0 and 1.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rawValue"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The value expressed as an integer (between 0 and 16383).")))),(0,r.kt)("hr",null),(0,r.kt)("a",{name:"InputChannel+event_allsoundoff"}),(0,r.kt)("h2",{id:"allsoundoff"},(0,r.kt)("inlineCode",{parentName:"h2"},'"allsoundoff"')),(0,r.kt)("p",null,'Event emitted when an "all sound off" channel-mode MIDI message has been received.'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"allsoundoff"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"target"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel"))),(0,r.kt)("td",{parentName:"tr",align:null},"The object that triggered the event (the ",(0,r.kt)("inlineCode",{parentName:"td"},"InputChannel")," object).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"message"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Message")),(0,r.kt)("td",{parentName:"tr",align:null},"A ",(0,r.kt)("inlineCode",{parentName:"td"},"Message")," object containing information about the incoming MIDI message.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")))),(0,r.kt)("hr",null),(0,r.kt)("a",{name:"InputChannel+event_resetallcontrollers"}),(0,r.kt)("h2",{id:"resetallcontrollers"},(0,r.kt)("inlineCode",{parentName:"h2"},'"resetallcontrollers"')),(0,r.kt)("p",null,'Event emitted when a "reset all controllers" channel-mode MIDI message has been received.'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"resetallcontrollers"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"target"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel"))),(0,r.kt)("td",{parentName:"tr",align:null},"The object that triggered the event (the ",(0,r.kt)("inlineCode",{parentName:"td"},"InputChannel")," object).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"message"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Message")),(0,r.kt)("td",{parentName:"tr",align:null},"A ",(0,r.kt)("inlineCode",{parentName:"td"},"Message")," object containing information about the incoming MIDI message.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")))),(0,r.kt)("hr",null),(0,r.kt)("a",{name:"InputChannel+event_localcontrol"}),(0,r.kt)("h2",{id:"localcontrol"},(0,r.kt)("inlineCode",{parentName:"h2"},'"localcontrol"')),(0,r.kt)("p",null,'Event emitted when a "local control" channel-mode MIDI message has been received. The value\nproperty of the event is set to either ',(0,r.kt)("inlineCode",{parentName:"p"},"true")," (local control on) of ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," (local control\noff)."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"localcontrol"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"target"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel"))),(0,r.kt)("td",{parentName:"tr",align:null},"The object that triggered the event (the ",(0,r.kt)("inlineCode",{parentName:"td"},"InputChannel")," object).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"message"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Message")),(0,r.kt)("td",{parentName:"tr",align:null},"A ",(0,r.kt)("inlineCode",{parentName:"td"},"Message")," object containing information about the incoming MIDI message.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"value"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"For local control on, the value is ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),". For local control off, the value is ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),".")))),(0,r.kt)("hr",null),(0,r.kt)("a",{name:"InputChannel+event_allnotesoff"}),(0,r.kt)("h2",{id:"allnotesoff"},(0,r.kt)("inlineCode",{parentName:"h2"},'"allnotesoff"')),(0,r.kt)("p",null,'Event emitted when an "all notes off" channel-mode MIDI message has been received.'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"allnotesoff"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"target"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel"))),(0,r.kt)("td",{parentName:"tr",align:null},"The object that triggered the event (the ",(0,r.kt)("inlineCode",{parentName:"td"},"InputChannel")," object).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"message"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Message")),(0,r.kt)("td",{parentName:"tr",align:null},"A ",(0,r.kt)("inlineCode",{parentName:"td"},"Message")," object containing information about the incoming MIDI message.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")))),(0,r.kt)("hr",null),(0,r.kt)("a",{name:"InputChannel+event_omnimode"}),(0,r.kt)("h2",{id:"omnimode"},(0,r.kt)("inlineCode",{parentName:"h2"},'"omnimode"')),(0,r.kt)("p",null,'Event emitted when an "omni mode" channel-mode MIDI message has been received. The value\nproperty of the event is set to either ',(0,r.kt)("inlineCode",{parentName:"p"},"true")," (omni mode on) of ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," (omni mode off)."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"omnimode"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"target"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel"))),(0,r.kt)("td",{parentName:"tr",align:null},"The object that triggered the event (the ",(0,r.kt)("inlineCode",{parentName:"td"},"InputChannel")," object).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"message"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Message")),(0,r.kt)("td",{parentName:"tr",align:null},"A ",(0,r.kt)("inlineCode",{parentName:"td"},"Message")," object containing information about the incoming MIDI message.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"value"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"The value is ",(0,r.kt)("inlineCode",{parentName:"td"},"true")," for omni mode on and false for omni mode off.")))),(0,r.kt)("hr",null),(0,r.kt)("a",{name:"InputChannel+event_monomode"}),(0,r.kt)("h2",{id:"monomode"},(0,r.kt)("inlineCode",{parentName:"h2"},'"monomode"')),(0,r.kt)("p",null,'Event emitted when a "mono/poly mode" MIDI message has been received. The value property of\nthe event is set to either ',(0,r.kt)("inlineCode",{parentName:"p"},"true")," (mono mode on / poly mode off) or ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," (mono mode off /\npoly mode on)."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"monomode"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"target"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel"))),(0,r.kt)("td",{parentName:"tr",align:null},"The object that triggered the event (the ",(0,r.kt)("inlineCode",{parentName:"td"},"InputChannel")," object).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"message"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Message")),(0,r.kt)("td",{parentName:"tr",align:null},"A ",(0,r.kt)("inlineCode",{parentName:"td"},"Message")," object containing information about the incoming MIDI message.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"value"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"The value is ",(0,r.kt)("inlineCode",{parentName:"td"},"true")," for omni mode on and false for omni mode off.")))),(0,r.kt)("hr",null))}k.isMDXComponent=!0}}]);