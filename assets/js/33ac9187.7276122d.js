"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[336],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return k}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),d=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=d(e.components);return a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=d(n),k=r,h=u["".concat(p,".").concat(k)]||u[k]||m[k]||l;return n?a.createElement(h,i(i({ref:t},s),{},{components:n})):a.createElement(h,i({ref:t},s))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var d=2;d<l;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4484:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return d},toc:function(){return s},default:function(){return u}});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),i=["components"],o={},p="WebMidi",d={unversionedId:"classes/WebMidi",id:"classes/WebMidi",isDocsHomePage:!1,title:"WebMidi",description:"The WebMidi object makes it easier to work with the low-level Web MIDI API. Basically, it",source:"@site/api/classes/WebMidi.md",sourceDirName:"classes",slug:"/classes/WebMidi",permalink:"/webmidi/api/classes/WebMidi",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Utilities",permalink:"/webmidi/api/classes/Utilities"}},s=[{value:"Members",id:"members",children:[{value:"<code>.defaults</code>",id:"defaults",children:[]},{value:"<code>.enabled</code>",id:"enabled",children:[]},{value:"<code>.inputs</code>",id:"inputs",children:[]},{value:"<code>.interface</code>",id:"interface",children:[]},{value:"<code>.isBrowser</code>",id:"isbrowser",children:[]},{value:"<code>.isNode</code>",id:"isnode",children:[]},{value:"<code>.octaveOffset</code>",id:"octaveoffset",children:[]},{value:"<code>.outputs</code>",id:"outputs",children:[]},{value:"<code>.supported</code>",id:"supported",children:[]},{value:"<code>.sysexEnabled</code>",id:"sysexenabled",children:[]},{value:"<code>.time</code>",id:"time",children:[]},{value:"<code>.validation</code>",id:"validation",children:[]}]},{value:"Methods",id:"methods",children:[{value:"<code>.disable()</code>",id:"disable",children:[]},{value:"<code>.enable(...)</code>",id:"enable",children:[]},{value:"<code>.getInputById(...)</code>",id:"getinputbyid",children:[]},{value:"<code>.getInputByName(...)</code>",id:"getinputbyname",children:[]},{value:"<code>.getOutputById(...)</code>",id:"getoutputbyid",children:[]},{value:"<code>.getOutputByName(...)</code>",id:"getoutputbyname",children:[]}]},{value:"Events",id:"events",children:[{value:'<code>&quot;connected&quot;</code><a id="event:connected"></a>',id:"connected",children:[]},{value:'<code>&quot;disabled&quot;</code><a id="event:disabled"></a>',id:"disabled",children:[]},{value:'<code>&quot;disconnected&quot;</code><a id="event:disconnected"></a>',id:"disconnected",children:[]},{value:'<code>&quot;enabled&quot;</code><a id="event:enabled"></a>',id:"enabled-1",children:[]},{value:'<code>&quot;error&quot;</code><a id="event:error"></a>',id:"error",children:[]},{value:'<code>&quot;midiaccessgranted&quot;</code><a id="event:midiaccessgranted"></a>',id:"midiaccessgranted",children:[]}]}],m={toc:s};function u(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"webmidi"},"WebMidi"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"WebMidi")," object makes it easier to work with the low-level Web MIDI API. Basically, it\nsimplifies sending outgoing MIDI messages and reacting to incoming MIDI messages."),(0,l.kt)("p",null,"When using the WebMidi.js library, you should know that the ",(0,l.kt)("inlineCode",{parentName:"p"},"WebMidi")," class has already been\ninstantiated. You cannot instantiate it yourself. If you use the ",(0,l.kt)("strong",{parentName:"p"},"IIFE")," version, you should\nsimply use the global object called ",(0,l.kt)("inlineCode",{parentName:"p"},"WebMidi"),". If you use the ",(0,l.kt)("strong",{parentName:"p"},"CJS")," (CommonJS) or ",(0,l.kt)("strong",{parentName:"p"},"ESM")," (ES6\nmodule) version, you get an already-instantiated object."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Extends"),": EventEmitter"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Fires"),": ",(0,l.kt)("a",{parentName:"p",href:"WebMidi#event:connected"},(0,l.kt)("inlineCode",{parentName:"a"},"connected")),", ",(0,l.kt)("a",{parentName:"p",href:"WebMidi#event:disabled"},(0,l.kt)("inlineCode",{parentName:"a"},"disabled")),", ",(0,l.kt)("a",{parentName:"p",href:"WebMidi#event:disconnected"},(0,l.kt)("inlineCode",{parentName:"a"},"disconnected")),", ",(0,l.kt)("a",{parentName:"p",href:"WebMidi#event:enabled"},(0,l.kt)("inlineCode",{parentName:"a"},"enabled")),", ",(0,l.kt)("a",{parentName:"p",href:"WebMidi#event:midiaccessgranted"},(0,l.kt)("inlineCode",{parentName:"a"},"midiaccessgranted"))),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"members"},"Members"),(0,l.kt)("h3",{id:"defaults"},(0,l.kt)("inlineCode",{parentName:"h3"},".defaults")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Type"),": Object",(0,l.kt)("br",null)),(0,l.kt)("p",null,"Object containing system-wide default values that can be changed to customize how the library\nworks."),(0,l.kt)("p",null,"  ",(0,l.kt)("strong",{parentName:"p"},"Properties")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"defaults.note"))),(0,l.kt)("td",{parentName:"tr",align:null},"object"),(0,l.kt)("td",{parentName:"tr",align:null},"Default values relating to note")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"defaults.note.attack"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"A number between 0 and 127 representing the default attack velocity of notes. Initial value is 64.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"defaults.note.release"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"A number between 0 and 127 representing the default release velocity of notes. Initial value is 64.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"defaults.note.duration"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"A number representing the default duration of notes (in seconds). Initial value is Infinity.")))),(0,l.kt)("h3",{id:"enabled"},(0,l.kt)("inlineCode",{parentName:"h3"},".enabled")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Type"),": boolean",(0,l.kt)("br",null),"\n",(0,l.kt)("strong",{parentName:"p"},"Attributes"),": read-only",(0,l.kt)("br",null)),(0,l.kt)("p",null,"Indicates whether access to the host's MIDI subsystem is active or not."),(0,l.kt)("h3",{id:"inputs"},(0,l.kt)("inlineCode",{parentName:"h3"},".inputs")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Type"),": Array",(0,l.kt)("br",null),"\n",(0,l.kt)("strong",{parentName:"p"},"Attributes"),": read-only",(0,l.kt)("br",null)),(0,l.kt)("p",null,"An array of all currently available MIDI inputs."),(0,l.kt)("h3",{id:"interface"},(0,l.kt)("inlineCode",{parentName:"h3"},".interface")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Type"),": MIDIAccess",(0,l.kt)("br",null),"\n",(0,l.kt)("strong",{parentName:"p"},"Attributes"),": read-only, nullable",(0,l.kt)("br",null)),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"MIDIAccess")," instance used to talk to the Web MIDI API. This should not be used directly\nunless you know what you are doing."),(0,l.kt)("h3",{id:"isbrowser"},(0,l.kt)("inlineCode",{parentName:"h3"},".isBrowser")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Type"),": boolean",(0,l.kt)("br",null)),(0,l.kt)("p",null,"Indicates whether the current environment is a browser environment or not. If you need to check\nif we are in Node.js, use isNode. In certain environments (such as Electron and NW.js) isNode\nand isBrowser can both be true at the same time."),(0,l.kt)("h3",{id:"isnode"},(0,l.kt)("inlineCode",{parentName:"h3"},".isNode")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Type"),": boolean",(0,l.kt)("br",null)),(0,l.kt)("p",null,"Indicates whether the current environment is Node.js or not. If you need to check if we are in\nbrowser, use isBrowser. In certain environments (such as Electron and NW.js) isNode and\nisBrowser can both be true at the same time."),(0,l.kt)("h3",{id:"octaveoffset"},(0,l.kt)("inlineCode",{parentName:"h3"},".octaveOffset")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Type"),": number",(0,l.kt)("br",null),"\n",(0,l.kt)("strong",{parentName:"p"},"Since"),": 2.1",(0,l.kt)("br",null)),(0,l.kt)("p",null,"An integer to offset the octave of notes received from external devices or sent to external\ndevices."),(0,l.kt)("p",null,"When a MIDI message comes in on an input channel the reported note name will be offset. For\nexample, if the ",(0,l.kt)("inlineCode",{parentName:"p"},"octaveOffset")," is set to ",(0,l.kt)("inlineCode",{parentName:"p"},"-1")," and a ",(0,l.kt)("strong",{parentName:"p"},"note on")," message with MIDI number 60\ncomes in, the note will be reported as C3 (instead of C4)."),(0,l.kt)("p",null,"By the same token, when ",(0,l.kt)("inlineCode",{parentName:"p"},"OutputChannel.playNote()")," is called, the MIDI note number being sent\nwill be offset. If ",(0,l.kt)("inlineCode",{parentName:"p"},"octaveOffset")," is set to ",(0,l.kt)("inlineCode",{parentName:"p"},"-1"),", the MIDI note number sent will be 72 (instead\nof 60)."),(0,l.kt)("h3",{id:"outputs"},(0,l.kt)("inlineCode",{parentName:"h3"},".outputs")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Type"),": Array",(0,l.kt)("br",null),"\n",(0,l.kt)("strong",{parentName:"p"},"Attributes"),": read-only",(0,l.kt)("br",null)),(0,l.kt)("p",null,"An array of all currently available MIDI outputs."),(0,l.kt)("h3",{id:"supported"},(0,l.kt)("inlineCode",{parentName:"h3"},".supported")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Type"),": boolean",(0,l.kt)("br",null),"\n",(0,l.kt)("strong",{parentName:"p"},"Attributes"),": read-only",(0,l.kt)("br",null)),(0,l.kt)("p",null,"Indicates whether the environment provides support for the Web MIDI API or not."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Note"),": in environments that do not offer built-in MIDI support, this will report ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," if\nthe ",(0,l.kt)("inlineCode",{parentName:"p"},"navigator.requestMIDIAccess")," function is available. For example, if you have installed\nWebMIDIAPIShim.js but no plugin, this property will be ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," even though actual support might\nnot be there."),(0,l.kt)("h3",{id:"sysexenabled"},(0,l.kt)("inlineCode",{parentName:"h3"},".sysexEnabled")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Type"),": Boolean",(0,l.kt)("br",null),"\n",(0,l.kt)("strong",{parentName:"p"},"Attributes"),": read-only",(0,l.kt)("br",null)),(0,l.kt)("p",null,"Indicates whether MIDI system exclusive messages have been activated when WebMidi.js was\nenabled via the ",(0,l.kt)("inlineCode",{parentName:"p"},"enable()")," method."),(0,l.kt)("h3",{id:"time"},(0,l.kt)("inlineCode",{parentName:"h3"},".time")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Type"),": DOMHighResTimeStamp",(0,l.kt)("br",null),"\n",(0,l.kt)("strong",{parentName:"p"},"Attributes"),": read-only",(0,l.kt)("br",null)),(0,l.kt)("p",null,"The elapsed time, in milliseconds, since the time\n",(0,l.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/DOMHighResTimeStamp#The_time_origin"},"origin"),".\nSaid simply, it is the number of milliseconds that passed since the page was loaded. Being a\nfloating-point number, it has sub-millisecond accuracy. According to the\n",(0,l.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/DOMHighResTimeStamp"},"documentation"),", the\ntime should be accurate to 5 \xb5s (microseconds). However, due to various constraints, the\nbrowser might only be accurate to one millisecond."),(0,l.kt)("h3",{id:"validation"},(0,l.kt)("inlineCode",{parentName:"h3"},".validation")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Type"),": boolean",(0,l.kt)("br",null)),(0,l.kt)("p",null,"Indicates whether argument validation and backwards-compatibility checks are performed\nthroughout the WebMidi.js library for object methods and property setters."),(0,l.kt)("p",null,"This is an advanced setting that should be used carefully. Setting ",(0,l.kt)("inlineCode",{parentName:"p"},"validation")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),"\nimproves performance but should only be done once the project has been thoroughly tested with\nvalidation turned on."),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("h3",{id:"disable"},(0,l.kt)("inlineCode",{parentName:"h3"},".disable()")),(0,l.kt)("p",null,"Completely disables ",(0,l.kt)("inlineCode",{parentName:"p"},"WebMidi.js")," by unlinking the MIDI subsystem's interface and closing all\n{@link Input} and {@link Output} objects that may be available. This also means that listeners\nadded to {@link Input} objects, {@link Output} objects or to ",(0,l.kt)("inlineCode",{parentName:"p"},"WebMidi")," itself are also\ndestroyed."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns: ")," Promise.","<","void",">",(0,l.kt)("br",null),"\n",(0,l.kt)("strong",{parentName:"p"},"Since"),": 2.0.0",(0,l.kt)("br",null)),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Throws"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Error")," : The Web MIDI API is not supported by your environment.")),(0,l.kt)("h3",{id:"enable"},(0,l.kt)("inlineCode",{parentName:"h3"},".enable(...)")),(0,l.kt)("p",null,"Checks if the Web MIDI API is available in the current environment and then tries to connect to\nthe host's MIDI subsystem. This is an asynchronous operation and it causes a security prompt to\nbe displayed to the user."),(0,l.kt)("p",null,"To enable the use of MIDI system exclusive messages, the ",(0,l.kt)("inlineCode",{parentName:"p"},"sysex")," option should be set to\n",(0,l.kt)("inlineCode",{parentName:"p"},"true"),". However, under some environments (e.g. Jazz-Plugin), the ",(0,l.kt)("inlineCode",{parentName:"p"},"sysex")," option is ignored\nand system exclusive messages are always enabled. You can check the\n","[sysexEnabled]","{@link WebMidi#sysexEnabled} property to confirm."),(0,l.kt)("p",null,"To enable access to software synthesizers available on the host, you would set the ",(0,l.kt)("inlineCode",{parentName:"p"},"software"),"\noption to ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),". However, this option is only there to future-proof the library as support for\nsoftware synths has not yet been implemented in any browser (as of September 2021)."),(0,l.kt)("p",null,"There are 3 ways to execute code after ",(0,l.kt)("inlineCode",{parentName:"p"},"WebMidi")," has been enabled:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Pass a callback function in the ",(0,l.kt)("inlineCode",{parentName:"li"},"options")),(0,l.kt)("li",{parentName:"ul"},"Listen to the ",(0,l.kt)("inlineCode",{parentName:"li"},"enabled")," event"),(0,l.kt)("li",{parentName:"ul"},"Wait for the promise to resolve")),(0,l.kt)("p",null,"In order, this is what happens towards the end of the enabling process:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"midiaccessgranted")," event is triggered"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"connected")," events are triggered (for each available input and output)"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"enabled")," event is triggered when WebMidi.js is ready"),(0,l.kt)("li",{parentName:"ol"},"specified callback (if any) is executed"),(0,l.kt)("li",{parentName:"ol"},"promise is resolved")),(0,l.kt)("p",null,"The promise is fulfilled with the WebMidi object."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Important note"),": starting with Chrome v77, a page using Web MIDI API must be hosted on a\nsecure origin (",(0,l.kt)("inlineCode",{parentName:"p"},"https://"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"localhost")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"file:///"),") and the user will always be prompted to\nauthorize the operation (no matter if the ",(0,l.kt)("inlineCode",{parentName:"p"},"sysex")," option is ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," or not)."),(0,l.kt)("h5",{id:"example"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'// Enabling WebMidi and using the promise\nWebMidi.enable().then(ports => {\n  console.log("WebMidi.js has been enabled!");\n  console.log("Inputs: ", ports.inputs);\n  console.log("Outputs: ", ports.outputs);\n})\n')),(0,l.kt)("p",null,"  ",(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"options")),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"Object"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"options.callback")),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"function"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"A function to execute once the operation completes. This function will receive an ",(0,l.kt)("inlineCode",{parentName:"td"},"Error")," object if enabling the Web MIDI API failed.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"options.sysex")),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether to enable MIDI system exclusive messages or not.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"options.validation")),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether to enable library-wide validation of method arguments and setter values. This is an advanced setting that should be used carefully. Setting ",(0,l.kt)("inlineCode",{parentName:"td"},"validation")," to ",(0,l.kt)("inlineCode",{parentName:"td"},"false")," improves performance but should only be done once the project has been thoroughly tested with validation turned on.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"options.software")),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether to request access to software synthesizers on the host system. This is part of the spec but has not yet been implemented by most browsers as of April 2020.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns: ")," Promise.","<","Object",">",(0,l.kt)("br",null)),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Throws"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Error")," : The Web MIDI API is not supported in your environment."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Error")," : Jazz-Plugin must be installed to use WebMIDIAPIShim.")),(0,l.kt)("h3",{id:"getinputbyid"},(0,l.kt)("inlineCode",{parentName:"h3"},".getInputById(...)")),(0,l.kt)("p",null,"Returns the {@link Input} object that matches the specified ID string or ",(0,l.kt)("inlineCode",{parentName:"p"},"false")," if no matching\ninput is found. As per the Web MIDI API specification, IDs are strings (not integers)."),(0,l.kt)("p",null,"Please note that IDs change from one host to another. For example, Chrome does not use the same\nkind of IDs as Jazz-Plugin."),(0,l.kt)("p",null,"  ",(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"id"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"The ID string of the input. IDs can be viewed by looking at the ","[inputs]","{@link WebMidi#inputs} array. Even though they sometimes look like integers, IDs are strings.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns: ")," Input",(0,l.kt)("br",null),"\n",(0,l.kt)("strong",{parentName:"p"},"Since"),": 2.0.0",(0,l.kt)("br",null)),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Throws"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Error")," : WebMidi is not enabled.")),(0,l.kt)("h3",{id:"getinputbyname"},(0,l.kt)("inlineCode",{parentName:"h3"},".getInputByName(...)")),(0,l.kt)("p",null,"Returns the first {@link Input} object whose name ",(0,l.kt)("strong",{parentName:"p"},"contains")," the specified string. Note that\nthe port names change from one environment to another. For example, Chrome does not report\ninput names in the same way as the Jazz-Plugin does."),(0,l.kt)("p",null,"  ",(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"name"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"The non-empty string to look for within the name of MIDI inputs (such as those visible in the ","[inputs]","{@link WebMidi#inputs} array).")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns: ")," Input",(0,l.kt)("br",null),"\n",(0,l.kt)("strong",{parentName:"p"},"Since"),": 2.0.0",(0,l.kt)("br",null)),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Throws"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Error")," : WebMidi is not enabled.")),(0,l.kt)("h3",{id:"getoutputbyid"},(0,l.kt)("inlineCode",{parentName:"h3"},".getOutputById(...)")),(0,l.kt)("p",null,"Returns the {@link Output} object that matches the specified ID string or ",(0,l.kt)("inlineCode",{parentName:"p"},"false")," if no\nmatching output is found. As per the Web MIDI API specification, IDs are strings (not\nintegers)."),(0,l.kt)("p",null,"Please note that IDs change from one host to another. For example, Chrome does not use the same\nkind of IDs as Jazz-Plugin."),(0,l.kt)("p",null,"  ",(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"id"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"The ID string of the port. IDs can be viewed by looking at the ","[outputs]","{@link WebMidi#outputs} array.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns: ")," Output",(0,l.kt)("br",null),"\n",(0,l.kt)("strong",{parentName:"p"},"Since"),": 2.0.0",(0,l.kt)("br",null)),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Throws"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Error")," : WebMidi is not enabled.")),(0,l.kt)("h3",{id:"getoutputbyname"},(0,l.kt)("inlineCode",{parentName:"h3"},".getOutputByName(...)")),(0,l.kt)("p",null,"Returns the first {@link Output} object whose name ",(0,l.kt)("strong",{parentName:"p"},"contains")," the specified string. Note that\nthe port names change from one environment to another. For example, Chrome does not report\ninput names in the same way as the Jazz-Plugin does."),(0,l.kt)("p",null,"  ",(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"name"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"The non-empty string to look for within the name of MIDI inputs (such as those visible in the ","[outputs]","{@link WebMidi#outputs} array).")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns: ")," Output",(0,l.kt)("br",null),"\n",(0,l.kt)("strong",{parentName:"p"},"Since"),": 2.0.0",(0,l.kt)("br",null)),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Throws"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Error")," : WebMidi is not enabled.")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"events"},"Events"),(0,l.kt)("h3",{id:"connected"},(0,l.kt)("inlineCode",{parentName:"h3"},'"connected"'),(0,l.kt)("a",{id:"event:connected"})),(0,l.kt)("p",null,"Event emitted when an {@link Input} or {@link Output} becomes available. This event is\ntypically fired whenever a MIDI device is plugged in. Please note that it may fire several\ntimes if a device possesses multiple inputs and/or outputs (which is often the case)."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event Properties")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"timestamp"))),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"type"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"connected"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target"))),(0,l.kt)("td",{parentName:"tr",align:null},"Input"),(0,l.kt)("td",{parentName:"tr",align:null},"The {@link Input} or {@link Output} object that triggered the event.")))),(0,l.kt)("h3",{id:"disabled"},(0,l.kt)("inlineCode",{parentName:"h3"},'"disabled"'),(0,l.kt)("a",{id:"event:disabled"})),(0,l.kt)("p",null,"Event emitted once ",(0,l.kt)("inlineCode",{parentName:"p"},"WebMidi")," has been successfully disabled."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event Properties")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"timestamp"))),(0,l.kt)("td",{parentName:"tr",align:null},"DOMHighResTimeStamp"),(0,l.kt)("td",{parentName:"tr",align:null},"The moment when the event occurred (in milliseconds since the navigation start of the document).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target"))),(0,l.kt)("td",{parentName:"tr",align:null},"WebMidi"),(0,l.kt)("td",{parentName:"tr",align:null},"The object that triggered the event")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"type"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"disabled"))))),(0,l.kt)("h3",{id:"disconnected"},(0,l.kt)("inlineCode",{parentName:"h3"},'"disconnected"'),(0,l.kt)("a",{id:"event:disconnected"})),(0,l.kt)("p",null,"Event emitted when an {@link Input} or {@link Output} becomes unavailable. This event is\ntypically fired whenever a MIDI device is unplugged. Please note that it may fire several\ntimes if a device possesses multiple inputs and/or outputs (which is often the case)."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event Properties")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"timestamp"))),(0,l.kt)("td",{parentName:"tr",align:null},"DOMHighResTimeStamp"),(0,l.kt)("td",{parentName:"tr",align:null},"The moment when the event occurred (in milliseconds since the navigation start of the document).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"type"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"disconnected"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target"))),(0,l.kt)("td",{parentName:"tr",align:null},"Object"),(0,l.kt)("td",{parentName:"tr",align:null},"Object with properties describing the {@link Input} or {@Output} that triggered the event.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target.connection"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"closed"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target.id"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"ID of the input")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target.manufacturer"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Manufacturer of the device that provided the input")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target.name"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the device that provided the input")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target.state"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"disconnected"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target.type"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"input")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"output"))))),(0,l.kt)("h3",{id:"enabled-1"},(0,l.kt)("inlineCode",{parentName:"h3"},'"enabled"'),(0,l.kt)("a",{id:"event:enabled"})),(0,l.kt)("p",null,"Event emitted once ",(0,l.kt)("inlineCode",{parentName:"p"},"WebMidi")," has been fully enabled"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event Properties")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"timestamp"))),(0,l.kt)("td",{parentName:"tr",align:null},"DOMHighResTimeStamp"),(0,l.kt)("td",{parentName:"tr",align:null},"The moment when the event occurred (in milliseconds since the navigation start of the document).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target"))),(0,l.kt)("td",{parentName:"tr",align:null},"WebMidi"),(0,l.kt)("td",{parentName:"tr",align:null},"The object that triggered the event")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"type"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"enabled"))))),(0,l.kt)("h3",{id:"error"},(0,l.kt)("inlineCode",{parentName:"h3"},'"error"'),(0,l.kt)("a",{id:"event:error"})),(0,l.kt)("p",null,"Event emitted when an error occurs trying to enable ",(0,l.kt)("inlineCode",{parentName:"p"},"WebMidi")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event Properties")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"timestamp"))),(0,l.kt)("td",{parentName:"tr",align:null},"DOMHighResTimeStamp"),(0,l.kt)("td",{parentName:"tr",align:null},"The moment when the event occurred (in milliseconds since the navigation start of the document).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target"))),(0,l.kt)("td",{parentName:"tr",align:null},"WebMidi"),(0,l.kt)("td",{parentName:"tr",align:null},"The object that triggered the event")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"type"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"error"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"error"))),(0,l.kt)("td",{parentName:"tr",align:null},"*"),(0,l.kt)("td",{parentName:"tr",align:null},"Actual error that occurred")))),(0,l.kt)("h3",{id:"midiaccessgranted"},(0,l.kt)("inlineCode",{parentName:"h3"},'"midiaccessgranted"'),(0,l.kt)("a",{id:"event:midiaccessgranted"})),(0,l.kt)("p",null,"Event emitted once the MIDI interface has been successfully created."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event Properties")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"timestamp"))),(0,l.kt)("td",{parentName:"tr",align:null},"DOMHighResTimeStamp"),(0,l.kt)("td",{parentName:"tr",align:null},"The moment when the event occurred (in milliseconds since the navigation start of the document).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"target"))),(0,l.kt)("td",{parentName:"tr",align:null},"WebMidi"),(0,l.kt)("td",{parentName:"tr",align:null},"The object that triggered the event")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"type"))),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"midiaccessgranted"))))))}u.isMDXComponent=!0}}]);