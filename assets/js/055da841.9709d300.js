"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[684],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,k=d["".concat(p,".").concat(m)]||d[m]||c[m]||o;return n?a.createElement(k,i(i({ref:t},u),{},{components:n})):a.createElement(k,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2784:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return u},default:function(){return d}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],l={},p="Note",s={unversionedId:"classes/Note",id:"classes/Note",isDocsHomePage:!1,title:"Note",description:'The Note class represents a single musical note such as "D3", "G#4", "F-1", "Gb7", etc.',source:"@site/api/classes/Note.md",sourceDirName:"classes",slug:"/classes/Note",permalink:"/webmidi/api/classes/Note",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Message",permalink:"/webmidi/api/classes/Message"},next:{title:"Output",permalink:"/webmidi/api/classes/Output"}},u=[{value:"<code>new Note(...)</code>",id:"new-note",children:[]},{value:"Properties",id:"properties",children:[{value:"<code>.accidental</code>",id:"accidental",children:[]},{value:"<code>.attack</code>",id:"attack",children:[]},{value:"<code>.duration</code>",id:"duration",children:[]},{value:"<code>.identifier</code>",id:"identifier",children:[]},{value:"<code>.name</code>",id:"name",children:[]},{value:"<code>.number</code>",id:"number",children:[]},{value:"<code>.octave</code>",id:"octave",children:[]},{value:"<code>.rawAttack</code>",id:"rawattack",children:[]},{value:"<code>.rawRelease</code>",id:"rawrelease",children:[]},{value:"<code>.release</code>",id:"release",children:[]}]},{value:"Methods",id:"methods",children:[{value:"<code>.getOffsetNumber(...)</code>",id:"getoffsetnumber",children:[]}]}],c={toc:u};function d(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"note"},"Note"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Note")," class represents a single musical note such as ",(0,o.kt)("inlineCode",{parentName:"p"},'"D3"'),", ",(0,o.kt)("inlineCode",{parentName:"p"},'"G#4"'),", ",(0,o.kt)("inlineCode",{parentName:"p"},'"F-1"'),", ",(0,o.kt)("inlineCode",{parentName:"p"},'"Gb7"'),", etc."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Note")," objects can be played back on a single channel by calling\n","[OutputChannel.playNote()]","{@link OutputChannel#playNote} or on multiple channels of the same\noutput by calling ","[Output.playNote()]","{@link Output#playNote}."),(0,o.kt)("p",null,"The note has attack and release velocities set at 0.5 by default. These can be changed by passing\nin the appropriate option. It is also possible to set a system-wide default for attack and\nrelease velocities by using the ",(0,o.kt)("inlineCode",{parentName:"p"},"WebMidi.defaults")," property."),(0,o.kt)("p",null,"The note may have a duration. If it does, playback will be automatically stopped when the\nduration has elapsed by sending a ",(0,o.kt)("strong",{parentName:"p"},"noteoff")," event. By default, the duration is set to\n",(0,o.kt)("inlineCode",{parentName:"p"},"Infinity"),". In this case, it will never stop playing unless explicitly stopped by calling a\nmethod such as ","[OutputChannel.stopNote()]","{@link OutputChannel#stopNote},\n","[Output.stopNote()]","{@link Output#stopNote} or similar."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Since"),": 3.0.0"),(0,o.kt)("h3",{id:"new-note"},(0,o.kt)("inlineCode",{parentName:"h3"},"new Note(...)")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Signature")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Note(value, options, options.duration, options.attack, options.release, options.rawAttack, options.rawRelease)")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Parameters")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"properties"},"Properties"),(0,o.kt)("h3",{id:"accidental"},(0,o.kt)("inlineCode",{parentName:"h3"},".accidental")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Type"),": string"),(0,o.kt)("p",null,"The accidental (#, ##, b or bb) of the note"),(0,o.kt)("h3",{id:"attack"},(0,o.kt)("inlineCode",{parentName:"h3"},".attack")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Type"),": number"),(0,o.kt)("p",null,"The attack velocity of the note as an integer between 0 and 127."),(0,o.kt)("h3",{id:"duration"},(0,o.kt)("inlineCode",{parentName:"h3"},".duration")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Type"),": number"),(0,o.kt)("p",null,"The duration of the note as a positive decimal number representing the number of milliseconds\nthat the note should play for."),(0,o.kt)("h3",{id:"identifier"},(0,o.kt)("inlineCode",{parentName:"h3"},".identifier")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Type"),": string"),(0,o.kt)("p",null,"The name, optional accidental and octave of the note, as a string."),(0,o.kt)("h3",{id:"name"},(0,o.kt)("inlineCode",{parentName:"h3"},".name")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Type"),": string"),(0,o.kt)("p",null,"The name (letter) of the note"),(0,o.kt)("h3",{id:"number"},(0,o.kt)("inlineCode",{parentName:"h3"},".number")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Type"),": number"),(0,o.kt)("p",null,"The MIDI number of the note. This number is derived from the note identifier using C4 as a\nreference for middle C."),(0,o.kt)("h3",{id:"octave"},(0,o.kt)("inlineCode",{parentName:"h3"},".octave")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Type"),": number"),(0,o.kt)("p",null,"The octave of the note"),(0,o.kt)("h3",{id:"rawattack"},(0,o.kt)("inlineCode",{parentName:"h3"},".rawAttack")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Type"),": number"),(0,o.kt)("p",null,"The attack velocity of the note as a positive integer between 0 and 127."),(0,o.kt)("h3",{id:"rawrelease"},(0,o.kt)("inlineCode",{parentName:"h3"},".rawRelease")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Type"),": number"),(0,o.kt)("p",null,"The release velocity of the note as a positive integer between 0 and 127."),(0,o.kt)("h3",{id:"release"},(0,o.kt)("inlineCode",{parentName:"h3"},".release")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Type"),": number"),(0,o.kt)("p",null,"The release velocity of the note as an integer between 0 and 127."),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"methods"},"Methods"),(0,o.kt)("h3",{id:"getoffsetnumber"},(0,o.kt)("inlineCode",{parentName:"h3"},".getOffsetNumber(...)")),(0,o.kt)("p",null,"Returns a MIDI note number offset by the integer specified in the parameter. If the calculated\nvalue is less than 0, 0 will be returned. If the calculated value is more than 127, 127 will be\nreturned. If an invalid value is supplied, 0 will be used."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Signature")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"getOffsetNumber(offset) \u21d2 number")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Parameters")))}d.isMDXComponent=!0}}]);