"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[692],{3905:function(t,e,n){n.d(e,{Zo:function(){return d},kt:function(){return h}});var a=n(7294);function l(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function p(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){l(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function m(t,e){if(null==t)return{};var n,a,l=function(t,e){if(null==t)return{};var n,a,l={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(l[n]=t[n]);return l}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(l[n]=t[n])}return l}var i=a.createContext({}),u=function(t){var e=a.useContext(i),n=e;return t&&(n="function"==typeof t?t(e):p(p({},e),t)),n},d=function(t){var e=u(t.components);return a.createElement(i.Provider,{value:e},t.children)},o={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},k=a.forwardRef((function(t,e){var n=t.components,l=t.mdxType,r=t.originalType,i=t.parentName,d=m(t,["components","mdxType","originalType","parentName"]),k=u(n),h=l,N=k["".concat(i,".").concat(h)]||k[h]||o[h]||r;return n?a.createElement(N,p(p({ref:e},d),{},{components:n})):a.createElement(N,p({ref:e},d))}));function h(t,e){var n=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var r=n.length,p=new Array(r);p[0]=k;var m={};for(var i in e)hasOwnProperty.call(e,i)&&(m[i]=e[i]);m.originalType=t,m.mdxType="string"==typeof t?t:l,p[1]=m;for(var u=2;u<r;u++)p[u]=n[u];return a.createElement.apply(null,p)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},657:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return m},contentTitle:function(){return i},metadata:function(){return u},toc:function(){return d},default:function(){return k}});var a=n(7462),l=n(3366),r=(n(7294),n(3905)),p=["components"],m={},i=void 0,u={unversionedId:"classes/InputChannel",id:"classes/InputChannel",isDocsHomePage:!1,title:"InputChannel",description:"The InputChannel class represents a single input MIDI channel (1-16) from a single input",source:"@site/api/classes/InputChannel.md",sourceDirName:"classes",slug:"/classes/InputChannel",permalink:"/webmidi/api/classes/InputChannel",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Input",permalink:"/webmidi/api/classes/Input"},next:{title:"Note",permalink:"/webmidi/api/classes/Note"}},d=[{value:"new InputChannel(input, number)",id:"new-inputchannelinput-number",children:[]},{value:"inputChannel.input : <code>Input</code>",id:"inputchannelinput--input",children:[]},{value:"inputChannel.number : <code>number</code>",id:"inputchannelnumber--number",children:[]},{value:"inputChannel._parseEvent(e)",id:"inputchannel_parseevente",children:[]},{value:"inputChannel.getChannelModeByNumber(number) \u21d2 <code>string</code> | <code>false</code>",id:"inputchannelgetchannelmodebynumbernumber--string--false",children:[]},{value:"inputChannel.getCcNameByNumber(number) \u21d2 <code>string</code> | <code>false</code>",id:"inputchannelgetccnamebynumbernumber--string--false",children:[]},{value:"&quot;midimessage&quot;",id:"midimessage",children:[]},{value:"&quot;noteoff&quot;",id:"noteoff",children:[]},{value:"&quot;noteon&quot;",id:"noteon",children:[]},{value:"&quot;keyaftertouch&quot;",id:"keyaftertouch",children:[]},{value:"&quot;controlchange&quot;",id:"controlchange",children:[]},{value:"&quot;channelmode&quot;",id:"channelmode",children:[]},{value:"&quot;programchange&quot;",id:"programchange",children:[]},{value:"&quot;channelaftertouch&quot;",id:"channelaftertouch",children:[]},{value:"&quot;pitchbend&quot;",id:"pitchbend",children:[]},{value:"&quot;allsoundoff&quot;",id:"allsoundoff",children:[]},{value:"&quot;resetallcontrollers&quot;",id:"resetallcontrollers",children:[]},{value:"&quot;localcontrol&quot;",id:"localcontrol",children:[]},{value:"&quot;allnotesoff&quot;",id:"allnotesoff",children:[]},{value:"&quot;omnimode&quot;",id:"omnimode",children:[]},{value:"&quot;monomode&quot;",id:"monomode",children:[]}],o={toc:d};function k(t){var e=t.components,n=(0,l.Z)(t,p);return(0,r.kt)("wrapper",(0,a.Z)({},o,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("a",{name:"InputChannel"}),(0,r.kt)("h1",{id:"inputchannel"},"InputChannel"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"InputChannel")," class represents a single input MIDI channel (1-16) from a single input\ndevice. This object is derived from the host's MIDI subsystem and cannot be instantiated\ndirectly."),(0,r.kt)("p",null,"All 16 ",(0,r.kt)("inlineCode",{parentName:"p"},"InputChannel")," objects can be found inside the input's ",(0,r.kt)("a",{parentName:"p",href:"Input#channels"},"channels"),"\nproperty."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"InputChannel")," class extends the\n",(0,r.kt)("a",{parentName:"p",href:"https://djipco.github.io/djipevents/EventEmitter.html"},"EventEmitter")," class from the\n",(0,r.kt)("a",{parentName:"p",href:"https://djipco.github.io/djipevents/index.html"},"djipevents")," module. This means\nit also includes methods such as\n",(0,r.kt)("a",{parentName:"p",href:"https://djipco.github.io/djipevents/EventEmitter.html#addListener"},"addListener()"),",\n",(0,r.kt)("a",{parentName:"p",href:"https://djipco.github.io/djipevents/EventEmitter.html#removeListener"},"removeListener()"),",\n",(0,r.kt)("a",{parentName:"p",href:"https://djipco.github.io/djipevents/EventEmitter.html#hasListener"},"hasListener()")," and several\nothers. Check out the\n",(0,r.kt)("a",{parentName:"p",href:"https://djipco.github.io/djipevents/EventEmitter.html"},"documentation for EventEmitter")," for more\ndetails."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": global class",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Emits"),": ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_midimessage"},(0,r.kt)("code",null,"midimessage")),", ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_noteoff"},(0,r.kt)("code",null,"noteoff")),", ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_noteon"},(0,r.kt)("code",null,"noteon")),", ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_keyaftertouch"},(0,r.kt)("code",null,"keyaftertouch")),", ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_controlchange"},(0,r.kt)("code",null,"controlchange")),", ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_channelmode"},(0,r.kt)("code",null,"channelmode")),", ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_programchange"},(0,r.kt)("code",null,"programchange")),", ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_channelaftertouch"},(0,r.kt)("code",null,"channelaftertouch")),", ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_pitchbend"},(0,r.kt)("code",null,"pitchbend")),", ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_allnotesoff"},(0,r.kt)("code",null,"allnotesoff")),", ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_allsoundoff"},(0,r.kt)("code",null,"allsoundoff")),", ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_localcontrol"},(0,r.kt)("code",null,"localcontrol")),", ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_monomode"},(0,r.kt)("code",null,"monomode")),", ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_omnimode"},(0,r.kt)("code",null,"omnimode")),", ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel+event_resetallcontrollers"},(0,r.kt)("code",null,"resetallcontrollers")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Since"),": 3.0.0  "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#InputChannel"},"InputChannel"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#new_InputChannel_new"},"new InputChannel(input, number)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#InputChannel+input"},".input")," : ",(0,r.kt)("code",null,"Input")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#InputChannel+number"},".number")," : ",(0,r.kt)("code",null,"number")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#InputChannel+_parseEvent"},"._parseEvent(e)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#InputChannel+getChannelModeByNumber"},".getChannelModeByNumber(number)")," \u21d2 ",(0,r.kt)("code",null,"string")," ","|"," ",(0,r.kt)("code",null,"false")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#InputChannel+getCcNameByNumber"},".getCcNameByNumber(number)")," \u21d2 ",(0,r.kt)("code",null,"string")," ","|"," ",(0,r.kt)("code",null,"false")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#InputChannel+event_midimessage"},'"midimessage"')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#InputChannel+event_noteoff"},'"noteoff"')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#InputChannel+event_noteon"},'"noteon"')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#InputChannel+event_keyaftertouch"},'"keyaftertouch"')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#InputChannel+event_controlchange"},'"controlchange"')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#InputChannel+event_channelmode"},'"channelmode"')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#InputChannel+event_programchange"},'"programchange"')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#InputChannel+event_channelaftertouch"},'"channelaftertouch"')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#InputChannel+event_pitchbend"},'"pitchbend"')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#InputChannel+event_allsoundoff"},'"allsoundoff"')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#InputChannel+event_resetallcontrollers"},'"resetallcontrollers"')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#InputChannel+event_localcontrol"},'"localcontrol"')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#InputChannel+event_allnotesoff"},'"allnotesoff"')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#InputChannel+event_omnimode"},'"omnimode"')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#InputChannel+event_monomode"},'"monomode"'))))),(0,r.kt)("a",{name:"new_InputChannel_new"}),(0,r.kt)("h2",{id:"new-inputchannelinput-number"},"new InputChannel(input, number)"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"input"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Input")),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("inlineCode",{parentName:"td"},"Input")," this channel belongs to")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The MIDI channel's number (1-16)")))),(0,r.kt)("a",{name:"InputChannel+input"}),(0,r.kt)("h2",{id:"inputchannelinput--input"},"inputChannel.input : ",(0,r.kt)("code",null,"Input")),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"Input"},"Input")," this channel belongs to"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance property of ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel")),"  "),(0,r.kt)("a",{name:"InputChannel+number"}),(0,r.kt)("h2",{id:"inputchannelnumber--number"},"inputChannel.number : ",(0,r.kt)("code",null,"number")),(0,r.kt)("p",null,"This channel's number (1-16)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance property of ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel")),"  "),(0,r.kt)("a",{name:"InputChannel+_parseEvent"}),(0,r.kt)("h2",{id:"inputchannel_parseevente"},"inputChannel.","_","parseEvent(e)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Access"),": protected  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"e"),(0,r.kt)("td",{parentName:"tr",align:null},"Event")))),(0,r.kt)("a",{name:"InputChannel+getChannelModeByNumber"}),(0,r.kt)("h2",{id:"inputchannelgetchannelmodebynumbernumber--string--false"},"inputChannel.getChannelModeByNumber(number) \u21d2 ",(0,r.kt)("code",null,"string")," ","|"," ",(0,r.kt)("code",null,"false")),(0,r.kt)("p",null,"Returns the channel mode name matching the specified number. If no match is found, the function\nreturns ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"string")," ","|"," ",(0,r.kt)("code",null,"false")," - The name of the matching channel mode or ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," if not match could be\nfound.",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Since"),": 2.0.0  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"An integer representing the channel mode message.")))),(0,r.kt)("a",{name:"InputChannel+getCcNameByNumber"}),(0,r.kt)("h2",{id:"inputchannelgetccnamebynumbernumber--string--false"},"inputChannel.getCcNameByNumber(number) \u21d2 ",(0,r.kt)("code",null,"string")," ","|"," ",(0,r.kt)("code",null,"false")),(0,r.kt)("p",null,"Returns the name of a control change message matching the specified number. Some valid control\nchange numbers do not have a specific name or purpose assigned in the MIDI\n",(0,r.kt)("a",{parentName:"p",href:"https://midi.org/specifications-old/item/table-3-control-change-messages-data-bytes-2"},"spec"),".\nIn this case, the method returns ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"string")," ","|"," ",(0,r.kt)("code",null,"false")," - The matching control change name or ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," if not match was found",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Throws"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("code",null,"RangeError")," Invalid control change number.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Since"),": 2.0.0  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"An integer representing the control change message")))),(0,r.kt)("a",{name:"InputChannel+event_midimessage"}),(0,r.kt)("h2",{id:"midimessage"},'"midimessage"'),(0,r.kt)("p",null,"Event emitted when a MIDI message of any kind is received by the ",(0,r.kt)("inlineCode",{parentName:"p"},"InputChannel"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"target"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel"))),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("inlineCode",{parentName:"td"},"InputChannel")," that triggered the event.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.data"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The MIDI message as an array of 8 bit values.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.rawData"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Uint8Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The raw MIDI message as a Uint8Array.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.statusByte"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The message's status byte.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.dataBytes"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Array.","<","number",">")),(0,r.kt)("td",{parentName:"tr",align:null},"The message's data bytes as an array of 0, 1 or 2 integers. This will be null for ",(0,r.kt)("inlineCode",{parentName:"td"},"sysex")," messages.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"midimessage"'))))),(0,r.kt)("a",{name:"InputChannel+event_noteoff"}),(0,r.kt)("h2",{id:"noteoff"},'"noteoff"'),(0,r.kt)("p",null,"Event emitted when a ",(0,r.kt)("strong",{parentName:"p"},"note off")," MIDI message has been received."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"target"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel"))),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("inlineCode",{parentName:"td"},"InputChannel")," that triggered the event.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.data"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The MIDI message as an array of 8 bit values.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.rawData"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Uint8Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The raw MIDI message as a ",(0,r.kt)("inlineCode",{parentName:"td"},"Uint8Array"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"noteoff"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"note"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"A ",(0,r.kt)("a",{parentName:"td",href:"Note"},"Note")," object containing information such as note number, note name and octave.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"release"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The release velocity expressed as a float between 0 and 1.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rawRelease"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The release velocity expressed as an integer (between 0 and 127).")))),(0,r.kt)("a",{name:"InputChannel+event_noteon"}),(0,r.kt)("h2",{id:"noteon"},'"noteon"'),(0,r.kt)("p",null,"Event emitted when a ",(0,r.kt)("strong",{parentName:"p"},"note on")," MIDI message has been received."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"target"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel"))),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("inlineCode",{parentName:"td"},"InputChannel")," that triggered the event.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.data"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The MIDI message as an array of 8 bit values.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.rawData"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Uint8Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The raw MIDI message as a Uint8Array.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"noteon"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"note"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"A ",(0,r.kt)("a",{parentName:"td",href:"Note"},"Note")," object containing information such as note number, note name and octave.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"attack"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The attack velocity expressed as a float between 0 and 1.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rawAttack"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The attack velocity expressed as an integer (between 0 and 127).")))),(0,r.kt)("a",{name:"InputChannel+event_keyaftertouch"}),(0,r.kt)("h2",{id:"keyaftertouch"},'"keyaftertouch"'),(0,r.kt)("p",null,"Event emitted when a ",(0,r.kt)("strong",{parentName:"p"},"key-specific aftertouch")," MIDI message has been received."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"target"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel"))),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("inlineCode",{parentName:"td"},"InputChannel")," that triggered the event.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.data"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The MIDI message as an array of 8 bit values.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.rawData"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Uint8Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The raw MIDI message as a ",(0,r.kt)("inlineCode",{parentName:"td"},"Uint8Array"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"keyaftertouch"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"note"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"A ",(0,r.kt)("a",{parentName:"td",href:"Note"},"Note")," object containing information such as note number, note name and octave.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"value"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The aftertouch amount expressed as a float between 0 and 1.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rawValue"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The aftertouch amount expressed as an integer (between 0 and 127).")))),(0,r.kt)("a",{name:"InputChannel+event_controlchange"}),(0,r.kt)("h2",{id:"controlchange"},'"controlchange"'),(0,r.kt)("p",null,"Event emitted when a ",(0,r.kt)("strong",{parentName:"p"},"control change")," MIDI message has been received."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"target"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel"))),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("inlineCode",{parentName:"td"},"InputChannel")," that triggered the event.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.data"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The MIDI message as an array of 8 bit values.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.rawData"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Uint8Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The raw MIDI message as a Uint8Array.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"controlchange"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"controller"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Object")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"controller.number"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"The number of the controller.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"controller.name"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"The usual name or function of the controller.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"value"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The value expressed as a float between 0 and 1.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rawValue"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The value expressed as an integer (between 0 and 127).")))),(0,r.kt)("a",{name:"InputChannel+event_channelmode"}),(0,r.kt)("h2",{id:"channelmode"},'"channelmode"'),(0,r.kt)("p",null,"Event emitted when a ",(0,r.kt)("strong",{parentName:"p"},"channel mode")," MIDI message has been received."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"target"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel"))),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("inlineCode",{parentName:"td"},"InputChannel")," that triggered the event.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.data"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The MIDI message as an array of 8 bit values.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.rawData"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Uint8Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The raw MIDI message as a Uint8Array.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"channelmode"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"controller"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Object")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"controller.number"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"The number of the controller.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"controller.name"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"The usual name or function of the controller.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"value"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The value expressed as a float between 0 and 1.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rawValue"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The value expressed as an integer (between 0 and 127).")))),(0,r.kt)("a",{name:"InputChannel+event_programchange"}),(0,r.kt)("h2",{id:"programchange"},'"programchange"'),(0,r.kt)("p",null,"Event emitted when a ",(0,r.kt)("strong",{parentName:"p"},"program change")," MIDI message has been received."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"target"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel"))),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("inlineCode",{parentName:"td"},"InputChannel")," that triggered the event.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.data"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The MIDI message as an array of 8 bit values.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.rawData"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Uint8Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The raw MIDI message as a Uint8Array.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"programchange"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"value"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The value expressed as an integer between 1 and 128.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rawValue"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The value expressed as an integer between 0 and 127.")))),(0,r.kt)("a",{name:"InputChannel+event_channelaftertouch"}),(0,r.kt)("h2",{id:"channelaftertouch"},'"channelaftertouch"'),(0,r.kt)("p",null,"Event emitted when a control change MIDI message has been received."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"target"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel"))),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("inlineCode",{parentName:"td"},"InputChannel")," that triggered the event.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.data"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The MIDI message as an array of 8 bit values.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.rawData"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Uint8Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The raw MIDI message as a Uint8Array.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"channelaftertouch"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"value"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The value expressed as a float between 0 and 1.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rawValue"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The value expressed as an integer (between 0 and 127).")))),(0,r.kt)("a",{name:"InputChannel+event_pitchbend"}),(0,r.kt)("h2",{id:"pitchbend"},'"pitchbend"'),(0,r.kt)("p",null,"Event emitted when a pitch bend MIDI message has been received."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"target"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel"))),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("inlineCode",{parentName:"td"},"InputChannel")," that triggered the event.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.data"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The MIDI message as an array of 8 bit values.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.rawData"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Uint8Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The raw MIDI message as a Uint8Array.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"pitchbend"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"value"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The value expressed as a float between 0 and 1.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rawValue"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The value expressed as an integer (between 0 and 16383).")))),(0,r.kt)("a",{name:"InputChannel+event_allsoundoff"}),(0,r.kt)("h2",{id:"allsoundoff"},'"allsoundoff"'),(0,r.kt)("p",null,'Event emitted when an "all sound off" channel-mode MIDI message has been received.'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"target"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel"))),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("inlineCode",{parentName:"td"},"InputChannel")," that triggered the event.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.data"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The MIDI message as an array of 8 bit values.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.rawData"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Uint8Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The raw MIDI message as a Uint8Array.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"allsoundoff"'))))),(0,r.kt)("a",{name:"InputChannel+event_resetallcontrollers"}),(0,r.kt)("h2",{id:"resetallcontrollers"},'"resetallcontrollers"'),(0,r.kt)("p",null,'Event emitted when a "reset all controllers" channel-mode MIDI message has been received.'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"target"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel"))),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("inlineCode",{parentName:"td"},"InputChannel")," that triggered the event.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.data"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The MIDI message as an array of 8 bit values.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.rawData"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Uint8Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The raw MIDI message as a Uint8Array.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"resetallcontrollers"'))))),(0,r.kt)("a",{name:"InputChannel+event_localcontrol"}),(0,r.kt)("h2",{id:"localcontrol"},'"localcontrol"'),(0,r.kt)("p",null,'Event emitted when a "local control" channel-mode MIDI message has been received. The value\nproperty of the event is set to either ',(0,r.kt)("inlineCode",{parentName:"p"},"true")," (local control on) of ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," (local control\noff)."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"target"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel"))),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("inlineCode",{parentName:"td"},"InputChannel")," that triggered the event.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.data"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The MIDI message as an array of 8 bit values.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.rawData"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Uint8Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The raw MIDI message as a Uint8Array.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"localcontrol"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"value"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"For local control on, the value is ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),". For local control off, the value is ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),".")))),(0,r.kt)("a",{name:"InputChannel+event_allnotesoff"}),(0,r.kt)("h2",{id:"allnotesoff"},'"allnotesoff"'),(0,r.kt)("p",null,'Event emitted when an "all notes off" channel-mode MIDI message has been received.'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"target"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel"))),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("inlineCode",{parentName:"td"},"InputChannel")," that triggered the event.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.data"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The MIDI message as an array of 8 bit values.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.rawData"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Uint8Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The raw MIDI message as a Uint8Array.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"allnotesoff"'))))),(0,r.kt)("a",{name:"InputChannel+event_omnimode"}),(0,r.kt)("h2",{id:"omnimode"},'"omnimode"'),(0,r.kt)("p",null,'Event emitted when an "omni mode" channel-mode MIDI message has been received. The value\nproperty of the event is set to either ',(0,r.kt)("inlineCode",{parentName:"p"},"true")," (omni mode on) of ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," (omni mode off)."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"target"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel"))),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("inlineCode",{parentName:"td"},"InputChannel")," that triggered the event.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.data"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The MIDI message as an array of 8 bit values.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.rawData"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Uint8Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The raw MIDI message as a Uint8Array.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"omnimode"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"value"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"The value is ",(0,r.kt)("inlineCode",{parentName:"td"},"true")," for omni mode on and false for omni mode off.")))),(0,r.kt)("a",{name:"InputChannel+event_monomode"}),(0,r.kt)("h2",{id:"monomode"},'"monomode"'),(0,r.kt)("p",null,'Event emitted when a "mono/poly mode" MIDI message has been received. The value property of\nthe event is set to either ',(0,r.kt)("inlineCode",{parentName:"p"},"true")," (mono mode on / poly mode off) or ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," (mono mode off /\npoly mode on)."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,r.kt)("a",{parentName:"p",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Properties")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"target"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#InputChannel"},(0,r.kt)("code",null,"InputChannel"))),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("inlineCode",{parentName:"td"},"InputChannel")," that triggered the event.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.data"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The MIDI message as an array of 8 bit values.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"event.rawData"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Uint8Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The raw MIDI message as a Uint8Array.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The moment (DOMHighResTimeStamp) when the event occurred (in milliseconds since the navigation start of the document).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"monomode"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"value"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"The value is ",(0,r.kt)("inlineCode",{parentName:"td"},"true")," for omni mode on and false for omni mode off.")))))}k.isMDXComponent=!0}}]);