"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[600],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),u=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,k=d["".concat(o,".").concat(m)]||d[m]||c[m]||s;return n?a.createElement(k,l(l({ref:t},p),{},{components:n})):a.createElement(k,l({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,l=new Array(s);l[0]=d;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var u=2;u<s;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8008:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return o},metadata:function(){return u},toc:function(){return p},default:function(){return d}});var a=n(3117),r=n(102),s=(n(7294),n(3905)),l=["components"],i={},o="Message",u={unversionedId:"classes/Message",id:"classes/Message",isDocsHomePage:!1,title:"Message",description:"The Message class represents a single MIDI message. It has several properties that make it",source:"@site/api/classes/Message.md",sourceDirName:"classes",slug:"/classes/Message",permalink:"/webmidi/api/classes/Message",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Listener",permalink:"/webmidi/api/classes/Listener"},next:{title:"Note",permalink:"/webmidi/api/classes/Note"}},p=[{value:"<code>Constructor</code>",id:"constructor",children:[],level:3},{value:"Properties",id:"properties",children:[{value:"<code>.channel</code>",id:"channel",children:[],level:3},{value:"<code>.command</code>",id:"command",children:[],level:3},{value:"<code>.data</code>",id:"data",children:[],level:3},{value:"<code>.dataBytes</code>",id:"dataBytes",children:[],level:3},{value:"<code>.isChannelMessage</code>",id:"isChannelMessage",children:[],level:3},{value:"<code>.isSystemMessage</code>",id:"isSystemMessage",children:[],level:3},{value:"<code>.manufacturerId</code>",id:"manufacturerId",children:[],level:3},{value:"<code>.rawData</code>",id:"rawData",children:[],level:3},{value:"<code>.rawDataBytes</code>",id:"rawDataBytes",children:[],level:3},{value:"<code>.statusByte</code>",id:"statusByte",children:[],level:3}],level:2}],c={toc:p};function d(e){var t=e.components,n=(0,r.Z)(e,l);return(0,s.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"message"},"Message"),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"Message")," class represents a single MIDI message. It has several properties that make it\neasy to make sense of the binaru data it contains."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Since"),": 3.0.0"),(0,s.kt)("h3",{id:"constructor"},(0,s.kt)("inlineCode",{parentName:"h3"},"Constructor")),(0,s.kt)("p",null,"  ",(0,s.kt)("strong",{parentName:"p"},"Parameters")),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("inlineCode",{parentName:"p"},"new Message(data)"))),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,s.kt)("th",{parentName:"tr",align:null},"Type"),(0,s.kt)("th",{parentName:"tr",align:null},"Default"),(0,s.kt)("th",{parentName:"tr",align:null},"Description"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("inlineCode",{parentName:"strong"},"data"))),(0,s.kt)("td",{parentName:"tr",align:null},"Uint8Array"),(0,s.kt)("td",{parentName:"tr",align:null}),(0,s.kt)("td",{parentName:"tr",align:null},"The raw data of the MIDI message as a Uint8Array of integers between 0 and 255.")))),(0,s.kt)("hr",null),(0,s.kt)("h2",{id:"properties"},"Properties"),(0,s.kt)("h3",{id:"channel"},(0,s.kt)("inlineCode",{parentName:"h3"},".channel")),(0,s.kt)("p",null,"The MIDI channel number (1-16) that the message is targeting. This is only for\nchannel-specific messages. For system messages, this will be left undefined."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type"),": number",(0,s.kt)("br",null),"\n",(0,s.kt)("strong",{parentName:"p"},"Attributes"),": read-only",(0,s.kt)("br",null)),(0,s.kt)("h3",{id:"command"},(0,s.kt)("inlineCode",{parentName:"h3"},".command")),(0,s.kt)("p",null,"An integer identifying the MIDI command. For channel-specific messages, the value will be\nbetween 8 and 14. For system messages, the value will be between 240 and 255."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type"),": number",(0,s.kt)("br",null),"\n",(0,s.kt)("strong",{parentName:"p"},"Attributes"),": read-only",(0,s.kt)("br",null)),(0,s.kt)("h3",{id:"data"},(0,s.kt)("inlineCode",{parentName:"h3"},".data")),(0,s.kt)("p",null,"An array containing the bytes of the MIDI message. Each byte is an integer is between 0 and\n255."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type"),": Array.","<","number",">",(0,s.kt)("br",null),"\n",(0,s.kt)("strong",{parentName:"p"},"Attributes"),": read-only",(0,s.kt)("br",null)),(0,s.kt)("h3",{id:"dataBytes"},(0,s.kt)("inlineCode",{parentName:"h3"},".dataBytes")),(0,s.kt)("p",null,"An array of the the data byte(s) of the MIDI message. When the message is a system exclusive\nmessage (sysex), ",(0,s.kt)("inlineCode",{parentName:"p"},"dataBytes")," explicitly excludes the manufacturer ID and the sysex end\nbyte so only the actual data is included."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type"),": Array.","<","number",">",(0,s.kt)("br",null),"\n",(0,s.kt)("strong",{parentName:"p"},"Attributes"),": read-only",(0,s.kt)("br",null)),(0,s.kt)("h3",{id:"isChannelMessage"},(0,s.kt)("inlineCode",{parentName:"h3"},".isChannelMessage")),(0,s.kt)("p",null,"A boolean indicating whether the MIDI message is a channel-specific message."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type"),": boolean",(0,s.kt)("br",null),"\n",(0,s.kt)("strong",{parentName:"p"},"Attributes"),": read-only",(0,s.kt)("br",null)),(0,s.kt)("h3",{id:"isSystemMessage"},(0,s.kt)("inlineCode",{parentName:"h3"},".isSystemMessage")),(0,s.kt)("p",null,"A boolean indicating whether the MIDI message is a system message (not specific to a\nchannel)."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type"),": boolean",(0,s.kt)("br",null),"\n",(0,s.kt)("strong",{parentName:"p"},"Attributes"),": read-only",(0,s.kt)("br",null)),(0,s.kt)("h3",{id:"manufacturerId"},(0,s.kt)("inlineCode",{parentName:"h3"},".manufacturerId")),(0,s.kt)("p",null,"When the message is a system exclusive message (sysex), this property contains an array with\neither 1 or 3 entries that identify the manufacturer targeted by the message."),(0,s.kt)("p",null,"To know how to translate these entries into manufacturer names, check out the official list:\n",(0,s.kt)("a",{parentName:"p",href:"https://www.midi.org/specifications-old/item/manufacturer-id-numbers"},"https://www.midi.org/specifications-old/item/manufacturer-id-numbers")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type"),": Array.","<","number",">",(0,s.kt)("br",null),"\n",(0,s.kt)("strong",{parentName:"p"},"Attributes"),": read-only",(0,s.kt)("br",null)),(0,s.kt)("h3",{id:"rawData"},(0,s.kt)("inlineCode",{parentName:"h3"},".rawData")),(0,s.kt)("p",null,"A Uint8Array containing the bytes of the MIDI message. Each byte is an integer between 0 and\n255."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type"),": Uint8Array",(0,s.kt)("br",null),"\n",(0,s.kt)("strong",{parentName:"p"},"Attributes"),": read-only",(0,s.kt)("br",null)),(0,s.kt)("h3",{id:"rawDataBytes"},(0,s.kt)("inlineCode",{parentName:"h3"},".rawDataBytes")),(0,s.kt)("p",null,"A Uint8Array of the data byte(s) of the MIDI message. When the message is a system exclusive\nmessage (sysex), ",(0,s.kt)("inlineCode",{parentName:"p"},"rawDataBytes")," explicitly excludes the manufacturer ID and the sysex end\nbyte so only the actual data is included."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type"),": Uint8Array",(0,s.kt)("br",null),"\n",(0,s.kt)("strong",{parentName:"p"},"Attributes"),": read-only",(0,s.kt)("br",null)),(0,s.kt)("h3",{id:"statusByte"},(0,s.kt)("inlineCode",{parentName:"h3"},".statusByte")),(0,s.kt)("p",null,"The MIDI status byte of the message as an integer between 0 and 255."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Type"),": number",(0,s.kt)("br",null),"\n",(0,s.kt)("strong",{parentName:"p"},"Attributes"),": read-only",(0,s.kt)("br",null)))}d.isMDXComponent=!0}}]);