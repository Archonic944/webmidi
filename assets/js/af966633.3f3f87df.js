"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[968],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=i,h=d["".concat(l,".").concat(m)]||d[m]||c[m]||r;return n?a.createElement(h,o(o({ref:t},u),{},{components:n})):a.createElement(h,o({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},355:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return u},default:function(){return d}});var a=n(3117),i=n(102),r=(n(7294),n(3905)),o=["components"],s={sidebar_position:3},l="Basics",p={unversionedId:"getting-started/basics",id:"getting-started/basics",isDocsHomePage:!1,title:"Basics",description:"Enabling the Library",source:"@site/docs/getting-started/basics.md",sourceDirName:"getting-started",slug:"/getting-started/basics",permalink:"/docs/getting-started/basics",editUrl:"https://github.com/djipco/webmidi/edit/master/website/docs/getting-started/basics.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/docs/getting-started/installation"},next:{title:"Middle C & Octave Offset",permalink:"/docs/going-further/middle-c"}},u=[{value:"Enabling the Library",id:"enabling-the-library",children:[],level:2},{value:"Listing Available Devices",id:"listing-available-devices",children:[],level:2},{value:"Listening For Incoming MIDI Messages",id:"listening-for-incoming-midi-messages",children:[],level:2},{value:"Sending Outgoing MIDI Messages",id:"sending-outgoing-midi-messages",children:[],level:2},{value:"What&#39;s Next",id:"whats-next",children:[],level:2}],c={toc:u};function d(e){var t=e.components,n=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"basics"},"Basics"),(0,r.kt)("h2",{id:"enabling-the-library"},"Enabling the Library"),(0,r.kt)("p",null,"The first step to get started is to enable the library. To do that, you simply call\n",(0,r.kt)("a",{parentName:"p",href:"../../api/classes/WebMidi#enable"},(0,r.kt)("inlineCode",{parentName:"a"},"WebMidi.enable()")),". Starting with v3, the ",(0,r.kt)("inlineCode",{parentName:"p"},"enable()")," method returns\na promise which is resolved when the library has been enabled:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'WebMidi\n  .enable()\n  .then(() => console.log("WebMidi enabled!"))\n  .catch(err => alert(err));\n')),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"If you intend to use MIDI ",(0,r.kt)("strong",{parentName:"p"},"system exclusive")," messages, you must explicitly enable them by setting\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"sysex")," option to ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),":"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'WebMidi\n  .enable({sysex: true})\n  .then(() => console.log("WebMidi with sysex enabled!"))\n  .catch(err => alert(err));\n')))),(0,r.kt)("h2",{id:"listing-available-devices"},"Listing Available Devices"),(0,r.kt)("p",null,"To interact with devices you need to know which ",(0,r.kt)("inlineCode",{parentName:"p"},"Input")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Output")," ports are available. Connect a\nMIDI device and try the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"WebMidi\n  .enable()\n  .then(onEnabled)\n  .catch(err => alert(err));\n\nfunction onEnabled() {\n  \n  // Inputs\n  WebMidi.inputs.forEach(input => console.log(input.manufacturer, input.name));\n  \n  // Outputs\n  WebMidi.outputs.forEach(output => console.log(output.manufacturer, output.name));\n\n}\n")),(0,r.kt)("p",null,"You should see your hardware and software devices appear in the console. Note that many devices make\navailable several input and/or output ports. "),(0,r.kt)("p",null,"You can retrieve a reference to an ",(0,r.kt)("a",{parentName:"p",href:"../../api/classes/Input"},(0,r.kt)("inlineCode",{parentName:"a"},"Input"))," by using the\n",(0,r.kt)("a",{parentName:"p",href:"../../api/classes/WebMidi#getInputByName"},(0,r.kt)("inlineCode",{parentName:"a"},"getInputByName()"))," or\n",(0,r.kt)("a",{parentName:"p",href:"../../api/classes/WebMidi#getInputById"},(0,r.kt)("inlineCode",{parentName:"a"},"getInputById()"))," methods:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const myInput = WebMidi.getInputByName("MPK mini 3");\n')),(0,r.kt)("p",null,"Once you have a reference to the input, you can add listeners that will react when a message (such\nas a note press) arrives."),(0,r.kt)("h2",{id:"listening-for-incoming-midi-messages"},"Listening For Incoming MIDI Messages"),(0,r.kt)("p",null,"On a MIDI device, an input has 16 discrete channels. If you want to listen on all of them, you can\nadd a listener directly on the ",(0,r.kt)("a",{parentName:"p",href:"../../api/classes/Input"},(0,r.kt)("inlineCode",{parentName:"a"},"Input"))," object:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const myInput = WebMidi.getInputByName("MPK mini 3");\nmyInput.addListener("noteon", e => {\n  console.log(e.note.identifier);\n})\n')),(0,r.kt)("p",null,"Try playing a note on your device. You should see the note's name and octave in the console."),(0,r.kt)("p",null,"Obviously, you can listen to many more messages coming from your device. For a full list, check out\nthe ",(0,r.kt)("a",{parentName:"p",href:"../../api/classes/Input#addListener"},(0,r.kt)("inlineCode",{parentName:"a"},"Input.addListener()"))," documentation."),(0,r.kt)("p",null,"It is also possible to listen to messages coming from a specific MIDI channel. For example, when\nI press the drum pads on my Akai MPK Mini, the messages are sent to channel 10:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const myInput = WebMidi.getInputByName("MPK mini 3");\nconst mySynth = myInput.channels[10]; // <-- the MIDI channel (10)\n\nmySynth.addListener("noteon", e => {\n  console.log(e.note.identifier, e.message.channel);\n})\n')),(0,r.kt)("p",null,"In this case, the listener only listens to ",(0,r.kt)("strong",{parentName:"p"},"noteon")," messages coming in from channel 10 of the\ninput device."),(0,r.kt)("h2",{id:"sending-outgoing-midi-messages"},"Sending Outgoing MIDI Messages"),(0,r.kt)("p",null,"To send messages to an external device, you must first get a reference to it. For that, you can use\nmethods such as ",(0,r.kt)("a",{parentName:"p",href:"../../api/classes/WebMidi#getOutputByName"},(0,r.kt)("inlineCode",{parentName:"a"},"getOutputByName()"))," or\n",(0,r.kt)("a",{parentName:"p",href:"../../api/classes/WebMidi#getOutputById"},(0,r.kt)("inlineCode",{parentName:"a"},"getOutputById()")),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const myOutput = WebMidi.getOutputByName("SP-404MKII");\n')),(0,r.kt)("p",null,"Then, you can use various methods to send your message. For example, if you want to tell you sampler\nto turn all sounds off, you could do the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const myOutput = WebMidi.getOutputByName("SP-404MKII");\nmyOutput.sendAllSoundOff();\n')),(0,r.kt)("p",null,"You can learn about all the the methods available to send data by looking at the documentation for\nthe ",(0,r.kt)("a",{parentName:"p",href:"../../api/classes/Output"},(0,r.kt)("inlineCode",{parentName:"a"},"Output"))," object."),(0,r.kt)("p",null,"You can send messages to a specific MIDI channel by first grabbing a reference to the channel you\nwant. For example, on the Roland SP-404 MK II sampler, you can control a vocoder effet by sending a\n",(0,r.kt)("strong",{parentName:"p"},"pitchbend")," message on channel 11:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const myOutput = WebMidi.getOutputByName("SP-404MKII");\nconst vocoder = myOutput.channels[11];\nvocoder.sendPitchBend(-0.5);\n')),(0,r.kt)("p",null,"In this case, the ",(0,r.kt)("inlineCode",{parentName:"p"},"vocoder")," constant contains an  ",(0,r.kt)("a",{parentName:"p",href:"../../api/classes/OutputChannel"},(0,r.kt)("inlineCode",{parentName:"a"},"OutputChannel")),"\nobject."),(0,r.kt)("h2",{id:"whats-next"},"What's Next"),(0,r.kt)("p",null,"I hope this short guide helped you getting started. Obviously, the library can do a whole lot more.\nSome of that is covered in the ",(0,r.kt)("strong",{parentName:"p"},"Going Further")," section but all of it is detailed in the ",(0,r.kt)("a",{parentName:"p",href:"../../api/index"},"API\ndocumentation"),"."),(0,r.kt)("p",null,"If you need help, you can ask questions in the\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/djipco/webmidi/discussions"},"Forum"),". If you want to stay posted, I suggest you\nsubscribe to our low-volume ",(0,r.kt)("a",{parentName:"p",href:"https://mailchi.mp/eeffe50651bd/webmidijs-newsletter"},"newsletter")," and\nfollow our ",(0,r.kt)("a",{parentName:"p",href:"https://twitter.com/webmidijs"},"@webmidijs")," account on Twitter."),(0,r.kt)("p",null,"Finally, if this software proves useful I cannot encourage you enough to support it by becoming a\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/sponsors/djipco"},"sponsor")," on GitHub. "),(0,r.kt)("p",null,"-- ",(0,r.kt)("a",{parentName:"p",href:"../../about#who-created-this"},"Jean-Philippe C\xf4t\xe9")))}d.isMDXComponent=!0}}]);