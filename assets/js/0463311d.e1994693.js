"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[600],{3905:function(e,a,t){t.d(a,{Zo:function(){return o},kt:function(){return d}});var n=t(7294);function s(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){s(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,s=function(e,a){if(null==e)return{};var t,n,s={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(s[t]=e[t]);return s}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var m=n.createContext({}),u=function(e){var a=n.useContext(m),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},o=function(e){var a=u(e.components);return n.createElement(m.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},p=n.forwardRef((function(e,a){var t=e.components,s=e.mdxType,r=e.originalType,m=e.parentName,o=i(e,["components","mdxType","originalType","parentName"]),p=u(t),d=s,g=p["".concat(m,".").concat(d)]||p[d]||c[d]||r;return t?n.createElement(g,l(l({ref:a},o),{},{components:t})):n.createElement(g,l({ref:a},o))}));function d(e,a){var t=arguments,s=a&&a.mdxType;if("string"==typeof e||s){var r=t.length,l=new Array(r);l[0]=p;var i={};for(var m in a)hasOwnProperty.call(a,m)&&(i[m]=a[m]);i.originalType=e,i.mdxType="string"==typeof e?e:s,l[1]=i;for(var u=2;u<r;u++)l[u]=t[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},8008:function(e,a,t){t.r(a),t.d(a,{frontMatter:function(){return i},contentTitle:function(){return m},metadata:function(){return u},toc:function(){return o},default:function(){return p}});var n=t(7462),s=t(3366),r=(t(7294),t(3905)),l=["components"],i={},m=void 0,u={unversionedId:"classes/Message",id:"classes/Message",isDocsHomePage:!1,title:"Message",description:"The Message class represents a single MIDI message. It has several properties that make it",source:"@site/api/classes/Message.md",sourceDirName:"classes",slug:"/classes/Message",permalink:"/webmidi/api/classes/Message",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Listener",permalink:"/webmidi/api/classes/Listener"},next:{title:"Note",permalink:"/webmidi/api/classes/Note"}},o=[{value:"new Message(data)",id:"new-messagedata",children:[]},{value:"message.rawData : <code>Uint8Array</code>",id:"messagerawdata--uint8array",children:[]},{value:"message.data : <code>Array.&lt;number&gt;</code>",id:"messagedata--arraynumber",children:[]},{value:"message.statusByte : <code>number</code>",id:"messagestatusbyte--number",children:[]},{value:"message.rawDataBytes : <code>Uint8Array</code>",id:"messagerawdatabytes--uint8array",children:[]},{value:"message.dataBytes : <code>Array.&lt;number&gt;</code>",id:"messagedatabytes--arraynumber",children:[]},{value:"message.isChannelMessage : <code>boolean</code>",id:"messageischannelmessage--boolean",children:[]},{value:"message.isSystemMessage : <code>boolean</code>",id:"messageissystemmessage--boolean",children:[]},{value:"message.command : <code>number</code>",id:"messagecommand--number",children:[]},{value:"message.channel : <code>number</code>",id:"messagechannel--number",children:[]},{value:"message.manufacturerId : <code>Array.&lt;number&gt;</code>",id:"messagemanufacturerid--arraynumber",children:[]}],c={toc:o};function p(e){var a=e.components,t=(0,s.Z)(e,l);return(0,r.kt)("wrapper",(0,n.Z)({},c,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("a",{name:"Message"}),(0,r.kt)("h1",{id:"message"},"Message"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Message")," class represents a single MIDI message. It has several properties that make it\neasy to make sense of the binaru data it contains."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Since"),": 3.0.0  "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#Message"},"Message")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#new_Message_new"},"new Message(data)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#Message+rawData"},".rawData")," : ",(0,r.kt)("code",null,"Uint8Array"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#Message+data"},".data")," : ",(0,r.kt)("code",null,"Array.","<","number",">"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#Message+statusByte"},".statusByte")," : ",(0,r.kt)("code",null,"number"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#Message+rawDataBytes"},".rawDataBytes")," : ",(0,r.kt)("code",null,"Uint8Array"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#Message+dataBytes"},".dataBytes")," : ",(0,r.kt)("code",null,"Array.","<","number",">"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#Message+isChannelMessage"},".isChannelMessage")," : ",(0,r.kt)("code",null,"boolean"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#Message+isSystemMessage"},".isSystemMessage")," : ",(0,r.kt)("code",null,"boolean"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#Message+command"},".command")," : ",(0,r.kt)("code",null,"number"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#Message+channel"},".channel")," : ",(0,r.kt)("code",null,"number"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#Message+manufacturerId"},".manufacturerId")," : ",(0,r.kt)("code",null,"Array.","<","number",">")))))),(0,r.kt)("hr",null),(0,r.kt)("a",{name:"new_Message_new"}),(0,r.kt)("h2",{id:"new-messagedata"},"new Message(data)"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"data"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Uint8Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The raw data of the MIDI message as a Uint8Array of integers between 0 and 255.")))),(0,r.kt)("hr",null),(0,r.kt)("a",{name:"Message+rawData"}),(0,r.kt)("h2",{id:"messagerawdata--uint8array"},"message.rawData : ",(0,r.kt)("code",null,"Uint8Array")),(0,r.kt)("p",null,"A Uint8Array containing the bytes of the MIDI message. Each byte is an integer between 0 and\n255."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Read only"),": true  "),(0,r.kt)("hr",null),(0,r.kt)("a",{name:"Message+data"}),(0,r.kt)("h2",{id:"messagedata--arraynumber"},"message.data : ",(0,r.kt)("code",null,"Array.","<","number",">")),(0,r.kt)("p",null,"An array containing the bytes of the MIDI message. Each byte is an integer is between 0 and\n255."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Read only"),": true  "),(0,r.kt)("hr",null),(0,r.kt)("a",{name:"Message+statusByte"}),(0,r.kt)("h2",{id:"messagestatusbyte--number"},"message.statusByte : ",(0,r.kt)("code",null,"number")),(0,r.kt)("p",null,"The MIDI status byte of the message as an integer between 0 and 255."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Read only"),": true  "),(0,r.kt)("hr",null),(0,r.kt)("a",{name:"Message+rawDataBytes"}),(0,r.kt)("h2",{id:"messagerawdatabytes--uint8array"},"message.rawDataBytes : ",(0,r.kt)("code",null,"Uint8Array")),(0,r.kt)("p",null,"A Uint8Array of the data byte(s) of the MIDI message. When the message is a system exclusive\nmessage (sysex), ",(0,r.kt)("inlineCode",{parentName:"p"},"rawDataBytes")," explicitly excludes the manufacturer ID and the sysex end\nbyte so only the actual data is included."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Read only"),": true  "),(0,r.kt)("hr",null),(0,r.kt)("a",{name:"Message+dataBytes"}),(0,r.kt)("h2",{id:"messagedatabytes--arraynumber"},"message.dataBytes : ",(0,r.kt)("code",null,"Array.","<","number",">")),(0,r.kt)("p",null,"An array of the the data byte(s) of the MIDI message. When the message is a system exclusive\nmessage (sysex), ",(0,r.kt)("inlineCode",{parentName:"p"},"dataBytes")," explicitly excludes the manufacturer ID and the sysex end\nbyte so only the actual data is included."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Read only"),": true  "),(0,r.kt)("hr",null),(0,r.kt)("a",{name:"Message+isChannelMessage"}),(0,r.kt)("h2",{id:"messageischannelmessage--boolean"},"message.isChannelMessage : ",(0,r.kt)("code",null,"boolean")),(0,r.kt)("p",null,"A boolean indicating whether the MIDI message is a channel-specific message."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Read only"),": true  "),(0,r.kt)("hr",null),(0,r.kt)("a",{name:"Message+isSystemMessage"}),(0,r.kt)("h2",{id:"messageissystemmessage--boolean"},"message.isSystemMessage : ",(0,r.kt)("code",null,"boolean")),(0,r.kt)("p",null,"A boolean indicating whether the MIDI message is a system message (not specific to a\nchannel)."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Read only"),": true  "),(0,r.kt)("hr",null),(0,r.kt)("a",{name:"Message+command"}),(0,r.kt)("h2",{id:"messagecommand--number"},"message.command : ",(0,r.kt)("code",null,"number")),(0,r.kt)("p",null,"An integer identifying the MIDI command. For channel-specific messages, the value will be\nbetween 8 and 14. For system messages, the value will be between 240 and 255."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Read only"),": true  "),(0,r.kt)("hr",null),(0,r.kt)("a",{name:"Message+channel"}),(0,r.kt)("h2",{id:"messagechannel--number"},"message.channel : ",(0,r.kt)("code",null,"number")),(0,r.kt)("p",null,"The MIDI channel number (1-16) that the message is targeting. This is only for\nchannel-specific messages. For system messages, this will be left undefined."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Read only"),": true  "),(0,r.kt)("hr",null),(0,r.kt)("a",{name:"Message+manufacturerId"}),(0,r.kt)("h2",{id:"messagemanufacturerid--arraynumber"},"message.manufacturerId : ",(0,r.kt)("code",null,"Array.","<","number",">")),(0,r.kt)("p",null,"When the message is a system exclusive message (sysex), this property contains an array with\neither 1 or 3 entries that identify the manufacturer targeted by the message."),(0,r.kt)("p",null,"To know how to translate these entries into manufacturer names, check out the official list:\n",(0,r.kt)("a",{parentName:"p",href:"https://www.midi.org/specifications-old/item/manufacturer-id-numbers"},"https://www.midi.org/specifications-old/item/manufacturer-id-numbers")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Read only"),": true  "),(0,r.kt)("hr",null))}p.isMDXComponent=!0}}]);