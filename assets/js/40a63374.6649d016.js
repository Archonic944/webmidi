"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[692],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},p=Object.keys(e);for(a=0;a<p.length;a++)n=p[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(a=0;a<p.length;a++)n=p[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),m=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=m(e.components);return a.createElement(u.Provider,{value:t},e.children)},i={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,p=e.originalType,u=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),k=m(n),d=r,c=k["".concat(u,".").concat(d)]||k[d]||i[d]||p;return n?a.createElement(c,l(l({ref:t},s),{},{components:n})):a.createElement(c,l({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var p=n.length,l=new Array(p);l[0]=k;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var m=2;m<p;m++)l[m]=n[m];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},166:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return u},metadata:function(){return m},toc:function(){return s},default:function(){return k}});var a=n(7462),r=n(3366),p=(n(7294),n(3905)),l=["components"],o={},u="InputChannel",m={unversionedId:"classes/InputChannel",id:"classes/InputChannel",isDocsHomePage:!1,title:"InputChannel",description:"The InputChannel class represents a MIDI input channel (1-16) from a single input device. This",source:"@site/api/classes/InputChannel.md",sourceDirName:"classes",slug:"/classes/InputChannel",permalink:"/webmidi/api/classes/InputChannel",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Input",permalink:"/webmidi/api/classes/Input"},next:{title:"Message",permalink:"/webmidi/api/classes/Message"}},s=[{value:"<code>new InputChannel(...)</code>",id:"new-inputchannel",children:[]},{value:"Properties",id:"properties",children:[{value:"<code>.EVENTS</code>",id:"events",children:[]},{value:"<code>.input</code>",id:"input",children:[]},{value:"<code>.number</code>",id:"number",children:[]},{value:"<code>.octaveOffset</code>",id:"octaveoffset",children:[]},{value:"<code>.parameterNumberEventsEnabled</code>",id:"parameternumbereventsenabled",children:[]}]},{value:"Methods",id:"methods",children:[{value:"<code>.destroy()</code>",id:"destroy",children:[]},{value:"<code>.getCcNameByNumber(...)</code>",id:"getccnamebynumber",children:[]},{value:"<code>.getChannelModeByNumber(...)</code>",id:"getchannelmodebynumber",children:[]}]},{value:"Events",id:"events-1",children:[{value:"<code>&quot;allnotesoff&quot;</code>",id:"allnotesoff",children:[]},{value:"<code>&quot;allsoundoff&quot;</code>",id:"allsoundoff",children:[]},{value:"<code>&quot;channelaftertouch&quot;</code>",id:"channelaftertouch",children:[]},{value:"<code>&quot;controlchange&quot;</code>",id:"controlchange",children:[]},{value:"<code>&quot;keyaftertouch&quot;</code>",id:"keyaftertouch",children:[]},{value:"<code>&quot;localcontrol&quot;</code>",id:"localcontrol",children:[]},{value:"<code>&quot;midimessage&quot;</code>",id:"midimessage",children:[]},{value:"<code>&quot;monomode&quot;</code>",id:"monomode",children:[]},{value:"<code>&quot;noteoff&quot;</code>",id:"noteoff",children:[]},{value:"<code>&quot;noteon&quot;</code>",id:"noteon",children:[]},{value:"<code>&quot;nrpndatabuttondecrement&quot;</code>",id:"nrpndatabuttondecrement",children:[]},{value:"<code>&quot;nrpndatabuttonincrement&quot;</code>",id:"nrpndatabuttonincrement",children:[]},{value:"<code>&quot;nrpndataentrycoarse&quot;</code>",id:"nrpndataentrycoarse",children:[]},{value:"<code>&quot;nrpndataentryfine&quot;</code>",id:"nrpndataentryfine",children:[]},{value:"<code>&quot;omnimode&quot;</code>",id:"omnimode",children:[]},{value:"<code>&quot;pitchbend&quot;</code>",id:"pitchbend",children:[]},{value:"<code>&quot;programchange&quot;</code>",id:"programchange",children:[]},{value:"<code>&quot;resetallcontrollers&quot;</code>",id:"resetallcontrollers",children:[]},{value:"<code>&quot;rpndatabuttondecrement&quot;</code>",id:"rpndatabuttondecrement",children:[]},{value:"<code>&quot;rpndatabuttonincrement&quot;</code>",id:"rpndatabuttonincrement",children:[]},{value:"<code>&quot;rpndataentrycoarse&quot;</code>",id:"rpndataentrycoarse",children:[]},{value:"<code>&quot;rpndataentryfine&quot;</code>",id:"rpndataentryfine",children:[]}]}],i={toc:s};function k(e){var t=e.components,n=(0,r.Z)(e,l);return(0,p.kt)("wrapper",(0,a.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("h1",{id:"inputchannel"},"InputChannel"),(0,p.kt)("p",null,"The ",(0,p.kt)("inlineCode",{parentName:"p"},"InputChannel")," class represents a MIDI input channel (1-16) from a single input device. This\nobject is derived from the host's MIDI subsystem and cannot be instantiated directly."),(0,p.kt)("p",null,"All 16 ",(0,p.kt)("inlineCode",{parentName:"p"},"InputChannel")," objects can be found inside the input's ","[channels]","{@link Input#channels}\nproperty."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Since"),": 3.0.0"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Extends"),": ",(0,p.kt)("a",{parentName:"p",href:"EventEmitter"},(0,p.kt)("inlineCode",{parentName:"a"},"EventEmitter"))),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Fires"),": ",(0,p.kt)("a",{parentName:"p",href:"InputChannel#event:midimessage"},(0,p.kt)("inlineCode",{parentName:"a"},"midimessage")),", ",(0,p.kt)("a",{parentName:"p",href:"InputChannel#event:noteoff"},(0,p.kt)("inlineCode",{parentName:"a"},"noteoff")),", ",(0,p.kt)("a",{parentName:"p",href:"InputChannel#event:noteon"},(0,p.kt)("inlineCode",{parentName:"a"},"noteon")),", ",(0,p.kt)("a",{parentName:"p",href:"InputChannel#event:keyaftertouch"},(0,p.kt)("inlineCode",{parentName:"a"},"keyaftertouch")),", ",(0,p.kt)("a",{parentName:"p",href:"InputChannel#event:controlchange"},(0,p.kt)("inlineCode",{parentName:"a"},"controlchange")),", ",(0,p.kt)("a",{parentName:"p",href:"InputChannel#event:programchange"},(0,p.kt)("inlineCode",{parentName:"a"},"programchange")),", ",(0,p.kt)("a",{parentName:"p",href:"InputChannel#event:channelaftertouch"},(0,p.kt)("inlineCode",{parentName:"a"},"channelaftertouch")),", ",(0,p.kt)("a",{parentName:"p",href:"InputChannel#event:pitchbend"},(0,p.kt)("inlineCode",{parentName:"a"},"pitchbend")),", ",(0,p.kt)("a",{parentName:"p",href:"InputChannel#event:allnotesoff"},(0,p.kt)("inlineCode",{parentName:"a"},"allnotesoff")),", ",(0,p.kt)("a",{parentName:"p",href:"InputChannel#event:allsoundoff"},(0,p.kt)("inlineCode",{parentName:"a"},"allsoundoff")),", ",(0,p.kt)("a",{parentName:"p",href:"InputChannel#event:localcontrol"},(0,p.kt)("inlineCode",{parentName:"a"},"localcontrol")),", ",(0,p.kt)("a",{parentName:"p",href:"InputChannel#event:monomode"},(0,p.kt)("inlineCode",{parentName:"a"},"monomode")),", ",(0,p.kt)("a",{parentName:"p",href:"InputChannel#event:omnimode"},(0,p.kt)("inlineCode",{parentName:"a"},"omnimode")),", ",(0,p.kt)("a",{parentName:"p",href:"InputChannel#event:resetallcontrollers"},(0,p.kt)("inlineCode",{parentName:"a"},"resetallcontrollers")),", ",(0,p.kt)("a",{parentName:"p",href:"InputChannel#event:nrpndataentrycoarse"},(0,p.kt)("inlineCode",{parentName:"a"},"nrpndataentrycoarse")),", ",(0,p.kt)("a",{parentName:"p",href:"InputChannel#event:nrpndataentryfine"},(0,p.kt)("inlineCode",{parentName:"a"},"nrpndataentryfine")),", ",(0,p.kt)("a",{parentName:"p",href:"InputChannel#event:nrpndatabuttonincrement"},(0,p.kt)("inlineCode",{parentName:"a"},"nrpndatabuttonincrement")),", ",(0,p.kt)("a",{parentName:"p",href:"InputChannel#event:nrpndatabuttondecrement"},(0,p.kt)("inlineCode",{parentName:"a"},"nrpndatabuttondecrement")),", ",(0,p.kt)("a",{parentName:"p",href:"InputChannel#event:rpndataentrycoarse"},(0,p.kt)("inlineCode",{parentName:"a"},"rpndataentrycoarse")),", ",(0,p.kt)("a",{parentName:"p",href:"InputChannel#event:rpndataentryfine"},(0,p.kt)("inlineCode",{parentName:"a"},"rpndataentryfine")),", ",(0,p.kt)("a",{parentName:"p",href:"InputChannel#event:rpndatabuttonincrement"},(0,p.kt)("inlineCode",{parentName:"a"},"rpndatabuttonincrement")),", ",(0,p.kt)("a",{parentName:"p",href:"InputChannel#event:rpndatabuttondecrement"},(0,p.kt)("inlineCode",{parentName:"a"},"rpndatabuttondecrement"))),(0,p.kt)("h3",{id:"new-inputchannel"},(0,p.kt)("inlineCode",{parentName:"h3"},"new InputChannel(...)")),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Signature")),(0,p.kt)("blockquote",null,(0,p.kt)("p",{parentName:"blockquote"},"InputChannel(input, number)")),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Parameters")),(0,p.kt)("hr",null),(0,p.kt)("h2",{id:"properties"},"Properties"),(0,p.kt)("h3",{id:"events"},(0,p.kt)("inlineCode",{parentName:"h3"},".EVENTS")),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Type"),": Array.","<","string",">"),(0,p.kt)("p",null,"Array of channel-specific event names that can be listened to."),(0,p.kt)("h3",{id:"input"},(0,p.kt)("inlineCode",{parentName:"h3"},".input")),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Type"),": Input"),(0,p.kt)("p",null,"The {@link Input} this channel belongs to"),(0,p.kt)("h3",{id:"number"},(0,p.kt)("inlineCode",{parentName:"h3"},".number")),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Type"),": number"),(0,p.kt)("p",null,"This channel's MIDI number (1-16)"),(0,p.kt)("h3",{id:"octaveoffset"},(0,p.kt)("inlineCode",{parentName:"h3"},".octaveOffset")),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Type"),": number"),(0,p.kt)("p",null,"An integer to offset the reported octave of incoming note-specific messages (",(0,p.kt)("inlineCode",{parentName:"p"},"noteon"),",\n",(0,p.kt)("inlineCode",{parentName:"p"},"noteoff")," and ",(0,p.kt)("inlineCode",{parentName:"p"},"keyaftertouch"),"). By default, middle C (MIDI note number 60) is placed on the 4th\noctave (C4)."),(0,p.kt)("p",null,"If, for example, ",(0,p.kt)("inlineCode",{parentName:"p"},"octaveOffset")," is set to 2, MIDI note number 60 will be reported as C6. If\n",(0,p.kt)("inlineCode",{parentName:"p"},"octaveOffset")," is set to -1, MIDI note number 60 will be reported as C3."),(0,p.kt)("p",null,"Note that this value is combined with the global offset value defined on the ",(0,p.kt)("inlineCode",{parentName:"p"},"WebMidi")," object\nand with the value defined on the parent ",(0,p.kt)("inlineCode",{parentName:"p"},"Input")," object."),(0,p.kt)("h3",{id:"parameternumbereventsenabled"},(0,p.kt)("inlineCode",{parentName:"h3"},".parameterNumberEventsEnabled")),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Type"),": boolean"),(0,p.kt)("p",null,"Indicates whether events for ",(0,p.kt)("strong",{parentName:"p"},"Non-Registered Parameter Number")," should be dispatched. NRPNs\nare composed of a sequence of specific ",(0,p.kt)("strong",{parentName:"p"},"control change")," messages. When a valid sequence of\nsuch control change messages is received, an ",(0,p.kt)("inlineCode",{parentName:"p"},"nrpn")," event will fire."),(0,p.kt)("p",null,"If an invalid or\nout-of-order control change message is received, it will fall through the collector logic and\nall buffered control change messages will be discarded as incomplete."),(0,p.kt)("hr",null),(0,p.kt)("h2",{id:"methods"},"Methods"),(0,p.kt)("h3",{id:"destroy"},(0,p.kt)("inlineCode",{parentName:"h3"},".destroy()")),(0,p.kt)("p",null,"Destroys the ",(0,p.kt)("inlineCode",{parentName:"p"},"Input")," by removing all listeners and severing the link with the MIDI subsystem's\ninput."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Signature")),(0,p.kt)("blockquote",null,(0,p.kt)("p",{parentName:"blockquote"},"destroy()")),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Parameters")),(0,p.kt)("h3",{id:"getccnamebynumber"},(0,p.kt)("inlineCode",{parentName:"h3"},".getCcNameByNumber(...)")),(0,p.kt)("p",null,"Returns the name of a control change message matching the specified number. Some valid control\nchange numbers do not have a specific name or purpose assigned in the MIDI\n",(0,p.kt)("a",{parentName:"p",href:"https://midi.org/specifications-old/item/table-3-control-change-messages-data-bytes-2"},"spec"),".\nIn this case, the method returns ",(0,p.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Signature")),(0,p.kt)("blockquote",null,(0,p.kt)("p",{parentName:"blockquote"},"getCcNameByNumber(number) \u21d2 string")),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Parameters")),(0,p.kt)("h3",{id:"getchannelmodebynumber"},(0,p.kt)("inlineCode",{parentName:"h3"},".getChannelModeByNumber(...)")),(0,p.kt)("p",null,"Returns the channel mode name matching the specified number. If no match is found, the function\nreturns ",(0,p.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Signature")),(0,p.kt)("blockquote",null,(0,p.kt)("p",{parentName:"blockquote"},"getChannelModeByNumber(number) \u21d2 string")),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Parameters")),(0,p.kt)("hr",null),(0,p.kt)("h2",{id:"events-1"},"Events"),(0,p.kt)("h3",{id:"allnotesoff"},(0,p.kt)("inlineCode",{parentName:"h3"},'"allnotesoff"')),(0,p.kt)("p",null,"Type: Object"),(0,p.kt)("p",null,'Event emitted when an "all notes off" channel-mode MIDI message has been received.'),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"type"),":string"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"target"),":InputChannel"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"message"),":Message"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"timestamp"),":number"),(0,p.kt)("h3",{id:"allsoundoff"},(0,p.kt)("inlineCode",{parentName:"h3"},'"allsoundoff"')),(0,p.kt)("p",null,"Type: Object"),(0,p.kt)("p",null,'Event emitted when an "all sound off" channel-mode MIDI message has been received.'),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"type"),":string"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"target"),":InputChannel"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"message"),":Message"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"timestamp"),":number"),(0,p.kt)("h3",{id:"channelaftertouch"},(0,p.kt)("inlineCode",{parentName:"h3"},'"channelaftertouch"')),(0,p.kt)("p",null,"Type: Object"),(0,p.kt)("p",null,"Event emitted when a control change MIDI message has been received."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"type"),":string"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"target"),":InputChannel"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"message"),":Message"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"timestamp"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"value"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"rawValue"),":number"),(0,p.kt)("h3",{id:"controlchange"},(0,p.kt)("inlineCode",{parentName:"h3"},'"controlchange"')),(0,p.kt)("p",null,"Type: Object"),(0,p.kt)("p",null,"Event emitted when a ",(0,p.kt)("strong",{parentName:"p"},"control change")," MIDI message has been received."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"type"),":string"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"target"),":InputChannel"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"message"),":Message"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"timestamp"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"controller"),":Object"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"controller.number"),":Object"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"controller.name"),":Object"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"value"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"rawValue"),":number"),(0,p.kt)("h3",{id:"keyaftertouch"},(0,p.kt)("inlineCode",{parentName:"h3"},'"keyaftertouch"')),(0,p.kt)("p",null,"Type: Object"),(0,p.kt)("p",null,"Event emitted when a ",(0,p.kt)("strong",{parentName:"p"},"key-specific aftertouch")," MIDI message has been received."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"type"),":string"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"target"),":InputChannel"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"message"),":Message"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"timestamp"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"identifier"),":string"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"key"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"rawKey"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"value"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"rawValue"),":number"),(0,p.kt)("h3",{id:"localcontrol"},(0,p.kt)("inlineCode",{parentName:"h3"},'"localcontrol"')),(0,p.kt)("p",null,"Type: Object"),(0,p.kt)("p",null,'Event emitted when a "local control" channel-mode MIDI message has been received. The value\nproperty of the event is set to either ',(0,p.kt)("inlineCode",{parentName:"p"},"true")," (local control on) of ",(0,p.kt)("inlineCode",{parentName:"p"},"false")," (local control\noff)."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"type"),":string"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"target"),":InputChannel"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"message"),":Message"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"timestamp"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"value"),":boolean"),(0,p.kt)("h3",{id:"midimessage"},(0,p.kt)("inlineCode",{parentName:"h3"},'"midimessage"')),(0,p.kt)("p",null,"Type: Object"),(0,p.kt)("p",null,"Event emitted when a MIDI message of any kind is received by an ",(0,p.kt)("inlineCode",{parentName:"p"},"InputChannel")),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"target"),":Input"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"message"),":Message"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"timestamp"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"type"),":string"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"event.data"),":Array"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"event.rawData"),":Uint8Array"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"event.statusByte"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"event.dataBytes"),":Array.","<","number",">"),(0,p.kt)("h3",{id:"monomode"},(0,p.kt)("inlineCode",{parentName:"h3"},'"monomode"')),(0,p.kt)("p",null,"Type: Object"),(0,p.kt)("p",null,'Event emitted when a "mono/poly mode" MIDI message has been received. The value property of\nthe event is set to either ',(0,p.kt)("inlineCode",{parentName:"p"},"true")," (mono mode on / poly mode off) or ",(0,p.kt)("inlineCode",{parentName:"p"},"false")," (mono mode off /\npoly mode on)."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"type"),":string"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"target"),":InputChannel"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"message"),":Message"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"timestamp"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"value"),":boolean"),(0,p.kt)("h3",{id:"noteoff"},(0,p.kt)("inlineCode",{parentName:"h3"},'"noteoff"')),(0,p.kt)("p",null,"Type: Object"),(0,p.kt)("p",null,"Event emitted when a ",(0,p.kt)("strong",{parentName:"p"},"note off")," MIDI message has been received on the channel."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"type"),":string"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"target"),":InputChannel"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"message"),":Message"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"timestamp"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"note"),":Object"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"value"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"rawValue"),":number"),(0,p.kt)("h3",{id:"noteon"},(0,p.kt)("inlineCode",{parentName:"h3"},'"noteon"')),(0,p.kt)("p",null,"Type: Object"),(0,p.kt)("p",null,"Event emitted when a ",(0,p.kt)("strong",{parentName:"p"},"note on")," MIDI message has been received."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"type"),":string"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"channel"),":InputChannel"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"event.data"),":Array"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"input"),":InputChannel"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"event.rawData"),":Uint8Array"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"target"),":InputChannel"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"timestamp"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"note"),":Object"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"value"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"rawValue"),":number"),(0,p.kt)("h3",{id:"nrpndatabuttondecrement"},(0,p.kt)("inlineCode",{parentName:"h3"},'"nrpndatabuttondecrement"')),(0,p.kt)("p",null,"Type: Object"),(0,p.kt)("p",null,"Event emitted when a 'databuttondecrement' NRPN message has been received on the input."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"type"),":string"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"target"),":InputChannel"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"timestamp"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"parameter"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"parameterMsb"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"parameterLsb:"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"value"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"rawValue"),":number"),(0,p.kt)("h3",{id:"nrpndatabuttonincrement"},(0,p.kt)("inlineCode",{parentName:"h3"},'"nrpndatabuttonincrement"')),(0,p.kt)("p",null,"Type: Object"),(0,p.kt)("p",null,"Event emitted when a 'databuttonincrement' NRPN message has been received on the input."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"type"),":string"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"target"),":InputChannel"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"timestamp"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"parameter"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"parameterMsb"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"parameterLsb:"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"value"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"rawValue"),":number"),(0,p.kt)("h3",{id:"nrpndataentrycoarse"},(0,p.kt)("inlineCode",{parentName:"h3"},'"nrpndataentrycoarse"')),(0,p.kt)("p",null,"Type: Object"),(0,p.kt)("p",null,"Event emitted when a 'dataentrycoarse' NRPN message has been received on the input."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"type"),":string"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"target"),":InputChannel"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"timestamp"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"parameter"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"parameterMsb"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"parameterLsb:"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"value"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"rawValue"),":number"),(0,p.kt)("h3",{id:"nrpndataentryfine"},(0,p.kt)("inlineCode",{parentName:"h3"},'"nrpndataentryfine"')),(0,p.kt)("p",null,"Type: Object"),(0,p.kt)("p",null,"Event emitted when a 'dataentryfine' NRPN message has been received on the input."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"type"),":string"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"target"),":InputChannel"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"timestamp"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"parameter"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"parameterMsb"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"parameterLsb:"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"value"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"rawValue"),":number"),(0,p.kt)("h3",{id:"omnimode"},(0,p.kt)("inlineCode",{parentName:"h3"},'"omnimode"')),(0,p.kt)("p",null,"Type: Object"),(0,p.kt)("p",null,'Event emitted when an "omni mode" channel-mode MIDI message has been received. The value\nproperty of the event is set to either ',(0,p.kt)("inlineCode",{parentName:"p"},"true")," (omni mode on) of ",(0,p.kt)("inlineCode",{parentName:"p"},"false")," (omni mode off)."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"type"),":string"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"target"),":InputChannel"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"message"),":Message"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"timestamp"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"value"),":boolean"),(0,p.kt)("h3",{id:"pitchbend"},(0,p.kt)("inlineCode",{parentName:"h3"},'"pitchbend"')),(0,p.kt)("p",null,"Type: Object"),(0,p.kt)("p",null,"Event emitted when a pitch bend MIDI message has been received."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"type"),":string"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"target"),":InputChannel"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"message"),":Message"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"timestamp"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"value"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"rawValue"),":number"),(0,p.kt)("h3",{id:"programchange"},(0,p.kt)("inlineCode",{parentName:"h3"},'"programchange"')),(0,p.kt)("p",null,"Type: Object"),(0,p.kt)("p",null,"Event emitted when a ",(0,p.kt)("strong",{parentName:"p"},"program change")," MIDI message has been received."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"type"),":string"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"target"),":InputChannel"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"message"),":Message"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"timestamp"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"value"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"rawValue"),":number"),(0,p.kt)("h3",{id:"resetallcontrollers"},(0,p.kt)("inlineCode",{parentName:"h3"},'"resetallcontrollers"')),(0,p.kt)("p",null,"Type: Object"),(0,p.kt)("p",null,'Event emitted when a "reset all controllers" channel-mode MIDI message has been received.'),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"type"),":string"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"target"),":InputChannel"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"message"),":Message"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"timestamp"),":number"),(0,p.kt)("h3",{id:"rpndatabuttondecrement"},(0,p.kt)("inlineCode",{parentName:"h3"},'"rpndatabuttondecrement"')),(0,p.kt)("p",null,"Type: Object"),(0,p.kt)("p",null,"Event emitted when a 'databuttondecrement' RPN message has been received on the input."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"type"),":string"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"target"),":InputChannel"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"timestamp"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"parameter"),":string"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"parameterMsb"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"parameterLsb:"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"value"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"rawValue"),":number"),(0,p.kt)("h3",{id:"rpndatabuttonincrement"},(0,p.kt)("inlineCode",{parentName:"h3"},'"rpndatabuttonincrement"')),(0,p.kt)("p",null,"Type: Object"),(0,p.kt)("p",null,"Event emitted when a 'databuttonincrement' RPN message has been received on the input."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"type"),":string"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"target"),":InputChannel"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"timestamp"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"parameter"),":string"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"parameterMsb"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"parameterLsb:"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"value"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"rawValue"),":number"),(0,p.kt)("h3",{id:"rpndataentrycoarse"},(0,p.kt)("inlineCode",{parentName:"h3"},'"rpndataentrycoarse"')),(0,p.kt)("p",null,"Type: Object"),(0,p.kt)("p",null,"Event emitted when a 'dataentrycoarse' RPN message has been received on the input."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"type"),":string"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"target"),":InputChannel"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"timestamp"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"parameter"),":string"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"parameterMsb"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"parameterLsb:"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"value"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"rawValue"),":number"),(0,p.kt)("h3",{id:"rpndataentryfine"},(0,p.kt)("inlineCode",{parentName:"h3"},'"rpndataentryfine"')),(0,p.kt)("p",null,"Type: Object"),(0,p.kt)("p",null,"Event emitted when a 'dataentryfine' RPN message has been received on the input."),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"type"),":string"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"target"),":InputChannel"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"timestamp"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"parameter"),":string"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"parameterMsb"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"parameterLsb:"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"value"),":number"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"rawValue"),":number"))}k.isMDXComponent=!0}}]);